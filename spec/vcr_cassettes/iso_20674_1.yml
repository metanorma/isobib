---
http_interactions:
- request:
    method: get
    uri: https://www.iso.org/cms/render/live/en/sites/isoorg.advancedSearch.do?docNumber=20674&docPartNo=1&status=ENT_ACTIVE,ENT_PROGRESS,ENT_INACTIVE,ENT_DELETED
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json, text/plain, */*
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=F4FB7E42F1D0EFF189E7FEF2BBA7F4B7; Path=/; HttpOnly
      Content-Type:
      - application/json;charset=UTF-8
      Content-Length:
      - '1787'
      Date:
      - Tue, 16 Jul 2019 15:06:22 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: '{"standards":[{"priceGroup":"B","publicationStatus":"Under development","prodsAvailable":true,"docNumber":20674,"langCode":"EN","docEdition":1,"newProjectDate":"2015-07-08
        00:00:00.0","splitPath":"/06/87","docElem":"0","title":"Information and documentation
        -- Transliteration of scripts in use in Thailand -- Part 1: Transliteration
        of Akson-Thai-Noi","stageStart":"2019-02-01","pages":0,"docRef":"ISO/DIS 20674-1","ics":[{"label":"01.140.10","text":"Writing
        and transliteration"}],"tgtDatePub":"2019-07-08 00:00:00.0","publicationStatus_key":"ENT_PROGRESS","docPartNo":10,"pubLangs":"en","sdg_count":0,"stageId":"40.99","csnumber":68790,"committee":{"sector_key":"INFORMATION_PROCESSING_GRAPHICS","level":"Main
        committee","splitPath":"/04/87","level_key":"MAIN_COMMITTEE","title":"Information
        and documentation","reference":"ISO/TC 46","sortKey":"ISO/TC 046","field_key":"TECHNICAL","field":"Technical","id":48750,"sector":"Information
        technology, graphics and photography","status_key":"ENT_ACTIVE","status":"Active"},"docType":10,"avCode":"0","multiLangCode":"10","urn":"iso:std:68790:en","docElemSeq":0,"revises_count":0,"multiLangText":"Monolingual","stages":[{"stageStart":"2015-07-08","stageId":"10.99"},{"stageStart":"2017-02-27","stageId":"30.00"},{"stageStart":"2017-02-27","stageId":"30.20"},{"stageStart":"2017-05-13","stageId":"30.60"},{"stageStart":"2018-07-13","stageId":"30.99"},{"stageStart":"2018-07-13","stageId":"40.00"},{"stageStart":"2018-09-14","stageId":"40.20"},{"stageStart":"2018-12-08","stageId":"40.60"},{"stageStart":"2019-02-01","stageId":"40.99"},{"stageId":"50.00"},{"stageId":"50.20"},{"stageId":"50.60"},{"stageId":"60.60"}],"docPart":"1","associatedCommittees_count":0,"family":"20674-PARTS","supplements_count":0,"revisedBy_count":0,"ics_count":1}]}'
    http_version: 
  recorded_at: Tue, 16 Jul 2019 15:06:22 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/06/87/68790.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=C88A2C66C49534523EB3F3A9AD486164; Path=/; HttpOnly
      Location:
      - "/standard/68790.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 15:06:22 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 15:06:22 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/68790.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=A3C7635B108214AED96024A821AFE387; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 15:06:23 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 15:06:24 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/68790.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=CA4EC43DBF72AF6F165838849007DB63; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 15:06:26 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 15:06:26 GMT
recorded_with: VCR 5.0.0

---
http_interactions:
- request:
    method: get
    uri: https://www.iso.org/cms/render/live/en/sites/isoorg.advancedSearch.do?docNumber=18562&docPartNo=1&status=ENT_ACTIVE,ENT_PROGRESS,ENT_INACTIVE,ENT_DELETED
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json, text/plain, */*
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: ''
    headers:
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=730354058.36895.0000; path=/; Httponly;
        Secure;SameSite=none
      - JSESSIONID=C308A8F0FCCD59042D9331A227DC3BD3; Path=/; HttpOnly
      Vary:
      - accept-encoding
      Content-Type:
      - application/json;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 30 Oct 2020 19:29:54 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 30 Oct 2020 19:29:55 GMT
recorded_with: VCR 6.0.0

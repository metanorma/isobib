---
http_interactions:
- request:
    method: get
    uri: https://www.iso.org/cms/render/live/en/sites/isoorg.advancedSearch.do?docNumber=9945&status=ENT_ACTIVE,ENT_PROGRESS,ENT_INACTIVE,ENT_DELETED
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json, text/plain, */*
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=2261D1B462A9078FA7FBE787D3F6AAA8; Path=/; HttpOnly
      Content-Type:
      - application/json;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Tue, 16 Jul 2019 14:06:42 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:43 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/04/06/40691.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=075FB419D7D50211D82A581773C826C3; Path=/; HttpOnly
      Location:
      - "/standard/40691.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:42 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:43 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/87/38790.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=360F143859C288992878FE3526CCF1A7; Path=/; HttpOnly
      Location:
      - "/standard/38790.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:42 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:43 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/87/38791.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=69D5A855417A4106308BDE463778490C; Path=/; HttpOnly
      Location:
      - "/standard/38791.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:42 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:43 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/38791.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=1AD75180228FC4C83554FCE73A48EA72; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:43 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:44 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/40691.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=677085562922799B1848B550AA157C94; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:45 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:45 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/38790.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=2A028DB3769A9A3510641613247A3C44; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:45 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJlbiIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJlbiI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZW4nCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTy9JRUMgOTk0NS0yOjIwMDMgLSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0tIFBvcnRhYmxlIE9wZXJhdGluZyBTeXN0ZW0gSW50ZXJmYWNlIChQT1NJWCkgLS0gUGFydCAyOiBTeXN0ZW0gSW50ZXJmYWNlczwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgoKICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgp2YXIgY29udGV4dEpzUGFyYW1ldGVycz17Y29udGV4dFBhdGg6IiIsbGFuZzoiZW4iLHVpbGFuZzoiZW4iLHNpdGVVdWlkOiI0MzkxNDZmOC02NzdlLTRkZGUtYjZjNi1iNjkyYjc1MzRmNTIiLHdjYWc6ZmFsc2UsY2tlQ2ZnOiIifTsgdmFyIENLRURJVE9SX0JBU0VQQVRIPSIvbW9kdWxlcy9ja2VkaXRvci9qYXZhc2NyaXB0LyI7IHZhciBzY2F5dF9jdXN0b21fcGFyYW1zPW5ldyBBcnJheSgpOyBzY2F5dF9jdXN0b21fcGFyYW1zWydzTGFuZyddPSdlbl9VUyc7Cjwvc2NyaXB0Pgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MwIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3Mvd29vZC5taW4uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzEiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9jdXN0b20uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvYXNzZXRzL2Nzcy9sYW5ndWFnZVN3aXRjaGluZ0xpbmtzLmNzcz8xNTMyMDAzNTA1NzY2IiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9jc3MvY2F0YWxvZ3VlLmNzcz8xNTYwNzU5NTkwMTExIiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2phdmFzY3JpcHQvd29vZC5taW4uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDEiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc28tamFoaWEtc2VydmljZS1tb2R1bGUvamF2YXNjcmlwdC9jYXRhbG9ndWUuanM/MTU2MDc1OTU5MDExMSI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC9jdXN0b20uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CgogICAgICA8IS0tW2lmIGx0ZSBJRSA5XT4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9pZTkud29vZC5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3MvbHRlLWllOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAgIDwhLS0gSFRNTDUgU2hpbSBhbmQgUmVzcG9uZC5qcyBJRTggc3VwcG9ydCBvZiBIVE1MNSBlbGVtZW50cyBhbmQgbWVkaWEgcXVlcmllcyAtLT4KICAgICAgPCEtLSBXQVJOSU5HOiBSZXNwb25kLmpzIGRvZXNuJ3Qgd29yayBpZiB5b3UgdmlldyB0aGUgcGFnZSB2aWEgZmlsZTovLyAtLT4KICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9odG1sNXNoaXYvMy43LjAvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgPCFbZW5kaWZdLS0+CiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZW4vc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjIwMDkwOTE1IiAvPgogIAoKICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGlzb3N0YW5kYXJkcyIgLz4KCiAgPCEtLSBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iSVNPIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9jbXMvcmVuZGVyL2xpdmUvZW4vc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDMvODcvMzg3OTAuaHRtbCIgLz4KICAKICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIAogICAgPCEtLSBUaHVtYm5haWwgaW1hZ2UgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InRodW1ibmFpbCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6YWx0IiBjb250ZW50PSJJU08gbG9nbyIgLz4KICAKICAgIDwhLS0gVGl0bGUgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0yOjIwMDMiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0yOjIwMDMiIC8+CiAgCiAgICA8IS0tIERlc2NyaXB0aW9uIChmb3IgZ29vZ2xlLCB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkluZm9ybWF0aW9uIHRlY2hub2xvZ3kgLS0gUG9ydGFibGUgT3BlcmF0aW5nIFN5c3RlbSBJbnRlcmZhY2UgKFBPU0lYKSAtLSBQYXJ0IDI6IFN5c3RlbSBJbnRlcmZhY2VzIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0tIFBvcnRhYmxlIE9wZXJhdGluZyBTeXN0ZW0gSW50ZXJmYWNlIChQT1NJWCkgLS0gUGFydCAyOiBTeXN0ZW0gSW50ZXJmYWNlcyIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0tIFBvcnRhYmxlIE9wZXJhdGluZyBTeXN0ZW0gSW50ZXJmYWNlIChQT1NJWCkgLS0gUGFydCAyOiBTeXN0ZW0gSW50ZXJmYWNlcyIgLz4KICAKCiAgPCEtLSBGYWNlYm9vayBhZG1pbnMgOiBMaW9uZWwsTWFyaWEgLS0+CiAgPG1ldGEgcHJvcGVydHk9ImZiOmFkbWlucyIgY29udGVudD0iMTAwMDAxMTE2MDc5Njc2LDEwMDAwMTQ0MDAwMzMwNSIgLz4KCiAgCgo8L2hlYWQ+CiAgPGJvZHkgY2xhc3M9InRoZW1lLXJlZCI+CiAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgogICAgPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1URkdLUVFCIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0PgogICAgPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CgogICAgPCEtLSBIZWFkZXIgSVNPLk9SRyAtLT4KICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciBoZWFkZXItaXNvIGNvbnRhaW5lciIgcm9sZT0iYmFubmVyIj4KICAgICAgPGRpdiBjbGFzcz0icnViYmVyIj48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idG9wYmFyIHRvcGJhci1saWdodCI+CiAgICAgICAgPGRpdiBjbGFzcz0idG9wYmFyLWNvbnRlbnQiPgogICAgICAgICAgCgo8dWwgaWQ9Imxhbmctc3dpdGNoZXIiPgogIDxsaSBjbGFzcz0iZHJvcGRvd24iPgogICAgPGEgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBocmVmPSIjIj5FbmdsaXNoIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPjwvYT4KICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgIDxsaT48YSBocmVmPSIvZnIvc3RhbmRhcmQvMzg3OTAuaHRtbCI+ZnJhbsOnYWlzPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9ydS9zdGFuZGFyZC8zODc5MC5odG1sIj7RgNGD0YHRgdC60LjQuTwvYT48L2xpPgogICAgPC91bD4KICA8L2xpPgo8L3VsPjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICAgIDx1bCBjbGFzcz0idG9wbGlua3MiPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgY2xhc3M9InNob3BwaW5nLWNhcnQtbGluayIgaHJlZj0iL3dlYnN0b3JlL3Nob3BwaW5nYmFza2V0P21lbWJlcklkPUlTTyZndWlsYW5nPWVuIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNob3BwaW5nLWNhcnQtYmFkZ2UiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zaG9wcGluZy1jYXJ0IiBpZD0ic2hvcHBpbmdJdGVtcyI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci1jb250YWluZXIgaGVhZGVyLWltZyBoZWFkZXItaW1nLWlzbyBoZWFkZXItc2hvcnQiPgogICAgICAgIDxuYXYgY2xhc3M9Im5hdmJhciIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgICA8IS0tIEJyYW5kIGFuZCB0b2dnbGUgZ2V0IGdyb3VwZWQgZm9yIGJldHRlciBtb2JpbGUgZGlzcGxheSAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICA8YSBjbGFzcz0ibG9nbyBpc29sb2dvIiBocmVmPSIvaG9tZS5odG1sIiB0aXRsZT0iSVNPIj48L2E+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imlzb2xvZ28tcHJpbnQiPjxpbWcgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIGFsdD0iSVNPIGxvZ28gZm9yIHByaW50Ii8+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci10aXRsZSBjbGVhcmZpeCI+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlLW1lZGl1bSB0aXRsZS10aGluIj5JbnRlcm5hdGlvbmFsIE9yZ2FuaXphdGlvbiBmb3IgU3RhbmRhcmRpemF0aW9uPC9wPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZS1zbWFsbCB0aXRsZS1yZWQgdGV4dC1yaWdodCBoaWRkZW4teHMiPldoZW4gdGhlIHdvcmxkIGFncmVlczwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwhLS0gTkFWSUdBVElPTiAtLT4KICAgICAgICAgIDxuYXYgY2xhc3M9Im5hdi1jb250YWluZXIgY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlIG5hdi0zbGV2ZWxzImlkPSJvZmZjYW52YXMtbWVudSI+CgoKPGZvcm0gaWQ9Im5hdk1lbnUtc2VhcmNoTmF2IiBjbGFzcz0ibmF2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0IiByb2xlPSJzZWFyY2giPgogIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIHNlYXJjaC1pbnB1dCIgcGxhY2Vob2xkZXI9IlNlYXJjaCI+CiAgICA8c3BhbiBjbGFzcz0iaW5wdXQtZ3JvdXAtYnRuIj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IHNlYXJjaC1zdWJtaXQiIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L3NwYW4+CiAgICAgIDwvYnV0dG9uPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8L2Zvcm0+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwxIHZlcnRpY2FsaW5lIG5vY2FyZXQiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0YW5kYXJkczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2JlbmVmaXRzLW9mLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5CZW5lZml0czwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9zdHJlZXQtcGVkZXN0cmlhbi1jcm9zc3dhbGsuanBnL3RodW1ibmFpbHMvODAwJyBhbHQ9J1BlZGVzdHJpYW5zIGNyb3NzaW5nIGEgc3RyZWV0IGF0IGEgY3Jvc3N3YWxrLic+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkJlbmVmaXRzPC9hPjwvaDQ+CjxwPldoZXRoZXIgeW91IHJ1biBhIGJ1c2luZXNzLCB3b3JrIGZvciBhIGNvbXBhbnkgb3IgZ292ZXJubWVudCwgb3Igd2FudCB0byBrbm93IGhvdyBzdGFuZGFyZHMgY29udHJpYnV0ZSB0byBwcm9kdWN0cyBhbmQgc2VydmljZXMgdGhhdCB5b3UgdXNlLCB5b3UnbGwgZmluZCBpdCBoZXJlLjwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2lzby1hbmQtc21lcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TTUVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLXRoZS1pc28tbWF0ZXJpYWxzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkxlYXJuIG1vcmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9pc28tYW5kLWNvbnN1bWVycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Db25zdW1lcnM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9pc28tYW5kLXBvbGljeS1tYWtlcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+SVNPIGFuZCBwb2xpY3kgbWFrZXJzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvc3RhbmRhcmRzLWluLWFjdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdGFuZGFyZHMgaW4gYWN0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9wb3B1bGFyLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Qb3B1bGFyIHN0YW5kYXJkczwvYT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIiPjxhIGhyZWY9Ii9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q2VydGlmaWNhdGlvbiAmIGNvbmZvcm1pdHk8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvbWljcm9zY29wZS5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nU2NpZW50aXN0IHBsYWNpbmcgYSBzbGlkZSBiZW5lYXRoIGFuIG9wdGljYWwgbWljcm9zY29wZSc+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXR5PC9hPjwvaDQ+CjxwPkEgc2V0IG9mIHByb2Nlc3NlcyB0aGF0IHNob3cgeW91ciBwcm9kdWN0LCBzZXJ2aWNlIG9yIHN5c3RlbSBtZWV0cyB0aGUgcmVxdWlyZW1lbnRzIG9mIGEgc3RhbmRhcmQuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvY2VydGlmaWNhdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvY2FzY28uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q0FTQ088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii90aGUtaXNvLXN1cnZleS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5UaGUgSVNPIFN1cnZleTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL3Jlc291cmNlcy1mb3ItY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2Rpdj48IS0tIGNsb3NlIG9mIHBhbmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvc2Rncy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TREdzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgaHJlZj0iL2Fib3V0LXVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkFsbCBhYm91dCBJU088L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii93aGF0LXdlLWRvLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPldoYXQgd2UgZG88L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvYnVzaW5lc3Mtc2VtaW5hci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nQmFjayB2aWV3IG9mIHBlb3BsZSBpbiBhIG1lZXRpbmcsIGxvb2tpbmcgYXQgYSBwcmVzZW50YXRpb24gb24gYSBzY3JlZW4uJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy93aGF0LXdlLWRvLmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPldoYXQgd2UgZG88L2E+PC9oND4KPHA+RmluZCBvdXQgaG93IHdlIGRldmVsb3AgYW5kIHB1Ymxpc2ggaW50ZXJuYXRpb25hbCBzdGFuZGFyZHMgYnkgYnJpbmdpbmcgdG9nZXRoZXIgbW9yZSB0aGFuIDE2MCBtZW1iZXJzIGFuZCBtb3JlIHRoYW4gNDUsMDAwIGV4cGVydHM8L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RGV2ZWxvcGluZyBzdGFuZGFyZHM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9yZXNlYXJjaC1hbmQtZWR1Y2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc2VhcmNoPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvY2FwYWNpdHktYnVpbGRpbmcuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q2FwYWNpdHkgYnVpbGRpbmc8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9lZHVjYXRpb24tYWJvdXQtc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkVkdWNhdGlvbiBhYm91dCBzdGFuZGFyZHM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3N0cnVjdHVyZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9tZW1iZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1lbWJlcnM8L2E+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIj48YSBocmVmPSIvbmV3c19pbmRleC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5OZXdzIGFuZCBldmVudHM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvQWxsJTIwYWJvdXQlMjBJU08tTmV3c19jYWxlbmRhci1jbG9zZS11cCUyME5vJTIweWVhci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nTW9udGhzIGFuZCBkYXRlcyBzaG93biBvbiBhIGNhbGVuZGFyIHdoaWxzdCB0dXJuaW5nIHRoZSBwYWdlcyB3aXRoIHNoYWxsb3cgZGVwdGggb2YgZmllbGQnPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL25ld3NfaW5kZXguaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TmV3cyBhbmQgZXZlbnRzPC9hPjwvaDQ+CjxwPktlZXAgdXAgdG8gZGF0ZSB3aXRoIHRoZSBsYXRlc3QgaW4gc3RhbmRhcmRpemF0aW9uIG9yIGJyb3dzZSBvdXIgcmljaCBhcmNoaXZlczwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2lzb2ZvY3VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPklTT2ZvY3VzIG1hZ2F6aW5lPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZXZlbnRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkV2ZW50cyBhbmQgbWVldGluZ3M8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9tZWRpYS1raXQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TWVkaWEga2l0PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvbmV3c19hcmNoaXZlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5ld3M8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIGhyZWY9Ii9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5UYWtpbmcgcGFydDwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3doby1kZXZlbG9wcy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+V2hvIGRldmVsb3BzIHN0YW5kYXJkczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvdGVjaG5pY2FsLWNvbW1pdHRlZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+VGVjaG5pY2FsIENvbW1pdHRlZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9vdGhlci1ib2RpZXMtZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+T3RoZXIgYm9kaWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvb3JnYW5pemF0aW9ucy1pbi1jb29wZXJhdGlvbi13aXRoLWlzby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Pcmdhbml6YXRpb25zIGluIGNvb3BlcmF0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZGVsaXZlcmFibGVzLWFsbC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5EZWxpdmVyYWJsZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9nZXQtaW52b2x2ZWQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+R2V0IGludm9sdmVkPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcmVzb3VyY2VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaW5QYXRoIG9wZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdG9yZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdG9yZTwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0YW5kYXJkcyBjYXRhbG9ndWU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlB1YmxpY2F0aW9ucyBhbmQgcHJvZHVjdHM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJvZmZjYW52YXMtdG9nZ2xlIiBkYXRhLXRvZ2dsZT0ib2ZmY2FudmFzIj4gIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW1lbnUtaGFtYnVyZ2VyIj48L3NwYW4+PC9idXR0b24+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvbmF2PgogICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgogICAgCgoKCgoKPHNwYW4gY2xhc3M9ImhpZGRlbiIgaWQ9ImluZGV4UmVmZXJlbmNlIiBkYXRhLWluZGV4PSIzODc5MCAtIElTTy9JRUMgOTk0NS0yOjIwMDMgLSBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0tIFBvcnRhYmxlIE9wZXJhdGluZyBTeXN0ZW0gSW50ZXJmYWNlIChQT1NJWCkgLS0gUGFydCAyOiBTeXN0ZW0gSW50ZXJmYWNlcyI+PC9zcGFuPgo8ZGl2IGNsYXNzPSJtYWluIGNvbnRhaW5lciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Qcm9kdWN0Ij4KICA8ZGl2IGNsYXNzPSJyb3cgcm93LXRvcCByb3ctbGlnaHQiPgogICAgPGRpdiBjbGFzcz0iY29sLW1kLTEyIj4KICAgICAgPGRpdiBjbGFzcz0iYnJlYWRjcnVtYi1jb250YWluZXIgc21hbGwiPgogIAogIDxvbCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9ob21lLmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWhvbWUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L3NwYW4+PC9hPjwvbGk+CiAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvc3RvcmUuaHRtbCI+CiAgICAgICAgICAgICAgICBTdG9yZQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCjxhIGhyZWY9Ii9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPlN0YW5kYXJkcyBjYXRhbG9ndWU8L2E+CgogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCI+CiAgICAgICAgICAgICAgICBJQ1MKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIDxsaT48YSBocmVmPSIvZW4vaWNzLzM1Lmh0bWwiPjM1PC9hPjwvbGk+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvMzUuMDYwLmh0bWwiPjM1LjA2MDwvYT48L2xpPgogICAgPGxpPklTTy9JRUMgOTk0NS0yOjIwMDM8L2xpPgogIDwvb2w+Cgo8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGlkZGVuIiBpdGVtcHJvcD0iY2F0ZWdvcnkiPnc8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGlkZGVuIiBpdGVtcHJvcD0icHJvZHVjdElEIiBpZD0iY3NOdW1iZXIiPjM4NzkwPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9ImJyYW5kIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgIDxkaXYgaXRlbXByb3A9ImxvZ28iIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cHM6Ly9zY2hlbWEub3JnL0ltYWdlT2JqZWN0Ij4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2lzby1sb2dvLXByaW50LmdpZiIvPgogICAgICAgICAgPG1ldGEgaXRlbXByb3A9IndpZHRoIiBjb250ZW50PSIyODMiPgogICAgICAgICAgPG1ldGEgaXRlbXByb3A9ImhlaWdodCIgY29udGVudD0iMjYxIj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8bWV0YSBpdGVtcHJvcD0ibmFtZSIgY29udGVudD0iSVNPIC0gSW50ZXJuYXRpb25hbCBPcmdhbml6YXRpb24gZm9yIFN0YW5kYXJkaXphdGlvbiI+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iaGVhZGluZy1jb25kZW5zZWQiPgogICAgICAgIDxoMT4KICAgICAgICAgIDxzdHJvbmcgaWQ9Iml0ZW1SZWZlcmVuY2UiIGl0ZW1wcm9wPSJuYW1lIj5JU08vSUVDIDk5NDUtMjoyMDAzPC9zdHJvbmc+CiAgICAgICAgICAKICAgICAgICA8L2gxPgoKICAgICAgICA8aDIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj5JbmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0tIFBvcnRhYmxlIE9wZXJhdGluZyBTeXN0ZW0gSW50ZXJmYWNlIChQT1NJWCkgLS0gUGFydCAyOiBTeXN0ZW0gSW50ZXJmYWNlczwvaDI+CiAgICAgICAgCiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CgogIAogICAgPGRpdiBjbGFzcz0icm93IHJvdy1taWRkbGUgYWxlcnQtZGFuZ2VyIGVtcGhhc2lzLWRhbmdlciI+CiAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmc6IDAgMTVweDsiPgogICAgICAgIDxoNiByb2xlPSJhbGVydCIgY2xhc3M9Im5vLW1hcmdpbiI+CiAgICAgICAgICBUaGlzIHN0YW5kYXJkIGhhcyBiZWVuIHJldmlzZWQgYnkKICAgICAgICAgICAgPGEgaHJlZj0iL3N0YW5kYXJkLzUwNTE2Lmh0bWwiPklTTy9JRUMvSUVFRSA5OTQ1OjIwMDk8L2E+CiAgICAgICAgPC9oNj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAKCiAgPGRpdiBjbGFzcz0icm93Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KCiAgICAgIAogICAgICAgIDxkaXYgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPjxQPklTTy9JRUMgOTk0NSAocGFydHMgMSB0byA0KToyMDAzIGRlZmluZXMgYSBzdGFuZGFyZCBvcGVyYXRpbmcgc3lzdGVtIGludGVyZmFjZSBhbmQgZW52aXJvbm1lbnQsIGluY2x1ZGluZyBhIGNvbW1hbmQgaW50ZXJwcmV0ZXIgKG9yICZxdW90O3NoZWxsJnF1b3Q7KSwgYW5kIGNvbW1vbiB1dGlsaXR5IHByb2dyYW1zIHRvIHN1cHBvcnQgYXBwbGljYXRpb25zIHBvcnRhYmlsaXR5IGF0IHRoZSBzb3VyY2UgY29kZSBsZXZlbC48L1A+DQo8UD5JU08vSUVDIDk5NDUtMToyMDAzIGlzIGEgbWlub3IgcmV2aXNpb24gYW5kLCB0b2dldGhlciB3aXRoIElTTy9JRUMgOTk0NS0yOjIwMDMsIElTTy9JRUMgOTk0NS0zOjIwMDMgYW5kIElTTy9JRUMgOTk0NS00OjIwMDMsIGNhbmNlbHMgYW5kIHJlcGxhY2VzIElTTy9JRUMgOTk0NS0xOjIwMDIsIElTTy9JRUMgOTk0NS0yOjIwMDIsIElTTy9JRUMgOTk0NS0zOjIwMDIgYW5kIElTTy9JRUMgOTk0NS00OjIwMDIuPC9QPg0KPFA+SVNPL0lFQyA5OTQ1IChwYXJ0cyAxIHRvIDQpOjIwMDMgaXMgdGhlIHNpbmdsZSBjb21tb24gcmV2aXNpb24gdG8gSVNPL0lFQyA5OTQ1LTE6MTk5NiAoSUVFRSBTdGQgMTAwMy4xLTE5OTYpLCBJU08vSUVDIDk5NDUtMjoxOTkzIChJRUVFIFN0ZCAxMDAzLjItMTk5MiksIGFuZCB0aGUgQmFzZSBTcGVjaWZpY2F0aW9ucyBvZiBUaGUgT3BlbiBHcm91cCBTaW5nbGUgVU5JWCZyZWc7IFNwZWNpZmljYXRpb24sIFZlcnNpb24gMi4gSVNPL0lFQyA5OTQ1IChwYXJ0cyAxIHRvIDQpOjIwMDMgaXMgaW50ZW5kZWQgdG8gYmUgdXNlZCBieSBib3RoIGFwcGxpY2F0aW9ucyBkZXZlbG9wZXJzIGFuZCBzeXN0ZW0gaW1wbGVtZW50b3JzIGFuZCBjb21wcmlzZXMgZm91ciBtYWpvciBjb21wb25lbnRzIChlYWNoIGluIGFuIGFzc29jaWF0ZWQgdm9sdW1lKS48L1A+DQo8UD5HZW5lcmFsIHRlcm1zLCBjb25jZXB0cywgYW5kIGludGVyZmFjZXMgY29tbW9uIHRvIGFsbCB2b2x1bWVzIG9mIElTTy9JRUMgOTk0NSAocGFydHMgMSB0byA0KToyMDAzLCBpbmNsdWRpbmcgdXRpbGl0eSBjb252ZW50aW9ucyBhbmQgQy1sYW5ndWFnZSBoZWFkZXIgZGVmaW5pdGlvbnMsIGFyZSBpbmNsdWRlZCBpbiB0aGUgQmFzZSBEZWZpbml0aW9ucyB2b2x1bWUgKElTTy9JRUMgOTk0NS0xOjIwMDMpLjwvUD4NCjxQPkRlZmluaXRpb25zIGZvciBzeXN0ZW0gc2VydmljZSBmdW5jdGlvbnMgYW5kIHN1YnJvdXRpbmVzLCBsYW5ndWFnZS1zcGVjaWZpYyBzeXN0ZW0gc2VydmljZXMgZm9yIHRoZSBDIHByb2dyYW1taW5nIGxhbmd1YWdlLCBmdW5jdGlvbiBpc3N1ZXMsIGluY2x1ZGluZyBwb3J0YWJpbGl0eSwgZXJyb3IgaGFuZGxpbmcsIGFuZCBlcnJvciByZWNvdmVyeSwgYXJlIGluY2x1ZGVkIGluIHRoZSBTeXN0ZW0gSW50ZXJmYWNlcyB2b2x1bWUgKElTTy9JRUMgOTk0NS0yOjIwMDMpLjwvUD4NCjxQPkRlZmluaXRpb25zIGZvciBhIHN0YW5kYXJkIHNvdXJjZSBjb2RlLWxldmVsIGludGVyZmFjZSB0byBjb21tYW5kIGludGVycHJldGF0aW9uIHNlcnZpY2VzIChhICZxdW90O3NoZWxsJnF1b3Q7KSBhbmQgY29tbW9uIHV0aWxpdHkgcHJvZ3JhbXMgZm9yIGFwcGxpY2F0aW9uIHByb2dyYW1zIGFyZSBpbmNsdWRlZCBpbiB0aGUgU2hlbGwgYW5kIFV0aWxpdGllcyB2b2x1bWUgKElTTy9JRUMgOTk0NS0zOjIwMDMpLjwvUD4NCjxQPkV4dGVuZGVkIHJhdGlvbmFsZSB0aGF0IGRpZCBub3QgZml0IHdlbGwgaW50byB0aGUgcmVzdCBvZiB0aGUgZG9jdW1lbnQgc3RydWN0dXJlLCBjb250YWluaW5nIGhpc3RvcmljYWwgaW5mb3JtYXRpb24gY29uY2VybmluZyB0aGUgY29udGVudHMgb2YgSVNPL0lFQyA5OTQ1IChwYXJ0cyAxIHRvIDQpOjIwMDMgYW5kIHdoeSBmZWF0dXJlcyB3ZXJlIGluY2x1ZGVkIG9yIGRpc2NhcmRlZCBieSB0aGUgc3RhbmRhcmQgZGV2ZWxvcGVycywgaXMgaW5jbHVkZWQgaW4gdGhlIFJhdGlvbmFsZSAoSW5mb3JtYXRpdmUpIHZvbHVtZSAoSVNPL0lFQyA5OTQ1LTQ6MjAwMykuPC9QPg0KPFA+VGhlIGZvbGxvd2luZyBhcmVhcyBhcmUgb3V0c2lkZSB0aGUgc2NvcGUgb2YgSVNPL0lFQyA5OTQ1IChwYXJ0cyAxIHRvIDQpOjIwMDM6PC9QPg0KPFVMPjxMST5HcmFwaGljcyBpbnRlcmZhY2VzPC9MST48TEk+RGF0YWJhc2UgbWFuYWdlbWVudCBzeXN0ZW0gaW50ZXJmYWNlczwvTEk+PExJPlJlY29yZCBJL08gY29uc2lkZXJhdGlvbnM8L0xJPjxMST5PYmplY3Qgb3IgYmluYXJ5IGNvZGUgcG9ydGFiaWxpdHk8L0xJPjxMST5TeXN0ZW0gY29uZmlndXJhdGlvbiBhbmQgcmVzb3VyY2UgYXZhaWxhYmlsaXR5PC9MST48L1VMPg0KPFA+SVNPL0lFQyA5OTQ1IChwYXJ0cyAxIHRvIDQpOjIwMDMgZGVzY3JpYmVzIHRoZSBleHRlcm5hbCBjaGFyYWN0ZXJpc3RpY3MgYW5kIGZhY2lsaXRpZXMgdGhhdCBhcmUgb2YgaW1wb3J0YW5jZSB0byBhcHBsaWNhdGlvbnMgZGV2ZWxvcGVycywgcmF0aGVyIHRoYW4gdGhlIGludGVybmFsIGNvbnN0cnVjdGlvbiB0ZWNobmlxdWVzIGVtcGxveWVkIHRvIGFjaGlldmUgdGhlc2UgY2FwYWJpbGl0aWVzLiBTcGVjaWFsIGVtcGhhc2lzIGlzIHBsYWNlZCBvbiB0aG9zZSBmdW5jdGlvbnMgYW5kIGZhY2lsaXRpZXMgdGhhdCBhcmUgbmVlZGVkIGluIGEgd2lkZSB2YXJpZXR5IG9mIGNvbW1lcmNpYWwgYXBwbGljYXRpb25zLjwvUD4NCjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8YnIvPgogICAgICA8ZGl2IGNsYXNzPSJ3ZWxsIj4KICA8aDM+CiAgICBHZW5lcmFsIGluZm9ybWF0aW9uCiAgICA8c3VwPjxhIGhyZWY9Ii9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAzLzg3LzM4NzkwLmRldGFpbC5yc3MiIGNsYXNzPSJzcy1pY29uIHNzLXNvY2lhbC1jaXJjbGUgdGV4dC13YXJuaW5nIHRleHQtc21hbGwiIGRhdGEtdG9nZ2xlPSJpc28tdG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iU3Vic2NyaWJlJm5ic3A7dG8mbmJzcDt1cGRhdGVzIj4mI3hFMzEwOzwvYT48L3N1cD4KICA8L2gzPgogIAoKICA8dWwgY2xhc3M9InJlZmluZSI+CiAgICA8bGk+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCgogICAgICAgICAgICA8c3Ryb25nPlN0YXR1cyZuYnNwOzombmJzcDsmbmJzcDs8L3N0cm9uZz48c3Bhbj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iV2l0aGRyYXduIj48L3NwYW4+V2l0aGRyYXduPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgICAgIDxzdHJvbmc+UHVibGljYXRpb24gZGF0ZSZuYnNwOzogPC9zdHJvbmc+PHNwYW4gaXRlbXByb3A9InJlbGVhc2VEYXRlIj4yMDAzLTA4PC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICAgICAgPHN0cm9uZz5FZGl0aW9uJm5ic3A7Ojwvc3Ryb25nPiAzCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbGFiZWwiPlRlY2huaWNhbCBDb21taXR0ZWU8L2Rpdj4gOgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jb21taXR0ZWUvNDUyMDIuaHRtbCI+SVNPL0lFQyBKVEMgMS9TQyAyMjwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktdGl0bGUiPlByb2dyYW1taW5nIGxhbmd1YWdlcywgdGhlaXIgZW52aXJvbm1lbnRzIGFuZCBzeXN0ZW0gc29mdHdhcmUgaW50ZXJmYWNlczwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgCiAgICA8bGk+CiAgICAgIDxkbCBjbGFzcz0iZGwtaW5saW5lIG5vLWJvdHRvbS1tYXJnaW4iPgogICAgICAgIDxkdCBjbGFzcz0iZW50cnktbGFiZWwgZW50cnktYmxvY2siPjxzdHJvbmc+SUNTIDogPC9zdHJvbmc+PC9kdD4KICAgICAgICAKICAgICAgICAgIDxkZD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ljcy8zNS4wNjAuaHRtbCI+CiAgICAgICAgICAgICAgICAgIDM1LjA2MAogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5ndWFnZXMgdXNlZCBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5PC9kaXY+CiAgICAgICAgICA8L2RkPgogICAgICAgIAogICAgICA8L2RsPgogICAgPC9saT4KICA8L3VsPgo8L2Rpdj4KCiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCBjb2wtbWQtb2Zmc2V0LTEiPgogICAgICAKCiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgCjxkaXYgY2xhc3M9InJvdyByb3ctbWlkZGxlIHJvdy10b3BsaW5lIj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgPGgzPkxpZmUgY3ljbGU8L2gzPgogICAgPHA+CiAgICAgIEEgc3RhbmRhcmQgaXMgcmV2aWV3ZWQgZXZlcnkgNSB5ZWFycwogICAgPC9wPgogICAgPGRpdiBjbGFzcz0iY2xlYXJmaXggdGhlbWUtcmVkIj4KICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBzdGFnZXMiPgogICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjAwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByZWxpbWluYXJ5PC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MTA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJvcG9zYWw8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4yMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QcmVwYXJhdG9yeTwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjMwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkNvbW1pdHRlZTwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjQwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkVucXVpcnk8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjNDAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjQwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDMtMDQtMDk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEZ1bGwgcmVwb3J0IGNpcmN1bGF0ZWQ6IERJUyBhcHByb3ZlZCBmb3IgcmVnaXN0cmF0aW9uIGFzIEZESVMKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz41MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5BcHByb3ZhbDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCM1MC4wMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NTAuMDA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwMy0wNi0yNzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgRmluYWwgdGV4dCByZWNlaXZlZCBvciBGRElTIHJlZ2lzdGVyZWQgZm9yIGZvcm1hbCBhcHByb3ZhbAogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzUwLjIwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj41MC4yMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDAzLTA3LTI4PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBQcm9vZiBzZW50IHRvIHNlY3JldGFyaWF0IG9yIEZESVMgYmFsbG90IGluaXRpYXRlZDogOCB3ZWVrcwogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzUwLjYwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj41MC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDAzLTA3LTMwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBDbG9zZSBvZiB2b3RpbmcuIFByb29mIHJldHVybmVkIGJ5IHNlY3JldGFyaWF0CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NjA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHVibGljYXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjNjAuMDAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjYwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDMtMDctMzA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEludGVybmF0aW9uYWwgU3RhbmRhcmQgdW5kZXIgcHVibGljYXRpb24KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCM2MC42MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NjAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwMy0wOC0xODwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBwdWJsaXNoZWQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5SZXZpZXc8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gYWxlcnQtZGFuZ2VyIGFjdGl2ZSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+OTUuOTk8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+V2l0aGRyYXdhbDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzk1Ljk5Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj45NS45OTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA5LTA5LTE1PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBXaXRoZHJhd2FsIG9mIEludGVybmF0aW9uYWwgU3RhbmRhcmQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgPC91bD4KICAgIDwvZGl2PgogICAgPGJyLz4KICAgIDxici8+CiAgICA8aDQ+UmV2aXNpb25zJm5ic3A7LyZuYnNwO0NvcnJpZ2VuZGE8L2g0PgogICAgPHVsIGNsYXNzPSJzdGVwcyI+CiAgICAgIAogICAgICAgICAgICA8bGkgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciI+CiAgICAgICAgICAKICAgICAgICA8c3Ryb25nPlByZXZpb3VzbHk8L3N0cm9uZz48YnIvPgogICAgICAgIAogICAgICAgICAgPGEgaHJlZj0iL3N0YW5kYXJkLzM3MzEzLmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJXaXRoZHJhd24iPjwvc3Bhbj5JU08vSUVDIDk5NDUtMjoyMDAyPC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgIDxsaSBjbGFzcz0ic3RlcCBhbGVydCBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICA8c3Ryb25nPk5vdyB3aXRoZHJhd248L3N0cm9uZz48YnIvPgogICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJXaXRoZHJhd24iPjwvc3Bhbj5JU08vSUVDIDk5NDUtMjoyMDAzCiAgICAgIDwvbGk+CiAgICAgIAogICAgICAgICAgICA8bGkgY2xhc3M9InN0ZXAgYWxlcnQgYWxlcnQtZGFuZ2VyIj4KICAgICAgICAgIAogICAgICAgIDxzdHJvbmc+Q29ycmlnZW5kYS9BbWVuZG1lbnRzPC9zdHJvbmc+PGJyLz4KICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZC80MDY4OC5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iV2l0aGRyYXduIj48L3NwYW4+SVNPL0lFQyA5OTQ1LTI6MjAwMy9Db3IgMToyMDA0PC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgICAgICA8bGkgY2xhc3M9InN0ZXAgYWxlcnQgYWxlcnQtd2FybmluZyI+CiAgICAgICAgICAgIDxzdHJvbmc+UmV2aXNlZCBieTwvc3Ryb25nPjxici8+CiAgICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZC81MDUxNi5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1vay1jaXJjbGUiIHRpdGxlPSJQdWJsaXNoZWQiPjwvc3Bhbj5JU08vSUVDL0lFRUUgOTk0NToyMDA5PC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgPC91bD4KICA8L2Rpdj4KPC9kaXY+PGRpdiBjbGFzcz0icm93IHJvdy1ib3R0b20gcm93LWxpZ2h0Ij4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8aDQ+R290IGEgcXVlc3Rpb24/PC9oND4KCjxwPkNoZWNrIG91dCBvdXIgPGEgaHJlZj0iL2ZyZXF1ZW50bHktYXNrZWQtcXVlc3Rpb25zLWZhcXMuaHRtbCIgdGl0bGU9IkZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zIChGQVFzKSI+RkFRczwvYT48L3A+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgPGRpdiBjbGFzcz0idmNhcmQgY29udGFjdCBjbGVhcmZpeCIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8ZGl2IGNsYXNzPSJjb250ZW50LWJveCBuby1pbWFnZSI+CjxkaXYgY2xhc3M9ImZuIG4iPjxzcGFuIGNsYXNzPSJnaXZlbi1uYW1lIiBpdGVtcHJvcD0iZ2l2ZW5OYW1lIj5DdXN0b21lciBjYXJlPC9zcGFuPjwvZGl2PgoKPGRpdiBjbGFzcz0idGVsIiBpdGVtcHJvcD0idGVsZXBob25lIj4rNDEgMjIgNzQ5IDA4IDg4PC9kaXY+Cgo8ZGl2IGNsYXNzPSJlbWFpbCIgaXRlbXByb3A9ImVtYWlsIj48YSBocmVmPSJtYWlsdG86Y3VzdG9tZXJzZXJ2aWNlQGlzby5vcmciPmN1c3RvbWVyc2VydmljZUBpc28ub3JnPC9hPjwvZGl2PgoKPGhyIC8+CjxkaXYgY2xhc3M9Im5vdGUiPgo8cCBjbGFzcz0ic21hbGwiPk9wZW5pbmcgaG91cnM6PGJyIC8+Ck1vbmRheSB0byBGcmlkYXkgLSAwOTowMC0xMjowMCwgMTQ6MDAtMTc6MDAgKFVUQysxKTwvcD4KPC9kaXY+CjwvZGl2Pgo8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ3ZWxsIHRleHQtY2VudGVyIj4KICA8aDQ+S2VlcCB1cCB0byBkYXRlIHdpdGggSVNPPC9oND4KCjxwPlNpZ24gdXAgdG8gb3VyIG5ld3NsZXR0ZXIgZm9yIHRoZSBsYXRlc3QgbmV3cywgdmlld3MgYW5kIHByb2R1Y3QgaW5mb3JtYXRpb248L3A+PHA+PGEgY2xhc3M9ImZhbmN5Ym94IGZhbmN5Ym94LmlmcmFtZSBidG4gYnRuLWRlZmF1bHQiIGhyZWY9Imh0dHBzOi8vY29uZmlybXN1YnNjcmlwdGlvbi5jb20vaC9kLzM0MTJEQTc5OTNBQzNCN0MiPlN1YnNjcmliZTwvYT48L3A+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pgo8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cgo8L2Rpdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtYWluIGNvbnRhaW5lciBicmVhZGNydW1iLWNvbnRhaW5lciB0aGVtZS1yZWQiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04IGhpZGRlbi14eHMiPgogICAgICAgICAgPCEtLSBCUkVBRENSVU1CIC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0iYnJlYWRjcnVtYi1jb250YWluZXIgc21hbGwiPgogIAogIDxvbCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9ob21lLmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWhvbWUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L3NwYW4+PC9hPjwvbGk+CiAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvc3RvcmUuaHRtbCI+CiAgICAgICAgICAgICAgICBTdG9yZQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCjxhIGhyZWY9Ii9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPlN0YW5kYXJkcyBjYXRhbG9ndWU8L2E+CgogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCI+CiAgICAgICAgICAgICAgICBJQ1MKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIDxsaT48YSBocmVmPSIvZW4vaWNzLzM1Lmh0bWwiPjM1PC9hPjwvbGk+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvMzUuMDYwLmh0bWwiPjM1LjA2MDwvYT48L2xpPgogICAgPGxpPklTTy9JRUMgOTk0NS0yOjIwMDM8L2xpPgogIDwvb2w+Cgo8L2Rpdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgaGlkZGVuLXByaW50Ij4KICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgPGEgcm9sZT0iYnV0dG9uIiBjbGFzcz0iYWNjb3JkaW9uLXRvZ2dsZSBjb2xsYXBzZWQiIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgaHJlZj0iI2NvbGxhcHNlU2l0ZW1hcCIgdGFyZ2V0PSJfc2VsZiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiCiAgICAgICAgICAgICAgIGFyaWEtY29udHJvbHM9ImNvbGxhcHNlU2l0ZW1hcCI+U2l0ZW1hcDwvYT4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbGxhcHNlIGJvcmRlci10b3AiIGlkPSJjb2xsYXBzZVNpdGVtYXAiPgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICA8IS0tIFNJVEVNQVAgLS0+CiAgICAgICAgICA8bmF2IGNsYXNzPSJzaXRlbWFwLWZvb3RlciBjbGVhcmZpeCBzbWFsbCI+PHVsIGNsYXNzPSJuYXYtbGV2ZWwxIGxpc3QtaW5saW5lLTQgY2xlYXJmaXgiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvc3RhbmRhcmRzLmh0bWwiPlN0YW5kYXJkczwvYT48dWwgY2xhc3M9Im5hdi1sZXZlbDIgbGlzdC11bnN0eWxlZCI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2JlbmVmaXRzLW9mLXN0YW5kYXJkcy5odG1sIj5CZW5lZml0czwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3BvcHVsYXItc3RhbmRhcmRzLmh0bWwiPlBvcHVsYXIgc3RhbmRhcmRzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXR5PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvc2Rncy5odG1sIj5TREdzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2Fib3V0LXVzLmh0bWwiPkFsbCBhYm91dCBJU088L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii93aGF0LXdlLWRvLmh0bWwiPldoYXQgd2UgZG88L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9zdHJ1Y3R1cmUuaHRtbCI+U3RydWN0dXJlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvbWVtYmVycy5odG1sIj5NZW1iZXJzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvbmV3c19pbmRleC5odG1sIj5OZXdzIGFuZCBldmVudHM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIj48YSBocmVmPSIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCI+VGFraW5nIHBhcnQ8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii93aG8tZGV2ZWxvcHMtc3RhbmRhcmRzLmh0bWwiPldobyBkZXZlbG9wcyBzdGFuZGFyZHM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9kZWxpdmVyYWJsZXMtYWxsLmh0bWwiPkRlbGl2ZXJhYmxlczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2dldC1pbnZvbHZlZC5odG1sIj5HZXQgaW52b2x2ZWQ8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9yZXNvdXJjZXMuaHRtbCI+UmVzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciBpblBhdGggbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdG9yZS5odG1sIj5TdG9yZTwvYT48dWwgY2xhc3M9Im5hdi1sZXZlbDIgbGlzdC11bnN0eWxlZCI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGluUGF0aCBhY3RpdmUgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiID5TdGFuZGFyZHMgY2F0YWxvZ3VlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcHVibGljYXRpb24tbGlzdC5odG1sIj5QdWJsaWNhdGlvbnMgYW5kIHByb2R1Y3RzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbmF2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxmb290ZXIgcm9sZT0iY29udGVudGluZm8iIGNsYXNzPSJmb290ZXItaXNvIGNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1saW5rcyBjZW50ZXItYmxvY2siPgogICAgICAgICAgPCEtLSBGT09URVIgTElOS1MgLS0+CiAgICAgICAgICA8bmF2ID48dWwgY2xhc3M9Imxpc3QtaW5saW5lIGNsZWFyZml4IHZlcnRpY2FsaW5lIG5hdi1sZXZlbDEiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9pc28tbmFtZS1hbmQtbG9nby5odG1sIj5JU08gbmFtZSBhbmQgbG9nbzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3ByaXZhY3ktYW5kLWNvcHlyaWdodC5odG1sIj5Qcml2YWN5IGFuZCBjb3B5cmlnaHQ8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9zaXRlbWFwLmh0bWwiPlNpdGVtYXA8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii93b3JraW5nLXdpdGgtaXNvLmh0bWwiID5Kb2JzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVFzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvY29udGFjdC1pc28uaHRtbCI+Q29udGFjdCBJU088L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1zb2NpYWwgc3MtaWNvbiBjbGVhcmZpeCI+CiAgICAgICAgICA8dWwgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgICAgICA8bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnIj4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmFjZWJvb2siPu+YkDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iVHdpdHRlciI+75iRPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9QbGFuZXRJU08iIHRpdGxlPSJZb3VUdWJlIj7vmLA8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9pc28taW50ZXJuYXRpb25hbC1vcmdhbml6YXRpb24tZm9yLXN0YW5kYXJkaXphdGlvbiIgdGl0bGU9IkxpbmtlZGluIj7vmJI8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJsYXN0Y29sIj48YSBpdGVtcHJvcD0ic2FtZUFzIiAgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZsaWNrci5jb20vcGhvdG9zL2lzb3N0YW5kYXJkcyIgdGl0bGU9IkZsaWNrciI+75mAPC9hPjwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtYWxsIj5XZSBhcmUgY29tbWl0dGVkIHRvIGVuc3VyaW5nIHRoYXQgb3VyIHdlYnNpdGUgaXMgYWNjZXNzaWJsZSB0byBldmVyeW9uZS4gSWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucyBvciBzdWdnZXN0aW9ucyByZWdhcmRpbmcgdGhlIGFjY2Vzc2liaWxpdHkgb2YgdGhpcyBzaXRlLCBwbGVhc2UgPGEgaHJlZj0ibWFpbHRvOndlYm1hc3RlckBpc28ub3JnP3N1YmplY3Q9QWNjZXNzaWJpbGl0eSIgc3R5bGU9IndoaXRlLXNwYWNlOiBub3dyYXAiPmNvbnRhY3QgdXM8L2E+LjwvcD4KICAgICAgICA8c21hbGw+PGEgaHJlZj0iI2NvcHlyaWdodCIgdGFyZ2V0PSJfc2VsZiIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VDb3B5cmlnaHQiPsKpIEFsbCBSaWdodHMgUmVzZXJ2ZWQ8L2E+IDxzcGFuIGlkPSJjb3B5cmlnaHQiIGNsYXNzPSJjb2xsYXBzZSI+QWxsIElTTyBwdWJsaWNhdGlvbnMgYW5kIG1hdGVyaWFscyBhcmUgcHJvdGVjdGVkIGJ5IGNvcHlyaWdodCBhbmQgYXJlIHN1YmplY3QgdG8gdGhlIHVzZXLigJlzIGFjY2VwdGFuY2Ugb2YgSVNP4oCZcyBjb25kaXRpb25zIG9mIGNvcHlyaWdodC4gQW55IHVzZSwgaW5jbHVkaW5nIHJlcHJvZHVjdGlvbiByZXF1aXJlcyBvdXIgd3JpdHRlbiBwZXJtaXNzaW9uLiBBbGwgY29weXJpZ2h0IHJlcXVlc3RzIHNob3VsZCBiZSBhZGRyZXNzZWQgdG8gPGEgaHJlZj0ibWFpbHRvOmNvcHlyaWdodEBpc28ub3JnIj5jb3B5cmlnaHRAaXNvLm9yZzwvYT4uPC9zcGFuPjwvc21hbGw+CiAgICAgIDwvZGl2PgogICAgPC9mb290ZXI+CgogICAgCgoKICA8L2JvZHk+CjwvaHRtbD4=
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:45 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/40691.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=A6A76542F56C969DDE255B93FBBC4FC5; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:47 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZnIiIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJmciIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJmciI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZnInCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTy9JRUMgOTk0NS00OjIwMDMvQ29yIDE6MjAwNDwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgoKICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgp2YXIgY29udGV4dEpzUGFyYW1ldGVycz17Y29udGV4dFBhdGg6IiIsbGFuZzoiZnIiLHVpbGFuZzoiZnIiLHNpdGVVdWlkOiI0MzkxNDZmOC02NzdlLTRkZGUtYjZjNi1iNjkyYjc1MzRmNTIiLHdjYWc6ZmFsc2UsY2tlQ2ZnOiIifTsgdmFyIENLRURJVE9SX0JBU0VQQVRIPSIvbW9kdWxlcy9ja2VkaXRvci9qYXZhc2NyaXB0LyI7IHZhciBzY2F5dF9jdXN0b21fcGFyYW1zPW5ldyBBcnJheSgpOyBzY2F5dF9jdXN0b21fcGFyYW1zWydzTGFuZyddPSdmcl9GUic7Cjwvc2NyaXB0Pgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MwIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3Mvd29vZC5taW4uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzEiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9jdXN0b20uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvYXNzZXRzL2Nzcy9sYW5ndWFnZVN3aXRjaGluZ0xpbmtzLmNzcz8xNTMyMDAzNTA1NzY2IiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9jc3MvY2F0YWxvZ3VlLmNzcz8xNTYwNzU5NTkwMTExIiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2phdmFzY3JpcHQvd29vZC5taW4uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDEiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc28tamFoaWEtc2VydmljZS1tb2R1bGUvamF2YXNjcmlwdC9jYXRhbG9ndWUuanM/MTU2MDc1OTU5MDExMSI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC9jdXN0b20uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CgogICAgICA8IS0tW2lmIGx0ZSBJRSA5XT4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9pZTkud29vZC5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3MvbHRlLWllOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAgIDwhLS0gSFRNTDUgU2hpbSBhbmQgUmVzcG9uZC5qcyBJRTggc3VwcG9ydCBvZiBIVE1MNSBlbGVtZW50cyBhbmQgbWVkaWEgcXVlcmllcyAtLT4KICAgICAgPCEtLSBXQVJOSU5HOiBSZXNwb25kLmpzIGRvZXNuJ3Qgd29yayBpZiB5b3UgdmlldyB0aGUgcGFnZSB2aWEgZmlsZTovLyAtLT4KICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9odG1sNXNoaXYvMy43LjAvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgPCFbZW5kaWZdLS0+CiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjIwMDkwOTE1IiAvPgogIAoKICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGlzb3N0YW5kYXJkcyIgLz4KCiAgPCEtLSBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iSVNPIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDQvMDYvNDA2OTEuaHRtbCIgLz4KICAKICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIAogICAgPCEtLSBUaHVtYm5haWwgaW1hZ2UgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InRodW1ibmFpbCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6YWx0IiBjb250ZW50PSJJU08gbG9nbyIgLz4KICAKICAgIDwhLS0gVGl0bGUgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS00OjIwMDMvQ29yIDE6MjAwNCIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iSVNPL0lFQyA5OTQ1LTQ6MjAwMy9Db3IgMToyMDA0IiAvPgogIAoKICA8IS0tIEZhY2Vib29rIGFkbWlucyA6IExpb25lbCxNYXJpYSAtLT4KICA8bWV0YSBwcm9wZXJ0eT0iZmI6YWRtaW5zIiBjb250ZW50PSIxMDAwMDExMTYwNzk2NzYsMTAwMDAxNDQwMDAzMzA1IiAvPgoKICAKCjwvaGVhZD4KICA8Ym9keSBjbGFzcz0idGhlbWUtcmVkIj4KICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICA8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVRGR0tRUUIiIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KCiAgICA8IS0tIEhlYWRlciBJU08uT1JHIC0tPgogICAgPGhlYWRlciBjbGFzcz0iaGVhZGVyIGhlYWRlci1pc28gY29udGFpbmVyIiByb2xlPSJiYW5uZXIiPgogICAgICA8ZGl2IGNsYXNzPSJydWJiZXIiPjwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXIgdG9wYmFyLWxpZ2h0Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXItY29udGVudCI+CiAgICAgICAgICAKCjx1bCBpZD0ibGFuZy1zd2l0Y2hlciI+CiAgPGxpIGNsYXNzPSJkcm9wZG93biI+CiAgICA8YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGhyZWY9IiMiPmZyYW7Dp2FpcyA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj48L2E+CiAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICA8bGk+PGEgaHJlZj0iL3N0YW5kYXJkLzQwNjkxLmh0bWwiPkVuZ2xpc2g8L2E+PC9saT48bGk+PGEgaHJlZj0iL3J1L3N0YW5kYXJkLzQwNjkxLmh0bWwiPtGA0YPRgdGB0LrQuNC5PC9hPjwvbGk+CiAgICA8L3VsPgogIDwvbGk+CjwvdWw+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgICAgPHVsIGNsYXNzPSJ0b3BsaW5rcyI+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBjbGFzcz0ic2hvcHBpbmctY2FydC1saW5rIiBocmVmPSIvd2Vic3RvcmUvc2hvcHBpbmdiYXNrZXQ/bWVtYmVySWQ9SVNPJmd1aWxhbmc9ZnIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hvcHBpbmctY2FydC1iYWRnZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNob3BwaW5nLWNhcnQiIGlkPSJzaG9wcGluZ0l0ZW1zIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWNvbnRhaW5lciBoZWFkZXItaW1nIGhlYWRlci1pbWctaXNvIGhlYWRlci1zaG9ydCI+CiAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwhLS0gQnJhbmQgYW5kIHRvZ2dsZSBnZXQgZ3JvdXBlZCBmb3IgYmV0dGVyIG1vYmlsZSBkaXNwbGF5IC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJsb2dvIGlzb2xvZ28iIGhyZWY9Ii9mci9ob21lLmh0bWwiIHRpdGxlPSJJU08iPjwvYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXNvbG9nby1wcmludCI+PGltZyBzcmM9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2lzby1sb2dvLXByaW50LmdpZiIgYWx0PSJMb2dvIElTTyBwb3VyIGltcHJlc3Npb24iLz48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRpdGxlIGNsZWFyZml4Ij4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUtbWVkaXVtIHRpdGxlLXRoaW4iPk9yZ2FuaXNhdGlvbiBpbnRlcm5hdGlvbmFsZSBkZSBub3JtYWxpc2F0aW9uPC9wPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZS1zbWFsbCB0aXRsZS1yZWQgdGV4dC1yaWdodCBoaWRkZW4teHMiPlF1YW5kIGxlIG1vbmRlIHPigJlhY2NvcmRlPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPCEtLSBOQVZJR0FUSU9OIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ibmF2LWNvbnRhaW5lciBjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UgbmF2LTNsZXZlbHMiaWQ9Im9mZmNhbnZhcy1tZW51Ij4KCgo8Zm9ybSBpZD0ibmF2TWVudS1zZWFyY2hOYXYiIGNsYXNzPSJuYXZiYXItZm9ybSBuYXZiYXItcmlnaHQiIHJvbGU9InNlYXJjaCI+CiAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgc2VhcmNoLWlucHV0IiBwbGFjZWhvbGRlcj0iUmVjaGVyY2hlciI+CiAgICA8c3BhbiBjbGFzcz0iaW5wdXQtZ3JvdXAtYnRuIj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IHNlYXJjaC1zdWJtaXQiIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L3NwYW4+CiAgICAgIDwvYnV0dG9uPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8L2Zvcm0+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwxIHZlcnRpY2FsaW5lIG5vY2FyZXQiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5vcm1lczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2JlbmVmaXRzLW9mLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BdmFudGFnZXM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvc3RyZWV0LXBlZGVzdHJpYW4tY3Jvc3N3YWxrLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdQacOpdG9ucyB0cmF2ZXJzYW50IHVuZSByb3V0ZSBzdXIgdW4gcGFzc2FnZSBwacOpdG9uJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QXZhbnRhZ2VzPC9hPjwvaDQ+CjxwPlZvdXMgc291aGFpdGV6IGVuIHNhdm9pciBwbHVzICBzdXIgbGUgcsO0bGUgZGVzIG5vcm1lcyBkYW5zIGxlcyBwcm9kdWl0cyBldCBzZXJ2aWNlcyBxdWUgdm91cyB1dGlsaXNlej8gVm91cyB0cm91dmVyZXogaWNpIGxlcyBpbmZvcm1hdGlvbnMgcmVjaGVyY2jDqWVzLjwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2lzby1hbmQtc21lcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5QTUU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMtdGhlLWlzby1tYXRlcmlhbHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RW4gc2F2b2lyIHBsdXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9pc28tYW5kLWNvbnN1bWVycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Db25zb21tYXRldXJzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvaXNvLWFuZC1wb2xpY3ktbWFrZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkzigJlJU08gZXQgbGVzIG9yZ2FuaXNtZXMgZGUgcsOpZ2xlbWVudGF0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RhbmRhcmRzLWluLWFjdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Ob3JtZXMgZW4gYWN0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9wb3B1bGFyLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5MZXMgbm9ybWVzIGxlcyBwbHVzIGNvbm51ZXM8L2E+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIj48YSBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9taWNyb3Njb3BlLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdTY2llbnRpc3QgcGxhY2luZyBhIHNsaWRlIGJlbmVhdGggYW4gb3B0aWNhbCBtaWNyb3Njb3BlJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9mci9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q2VydGlmaWNhdGlvbiAmIGNvbmZvcm1pdMOpPC9hPjwvaDQ+CjxwPlVuIHByb2Nlc3N1cyBxdWkgc2VydCDDoCBkw6ltb250cmVyIHF1ZSB2b3RyZSBwcm9kdWl0LCBzZXJ2aWNlLCBvdSBzeXN0w6htZSByw6lwb25kIGF1eCBleGlnZW5jZXMgZOKAmXVuZSBub3JtZS48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9jZXJ0aWZpY2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb248L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9jYXNjby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DQVNDTzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3RoZS1pc28tc3VydmV5Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkwnw4l0dWRlIElTTzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3Jlc291cmNlcy1mb3ItY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3NkZ3MuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+T0REPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgaHJlZj0iL2ZyL2Fib3V0LXVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkwnSVNPPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hhdC13ZS1kby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Ob3MgYWN0aXZpdMOpczwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9idXNpbmVzcy1zZW1pbmFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdCYWNrIHZpZXcgb2YgcGVvcGxlIGluIGEgbWVldGluZywgbG9va2luZyBhdCBhIHByZXNlbnRhdGlvbiBvbiBhIHNjcmVlbi4nPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL2ZyL3doYXQtd2UtZG8uaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Tm9zIGFjdGl2aXTDqXM8L2E+PC9oND4KPHA+RMOpY291dnJleiBjb21tZW50IG5vdXMgw6lsYWJvcm9ucyBldCBwdWJsaW9ucyBkZXMgTm9ybWVzIGludGVybmF0aW9uYWxlcyBlbiBtb2JpbGlzYW50IHBsdXMgZGUgMTYwIG1lbWJyZXMgZXQgcGx1cyBkZSA0NSAwMDAgZXhwZXJ0cy48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RWxhYm9yYXRpb24gZGVzIG5vcm1lczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3Jlc2VhcmNoLWFuZC1lZHVjYXRpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVjaGVyY2hlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY2FwYWNpdHktYnVpbGRpbmcuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVuZm9yY2VtZW50IGRlcyBjYXBhY2l0w6lzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvZWR1Y2F0aW9uLWFib3V0LXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5FbnNlaWduZW1lbnQgc3VyIGxlcyBub3JtZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3N0cnVjdHVyZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1lbWJyZXM8L2E+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIj48YSBocmVmPSIvZnIvbmV3c19pbmRleC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BY3R1YWxpdMOpcyBldCBtYW5pZmVzdGF0aW9uczwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9BbGwlMjBhYm91dCUyMElTTy1OZXdzX2NhbGVuZGFyLWNsb3NlLXVwJTIwTm8lMjB5ZWFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdNb250aHMgYW5kIGRhdGVzIHNob3duIG9uIGEgY2FsZW5kYXIgd2hpbHN0IHR1cm5pbmcgdGhlIHBhZ2VzIHdpdGggc2hhbGxvdyBkZXB0aCBvZiBmaWVsZCc+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvZnIvbmV3c19pbmRleC5odG1sJyBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BY3R1YWxpdMOpcyBldCBtYW5pZmVzdGF0aW9uczwvYT48L2g0Pgo8cD5SZXN0ZXogaW5mb3Jtw6kgZGVzIGRlcm5pw6hyZXMgbm91dmVhdXTDqXMgZW4gbWF0acOocmUgZGUgbm9ybWFsaXNhdGlvbiBvdSBwYXJjb3VyZXogbm9zIHJpY2hlcyBhcmNoaXZlczwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2lzb2ZvY3VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1hZ2F6aW5lIElTT2ZvY3VzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZXZlbnRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1hbmlmZXN0YXRpb25zIGV0IHLDqXVuaW9uczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL21lZGlhLWtpdC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Eb3NzaWVyIG3DqWRpYXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9uZXdzX2FyY2hpdmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWN0dWFsaXTDqXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5QYXJ0aWNpcGVyPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hvLWRldmVsb3BzLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5RdWkgw6lsYWJvcmUgbGVzIG5vcm1lczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvdGVjaG5pY2FsLWNvbW1pdHRlZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q29taXTDqXMgdGVjaG5pcXVlczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL290aGVyLWJvZGllcy1kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BdXRyZXMgb3JnYW5pc21lczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL29yZ2FuaXphdGlvbnMtaW4tY29vcGVyYXRpb24td2l0aC1pc28uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+T3JnYW5pc2F0aW9ucyBlbiBjb29ww6lyYXRpb248L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9kZWxpdmVyYWJsZXMtYWxsLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlLDqWbDqXJlbnRpZWxzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZ2V0LWludm9sdmVkLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlBvdXJxdW9pIHPigJllbmdhZ2VyID88L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9yZXNvdXJjZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaW5QYXRoIG9wZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdG9yZTwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlB1YmxpY2F0aW9ucyBldCBwcm9kdWl0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im9mZmNhbnZhcy10b2dnbGUiIGRhdGEtdG9nZ2xlPSJvZmZjYW52YXMiPiAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tbWVudS1oYW1idXJnZXIiPjwvc3Bhbj48L2J1dHRvbj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9uYXY+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgICAKCgoKCgo8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0iaW5kZXhSZWZlcmVuY2UiIGRhdGEtaW5kZXg9IjQwNjkxIC0gSVNPL0lFQyA5OTQ1LTQ6MjAwMy9Db3IgMToyMDA0IC0gIj48L3NwYW4+CjxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPgogIDxkaXYgY2xhc3M9InJvdyByb3ctdG9wIHJvdy1saWdodCI+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTQ6MjAwMy9Db3IgMToyMDA0PC9saT4KICA8L29sPgoKPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9ImNhdGVnb3J5Ij53PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9InByb2R1Y3RJRCIgaWQ9ImNzTnVtYmVyIj40MDY5MTwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJicmFuZCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICA8ZGl2IGl0ZW1wcm9wPSJsb2dvIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9JbWFnZU9iamVjdCI+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0idXJsIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiLz4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ3aWR0aCIgY29udGVudD0iMjgzIj4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJoZWlnaHQiIGNvbnRlbnQ9IjI2MSI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9Ik9yZ2FuaXNhdGlvbiBpbnRlcm5hdGlvbmFsZSBkZSBub3JtYWxpc2F0aW9uIj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJoZWFkaW5nLWNvbmRlbnNlZCI+CiAgICAgICAgPGgxPgogICAgICAgICAgPHN0cm9uZyBpZD0iaXRlbVJlZmVyZW5jZSIgaXRlbXByb3A9Im5hbWUiPklTTy9JRUMgOTk0NS00OjIwMDMvQ29yIDE6MjAwNDwvc3Ryb25nPgogICAgICAgICAgCiAgICAgICAgPC9oMT4KCiAgICAgICAgPGgyIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+PC9oMj4KICAgICAgICAKICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgCiAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LW1pZGRsZSBhbGVydC1kYW5nZXIgZW1waGFzaXMtZGFuZ2VyIj4KICAgICAgPGRpdiBzdHlsZT0icGFkZGluZzogMCAxNXB4OyI+CiAgICAgICAgPGg2IHJvbGU9ImFsZXJ0IiBjbGFzcz0ibm8tbWFyZ2luIj4KICAgICAgICAgIENldHRlIG5vcm1lIGEgw6l0w6kgcsOpdmlzw6llIHBhcgogICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhbmRhcmQvNTA1MTYuaHRtbCI+SVNPL0lFQy9JRUVFIDk5NDU6MjAwOTwvYT4KICAgICAgICA8L2g2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIAoKICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgPGRpdiBjbGFzcz0iY29sLW1kLTciPgoKICAgICAgPGRpdiBjbGFzcz0id2VsbCI+CiAgPGgzPgogICAgSW5mb3JtYXRpb25zIGfDqW7DqXJhbGVzCiAgICA8c3VwPjxhIGhyZWY9Ii9mci9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzA2LzQwNjkxLmRldGFpbC5yc3MiIGNsYXNzPSJzcy1pY29uIHNzLXNvY2lhbC1jaXJjbGUgdGV4dC13YXJuaW5nIHRleHQtc21hbGwiIGRhdGEtdG9nZ2xlPSJpc28tdG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iUydhYm9ubmVyJm5ic3A7YXV4Jm5ic3A7bWlzZXMmbmJzcDvDoCZuYnNwO2pvdXIiPiYjeEUzMTA7PC9hPjwvc3VwPgogIDwvaDM+CiAgCgogIDx1bCBjbGFzcz0icmVmaW5lIj4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxzdHJvbmc+w4l0YXQgYWN0dWVsJm5ic3A7OiZuYnNwOyZuYnNwOzwvc3Ryb25nPjxzcGFuPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJBbm51bMOpZSI+PC9zcGFuPkFubnVsw6llPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgICAgIDxzdHJvbmc+RGF0ZSBkZSBwdWJsaWNhdGlvbiZuYnNwOzogPC9zdHJvbmc+PHNwYW4gaXRlbXByb3A9InJlbGVhc2VEYXRlIj4yMDA0LTA5PC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICAgICAgPHN0cm9uZz5FZGl0aW9uJm5ic3A7Ojwvc3Ryb25nPiAxCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbGFiZWwiPkNvbWl0w6kgdGVjaG5pcXVlPC9kaXY+IDoKICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LW5hbWUgZW50cnktYmxvY2siPgogICAgICAgICAgICA8YSBocmVmPSIvZnIvY29tbWl0dGVlLzQ1MjAyLmh0bWwiPklTTy9JRUMgSlRDIDEvU0MgMjI8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5nYWdlcyBkZSBwcm9ncmFtbWF0aW9uLCBsZXVyIGVudmlyb25uZW1lbnQgZXQgaW50ZXJmYWNlcyBkZXMgbG9naWNpZWxzIGRlIHN5c3TDqG1lczwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgCiAgICA8bGk+CiAgICAgIDxkbCBjbGFzcz0iZGwtaW5saW5lIG5vLWJvdHRvbS1tYXJnaW4iPgogICAgICAgIDxkdCBjbGFzcz0iZW50cnktbGFiZWwgZW50cnktYmxvY2siPjxzdHJvbmc+SUNTIDogPC9zdHJvbmc+PC9kdD4KICAgICAgICAKICAgICAgICAgIDxkZD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+CiAgICAgICAgICAgICAgICAgIDM1LjA2MAogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5nYWdlcyB1dGlsaXPDqXMgZGFucyBsZXMgdGVjaG5vbG9naWVzIGRlIGwnaW5mb3JtYXRpb248L2Rpdj4KICAgICAgICAgIDwvZGQ+CiAgICAgICAgCiAgICAgIDwvZGw+CiAgICA8L2xpPgogIDwvdWw+CjwvZGl2PgoKICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgIAoKICAgIDwvZGl2PgogIDwvZGl2PgoKICAKPGRpdiBjbGFzcz0icm93IHJvdy1taWRkbGUgcm93LXRvcGxpbmUiPgogIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICA8aDM+Q3ljbGUgZGUgdmllPC9oMz4KICAgIDxwPgogICAgICBMZXMgbm9ybWVzIElTTyBzb250IHLDqWV4YW1pbsOpZXMgdG91cyBsZXMgY2lucSBhbnMKICAgIDwvcD4KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IHRoZW1lLXJlZCI+CiAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgc3RhZ2VzIj4KICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4wMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QcsOpbGltaW5haXJlPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MTA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJvcG9zaXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMTAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjEwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDEtMTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIE5vdXZlYXUgcHJvamV0IGFwcHJvdXbDqQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjIwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByw6lwYXJhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjMwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkNvbWl0w6k8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMzAuMDAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDEtMTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIFByb2pldCBkZSBjb21pdMOpIChDRCkgZW5yZWdpc3Ryw6kKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCMzMC4yMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+MzAuMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwNC0wMS0xMjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTWlzZSDDoCBsJ8OpdHVkZS9hdSB2b3RlIGR1IENECiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMzAuNjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjYwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDQtMjM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENsw7R0dXJlIGR1IHZvdGUvIGRlIGxhIHDDqXJpb2RlIGRlcyBvYnNlcnZhdGlvbnMKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCMzMC45OSI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+MzAuOTk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwNC0wNy0yMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgQ0QgYXBwcm91dsOpIHBvdXIgZW5yZWdpc3RyZW1lbnQgY29tbWUgRElTCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+RW5xdcOqdGU8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz41MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5BcHByb2JhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjYwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlB1YmxpY2F0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzYwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj42MC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA0LTA4LTExPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBOb3JtZSBpbnRlcm5hdGlvbmFsZSBlbiBjb3VycyBkZSBwdWJsaWNhdGlvbgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzYwLjYwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj42MC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA0LTA5LTIxPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBOb3JtZSBpbnRlcm5hdGlvbmFsZSBwdWJsacOpZQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjkwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkV4YW1lbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45NS45OTwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Bbm51bGF0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFjdGl2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjOTUuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjk1Ljk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDktMDktMTU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEFubnVsYXRpb24gZGUgbGEgTm9ybWUgaW50ZXJuYXRpb25hbGUKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgPC91bD4KICAgIDwvZGl2PgogICAgPGJyLz4KICAgIDxici8+CiAgICA8aDQ+UsOpdmlzaW9uJm5ic3A7LyZuYnNwO1JlY3RpZmljYXRpZnMgdGVjaG5pcXVlczwvaDQ+CiAgICA8dWwgY2xhc3M9InN0ZXBzIj4KICAgICAgCiAgICAgIDxsaSBjbGFzcz0iIGFsZXJ0IGFsZXJ0LWRhbmdlciBhY3RpdmUiPgogICAgICAgIDxzdHJvbmc+QWN0dWVsbGVtZW50IGFubnVsw6llPC9zdHJvbmc+PGJyLz4KICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iQW5udWzDqWUiPjwvc3Bhbj5JU08vSUVDIDk5NDUtNDoyMDAzL0NvciAxOjIwMDQKICAgICAgPC9saT4KICAgICAgCiAgICAgICAgICAgIDxsaSBjbGFzcz0ic3RlcCBhbGVydCBhbGVydC13YXJuaW5nIj4KICAgICAgICAgICAgPHN0cm9uZz5Sw6l2aXPDqWUgcGFyPC9zdHJvbmc+PGJyLz4KICAgICAgICAgIAogICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkLzUwNTE2Lmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW9rLWNpcmNsZSIgdGl0bGU9IlB1Ymxpw6llIj48L3NwYW4+SVNPL0lFQy9JRUVFIDk5NDU6MjAwOTwvYT48YnIgLz4KICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgIDwvdWw+CiAgPC9kaXY+CjwvZGl2PjxkaXYgY2xhc3M9InJvdyByb3ctYm90dG9tIHJvdy1saWdodCI+CiAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgPGg0PlZvdXMgYXZleiB1bmUgcXVlc3Rpb24/PC9oND4KCjxwPkNvbnN1bHRlciBub3RyZSZuYnNwOzxhIGhyZWY9Ii9mci9mcmVxdWVudGx5LWFza2VkLXF1ZXN0aW9ucy1mYXFzLmh0bWwiIHRpdGxlPSJGb2lyZSBBdXggUXVlc3Rpb25zIChGQVFzKSI+RkFRPC9hPjwvcD4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ2Y2FyZCBjb250YWN0IGNsZWFyZml4IiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxkaXYgY2xhc3M9ImNvbnRlbnQtYm94IG5vLWltYWdlIj4KPGRpdiBjbGFzcz0iZm4gbiI+PHNwYW4gY2xhc3M9ImdpdmVuLW5hbWUiIGl0ZW1wcm9wPSJnaXZlbk5hbWUiPlNlcnZpY2UgJmFncmF2ZTsgbGEgY2xpZW50JmVncmF2ZTtsZTwvc3Bhbj48L2Rpdj4KCjxkaXYgY2xhc3M9InRlbCIgaXRlbXByb3A9InRlbGVwaG9uZSI+KzQxIDIyIDc0OSAwOCA4ODwvZGl2PgoKPGRpdiBjbGFzcz0iZW1haWwiIGl0ZW1wcm9wPSJlbWFpbCI+PGEgaHJlZj0ibWFpbHRvOmN1c3RvbWVyc2VydmljZUBpc28ub3JnIj5jdXN0b21lcnNlcnZpY2VAaXNvLm9yZzwvYT48L2Rpdj4KCjxociAvPgo8ZGl2IGNsYXNzPSJub3RlIj4KPHAgY2xhc3M9InNtYWxsIj5Ib3JhaXJlcyBkJnJzcXVvO291dmVydHVyZTo8YnIgLz4KRGUgbHVuZGkgJmFncmF2ZTsgdmVuZHJlZGkgLSAwOTowMC0xMjowMCwgMTQ6MDAtMTc6MDAgKFVUQysxKTwvcD4KPC9kaXY+CjwvZGl2Pgo8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ3ZWxsIHRleHQtY2VudGVyIj4KICA8aDQ+U3VpdmV6IGwmIzM5O2FjdHVhbGl0JmVhY3V0ZTsgZGUgbCYjMzk7SVNPPC9oND4KCjxwPkluc2NyaXZlei12b3VzICZhZ3JhdmU7IG5vdHJlIE5ld3NsZXR0ZXIgKGVuIGFuZ2xhaXMpIHBvdXIgc3VpdnJlIG5vcyBhY3R1YWxpdCZlYWN1dGU7cywgcG9pbnRzIGRlIHZ1ZSBldCBpbmZvcm1hdGlvbnMgc3VyIG5vcyBwcm9kdWl0cy48L3A+PHA+PGEgY2xhc3M9ImZhbmN5Ym94IGZhbmN5Ym94LmlmcmFtZSBidG4gYnRuLWRlZmF1bHQiIGhyZWY9Imh0dHBzOi8vY29uZmlybXN1YnNjcmlwdGlvbi5jb20vaC9kLzM0MTJEQTc5OTNBQzNCN0MiPlN1YnNjcmliZTwvYT48L3A+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pgo8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cgo8L2Rpdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtYWluIGNvbnRhaW5lciBicmVhZGNydW1iLWNvbnRhaW5lciB0aGVtZS1yZWQiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04IGhpZGRlbi14eHMiPgogICAgICAgICAgPCEtLSBCUkVBRENSVU1CIC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0iYnJlYWRjcnVtYi1jb250YWluZXIgc21hbGwiPgogIAogIDxvbCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9mci9ob21lLmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWhvbWUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L3NwYW4+PC9hPjwvbGk+CiAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RvcmUuaHRtbCI+CiAgICAgICAgICAgICAgICBTdG9yZQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+CgogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCI+CiAgICAgICAgICAgICAgICBJQ1MKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIDxsaT48YSBocmVmPSIvZnIvaWNzLzM1Lmh0bWwiPjM1PC9hPjwvbGk+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuMDYwLmh0bWwiPjM1LjA2MDwvYT48L2xpPgogICAgPGxpPklTTy9JRUMgOTk0NS00OjIwMDMvQ29yIDE6MjAwNDwvbGk+CiAgPC9vbD4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNCBoaWRkZW4tcHJpbnQiPgogICAgICAgICAgPHAgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGNsYXNzPSJhY2NvcmRpb24tdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjY29sbGFwc2VTaXRlbWFwIiB0YXJnZXQ9Il9zZWxmIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIKICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz0iY29sbGFwc2VTaXRlbWFwIj5QbGFuIGR1IHNpdGU8L2E+CiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBib3JkZXItdG9wIiBpZD0iY29sbGFwc2VTaXRlbWFwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgPCEtLSBTSVRFTUFQIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ic2l0ZW1hcC1mb290ZXIgY2xlYXJmaXggc21hbGwiPjx1bCBjbGFzcz0ibmF2LWxldmVsMSBsaXN0LWlubGluZS00IGNsZWFyZml4Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIj5Ob3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCI+QXZhbnRhZ2VzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3NkZ3MuaHRtbCI+T0REPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2Fib3V0LXVzLmh0bWwiPkwnSVNPPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hhdC13ZS1kby5odG1sIj5Ob3MgYWN0aXZpdMOpczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3N0cnVjdHVyZS5odG1sIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiPk1lbWJyZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9uZXdzX2luZGV4Lmh0bWwiPkFjdHVhbGl0w6lzIGV0IG1hbmlmZXN0YXRpb25zPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiPlBhcnRpY2lwZXI8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci93aG8tZGV2ZWxvcHMtc3RhbmRhcmRzLmh0bWwiPlF1aSDDqWxhYm9yZSBsZXMgbm9ybWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIj5Sw6lmw6lyZW50aWVsczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2dldC1pbnZvbHZlZC5odG1sIj5Qb3VycXVvaSBz4oCZZW5nYWdlciA/PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGluUGF0aCBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiPlN0b3JlPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiPlB1YmxpY2F0aW9ucyBldCBwcm9kdWl0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8Zm9vdGVyIHJvbGU9ImNvbnRlbnRpbmZvIiBjbGFzcz0iZm9vdGVyLWlzbyBjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItbGlua3MgY2VudGVyLWJsb2NrIj4KICAgICAgICAgIDwhLS0gRk9PVEVSIExJTktTIC0tPgogICAgICAgICAgPG5hdiA+PHVsIGNsYXNzPSJsaXN0LWlubGluZSBjbGVhcmZpeCB2ZXJ0aWNhbGluZSBuYXYtbGV2ZWwxIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvaXNvLW5hbWUtYW5kLWxvZ28uaHRtbCI+Tm9tIGV0IGxvZ28gZGUgbCdJU088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9wcml2YWN5LWFuZC1jb3B5cmlnaHQuaHRtbCI+Q29uZmlkZW50aWFsaXTDqSBldCBkcm9pdCBkJ2F1dGV1cjwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3NpdGVtYXAuaHRtbCI+UGxhbiBkdSBzaXRlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvd29ya2luZy13aXRoLWlzby5odG1sIiA+RW1wbG9pPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVE8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9jb250YWN0LWlzby5odG1sIj5Db250YWN0ZXIgbCdJU088L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1zb2NpYWwgc3MtaWNvbiBjbGVhcmZpeCI+CiAgICAgICAgICA8dWwgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgICAgICA8bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnIj4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmFjZWJvb2siPu+YkDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iVHdpdHRlciI+75iRPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9QbGFuZXRJU08iIHRpdGxlPSJZb3VUdWJlIj7vmLA8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9pc28taW50ZXJuYXRpb25hbC1vcmdhbml6YXRpb24tZm9yLXN0YW5kYXJkaXphdGlvbiIgdGl0bGU9IkxpbmtlZGluIj7vmJI8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJsYXN0Y29sIj48YSBpdGVtcHJvcD0ic2FtZUFzIiAgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZsaWNrci5jb20vcGhvdG9zL2lzb3N0YW5kYXJkcyIgdGl0bGU9IkZsaWNrciI+75mAPC9hPjwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtYWxsIj5Ob3VzIG5vdXMgZW5nYWdlb25zIMOgIGNlIHF1ZSBub3RyZSBzaXRlIFdlYiBzb2l0IGFjY2Vzc2libGUgw6AgdG91cy4gUG91ciB0b3V0ZSBxdWVzdGlvbiBvdSBzdWdnZXN0aW9uIGNvbmNlcm5hbnQgbCdhY2Nlc3NpYmlsaXTDqSBkdSBzaXRlLCA8YSBocmVmPSJtYWlsdG86d2VibWFzdGVyQGlzby5vcmc/c3ViamVjdD1BY2Nlc3NpYmlsaXR5IiBzdHlsZT0id2hpdGUtc3BhY2U6IG5vd3JhcCI+Y29udGFjdGV6LW5vdXM8L2E+LjwvcD4KICAgICAgICA8c21hbGw+PGEgaHJlZj0iI2NvcHlyaWdodCIgdGFyZ2V0PSJfc2VsZiIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VDb3B5cmlnaHQiPsKpIFRvdXMgZHJvaXRzIHLDqXNlcnbDqXM8L2E+IDxzcGFuIGlkPSJjb3B5cmlnaHQiIGNsYXNzPSJjb2xsYXBzZSI+TGUgbWF0w6lyaWVsIHB1Ymxpw6kgc3VyIElTTy5vcmcgZXN0IHN1amV0IGF1eCBtw6ptZXMgY29uZGl0aW9ucyBlbiBtYXRpw6hyZSBkZSBkcm9pdHMgZOKAmWF1dGV1ciBxdWUgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPIGV0IHNvbiBlbXBsb2kgZXN0IGNvbmRpdGlvbm7DqSBwYXIgbOKAmWFjY2VwdGF0aW9uLCBwYXIgbOKAmXV0aWxpc2F0ZXVyLCBkZXMgY29uZGl0aW9ucyBkZSBs4oCZSVNPIGVuIG1hdGnDqHJlIGRlIGRyb2l0cyBk4oCZYXV0ZXVyIHLDqWdpc3NhbnQgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPLiBUb3V0ZSB1dGlsaXNhdGlvbiBkdSBtYXTDqXJpZWwgY29uY2VybsOpLCB5IGNvbXByaXMgc2EgcmVwcm9kdWN0aW9uIGludMOpZ3JhbGUgb3UgcGFydGllbGxlIHZlcnMgdW4gYXV0cmUgc2l0ZSBJbnRlcm5ldCwgcmVxdWllcnQgbOKAmWF1dG9yaXNhdGlvbiDDqWNyaXRlIGRlIGzigJlJU08uIFRvdXRlIGRlbWFuZGUgw6AgY2V0IGVmZmV0IGRvaXQgw6p0cmUgYWRyZXNzw6llIMOgIDxhIGhyZWY9Im1haWx0bzpjb3B5cmlnaHRAaXNvLm9yZyI+Y29weXJpZ2h0QGlzby5vcmc8L2E+Ljwvc3Bhbj48L3NtYWxsPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgoKICAgIAoKCiAgPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:48 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/38791.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=6C175C3E375187CE9557BC07C8E1C256; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:47 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:48 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/38790.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=9F626CBBDE5463229EA1719A31119F12; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:47 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:48 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/01/78/17840.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=64028FD6B8DC513691C7A5C04C9DFB6F; Path=/; HttpOnly
      Location:
      - "/standard/17840.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:48 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:48 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/04/06/40690.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=FDF4BAEA93EAEB050C7E0AF71F3BE77E; Path=/; HttpOnly
      Location:
      - "/standard/40690.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:48 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:48 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/87/38792.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=A2DE759D68289C582465E6BA9E1AD09A; Path=/; HttpOnly
      Location:
      - "/standard/38792.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:48 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:48 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/17840.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=B94A78DB4A102ED83985E69ACF70979A; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:49 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:50 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/40690.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=858B80D9B53D3E280639F4EFEB59D71D; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:50 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJlbiIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJlbiI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZW4nCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTy9JRUMgOTk0NS0zOjIwMDMvQ29yIDE6MjAwNDwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgoKICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgp2YXIgY29udGV4dEpzUGFyYW1ldGVycz17Y29udGV4dFBhdGg6IiIsbGFuZzoiZW4iLHVpbGFuZzoiZW4iLHNpdGVVdWlkOiI0MzkxNDZmOC02NzdlLTRkZGUtYjZjNi1iNjkyYjc1MzRmNTIiLHdjYWc6ZmFsc2UsY2tlQ2ZnOiIifTsgdmFyIENLRURJVE9SX0JBU0VQQVRIPSIvbW9kdWxlcy9ja2VkaXRvci9qYXZhc2NyaXB0LyI7IHZhciBzY2F5dF9jdXN0b21fcGFyYW1zPW5ldyBBcnJheSgpOyBzY2F5dF9jdXN0b21fcGFyYW1zWydzTGFuZyddPSdlbl9VUyc7Cjwvc2NyaXB0Pgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MwIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3Mvd29vZC5taW4uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzEiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9jdXN0b20uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvYXNzZXRzL2Nzcy9sYW5ndWFnZVN3aXRjaGluZ0xpbmtzLmNzcz8xNTMyMDAzNTA1NzY2IiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9jc3MvY2F0YWxvZ3VlLmNzcz8xNTYwNzU5NTkwMTExIiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2phdmFzY3JpcHQvd29vZC5taW4uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDEiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc28tamFoaWEtc2VydmljZS1tb2R1bGUvamF2YXNjcmlwdC9jYXRhbG9ndWUuanM/MTU2MDc1OTU5MDExMSI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC9jdXN0b20uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CgogICAgICA8IS0tW2lmIGx0ZSBJRSA5XT4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9pZTkud29vZC5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3MvbHRlLWllOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAgIDwhLS0gSFRNTDUgU2hpbSBhbmQgUmVzcG9uZC5qcyBJRTggc3VwcG9ydCBvZiBIVE1MNSBlbGVtZW50cyBhbmQgbWVkaWEgcXVlcmllcyAtLT4KICAgICAgPCEtLSBXQVJOSU5HOiBSZXNwb25kLmpzIGRvZXNuJ3Qgd29yayBpZiB5b3UgdmlldyB0aGUgcGFnZSB2aWEgZmlsZTovLyAtLT4KICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9odG1sNXNoaXYvMy43LjAvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgPCFbZW5kaWZdLS0+CiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZW4vc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjIwMDkwOTE1IiAvPgogIAoKICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGlzb3N0YW5kYXJkcyIgLz4KCiAgPCEtLSBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iSVNPIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9jbXMvcmVuZGVyL2xpdmUvZW4vc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDQvMDYvNDA2OTAuaHRtbCIgLz4KICAKICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIAogICAgPCEtLSBUaHVtYm5haWwgaW1hZ2UgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InRodW1ibmFpbCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6YWx0IiBjb250ZW50PSJJU08gbG9nbyIgLz4KICAKICAgIDwhLS0gVGl0bGUgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0zOjIwMDMvQ29yIDE6MjAwNCIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iSVNPL0lFQyA5OTQ1LTM6MjAwMy9Db3IgMToyMDA0IiAvPgogIAoKICA8IS0tIEZhY2Vib29rIGFkbWlucyA6IExpb25lbCxNYXJpYSAtLT4KICA8bWV0YSBwcm9wZXJ0eT0iZmI6YWRtaW5zIiBjb250ZW50PSIxMDAwMDExMTYwNzk2NzYsMTAwMDAxNDQwMDAzMzA1IiAvPgoKICAKCjwvaGVhZD4KICA8Ym9keSBjbGFzcz0idGhlbWUtcmVkIj4KICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICA8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVRGR0tRUUIiIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KCiAgICA8IS0tIEhlYWRlciBJU08uT1JHIC0tPgogICAgPGhlYWRlciBjbGFzcz0iaGVhZGVyIGhlYWRlci1pc28gY29udGFpbmVyIiByb2xlPSJiYW5uZXIiPgogICAgICA8ZGl2IGNsYXNzPSJydWJiZXIiPjwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXIgdG9wYmFyLWxpZ2h0Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXItY29udGVudCI+CiAgICAgICAgICAKCjx1bCBpZD0ibGFuZy1zd2l0Y2hlciI+CiAgPGxpIGNsYXNzPSJkcm9wZG93biI+CiAgICA8YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGhyZWY9IiMiPkVuZ2xpc2ggPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+PC9hPgogICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgPGxpPjxhIGhyZWY9Ii9mci9zdGFuZGFyZC80MDY5MC5odG1sIj5mcmFuw6dhaXM8L2E+PC9saT48bGk+PGEgaHJlZj0iL3J1L3N0YW5kYXJkLzQwNjkwLmh0bWwiPtGA0YPRgdGB0LrQuNC5PC9hPjwvbGk+CiAgICA8L3VsPgogIDwvbGk+CjwvdWw+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgICAgPHVsIGNsYXNzPSJ0b3BsaW5rcyI+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBjbGFzcz0ic2hvcHBpbmctY2FydC1saW5rIiBocmVmPSIvd2Vic3RvcmUvc2hvcHBpbmdiYXNrZXQ/bWVtYmVySWQ9SVNPJmd1aWxhbmc9ZW4iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hvcHBpbmctY2FydC1iYWRnZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNob3BwaW5nLWNhcnQiIGlkPSJzaG9wcGluZ0l0ZW1zIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWNvbnRhaW5lciBoZWFkZXItaW1nIGhlYWRlci1pbWctaXNvIGhlYWRlci1zaG9ydCI+CiAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwhLS0gQnJhbmQgYW5kIHRvZ2dsZSBnZXQgZ3JvdXBlZCBmb3IgYmV0dGVyIG1vYmlsZSBkaXNwbGF5IC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJsb2dvIGlzb2xvZ28iIGhyZWY9Ii9ob21lLmh0bWwiIHRpdGxlPSJJU08iPjwvYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXNvbG9nby1wcmludCI+PGltZyBzcmM9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2lzby1sb2dvLXByaW50LmdpZiIgYWx0PSJJU08gbG9nbyBmb3IgcHJpbnQiLz48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRpdGxlIGNsZWFyZml4Ij4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUtbWVkaXVtIHRpdGxlLXRoaW4iPkludGVybmF0aW9uYWwgT3JnYW5pemF0aW9uIGZvciBTdGFuZGFyZGl6YXRpb248L3A+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlLXNtYWxsIHRpdGxlLXJlZCB0ZXh0LXJpZ2h0IGhpZGRlbi14cyI+V2hlbiB0aGUgd29ybGQgYWdyZWVzPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPCEtLSBOQVZJR0FUSU9OIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ibmF2LWNvbnRhaW5lciBjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UgbmF2LTNsZXZlbHMiaWQ9Im9mZmNhbnZhcy1tZW51Ij4KCgo8Zm9ybSBpZD0ibmF2TWVudS1zZWFyY2hOYXYiIGNsYXNzPSJuYXZiYXItZm9ybSBuYXZiYXItcmlnaHQiIHJvbGU9InNlYXJjaCI+CiAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgc2VhcmNoLWlucHV0IiBwbGFjZWhvbGRlcj0iU2VhcmNoIj4KICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC1idG4iPgogICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgc2VhcmNoLXN1Ym1pdCIgdHlwZT0ic3VibWl0Ij4KICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giPjwvc3Bhbj4KICAgICAgPC9idXR0b24+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjwvZm9ybT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDEgdmVydGljYWxpbmUgbm9jYXJldCI+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RhbmRhcmRzPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkJlbmVmaXRzPC9hPjxkaXYgY2xhc3M9J2Ryb3Bkb3duLW1lbnUgbmF2LXBhbmVsJyByb2xlPSdtZW51Jz4KICA8ZGl2IGNsYXNzPSdwYW5lbC1pbWFnZSc+CiAgICA8aW1nIHNyYz0nL2ZpbGVzL2xpdmUvc2l0ZXMvaXNvb3JnL2ZpbGVzL19ub2luZGV4L3N0cmVldC1wZWRlc3RyaWFuLWNyb3Nzd2Fsay5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nUGVkZXN0cmlhbnMgY3Jvc3NpbmcgYSBzdHJlZXQgYXQgYSBjcm9zc3dhbGsuJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QmVuZWZpdHM8L2E+PC9oND4KPHA+V2hldGhlciB5b3UgcnVuIGEgYnVzaW5lc3MsIHdvcmsgZm9yIGEgY29tcGFueSBvciBnb3Zlcm5tZW50LCBvciB3YW50IHRvIGtub3cgaG93IHN0YW5kYXJkcyBjb250cmlidXRlIHRvIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0aGF0IHlvdSB1c2UsIHlvdSdsbCBmaW5kIGl0IGhlcmUuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvaXNvLWFuZC1zbWVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlNNRXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9iZW5lZml0cy1vZi1zdGFuZGFyZHMtdGhlLWlzby1tYXRlcmlhbHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TGVhcm4gbW9yZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2lzby1hbmQtY29uc3VtZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNvbnN1bWVyczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2lzby1hbmQtcG9saWN5LW1ha2Vycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5JU08gYW5kIHBvbGljeSBtYWtlcnM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zdGFuZGFyZHMtaW4tYWN0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0YW5kYXJkcyBpbiBhY3Rpb248L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3BvcHVsYXItc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlBvcHVsYXIgc3RhbmRhcmRzPC9hPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciI+PGEgaHJlZj0iL2NvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uICYgY29uZm9ybWl0eTwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9taWNyb3Njb3BlLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdTY2llbnRpc3QgcGxhY2luZyBhIHNsaWRlIGJlbmVhdGggYW4gb3B0aWNhbCBtaWNyb3Njb3BlJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q2VydGlmaWNhdGlvbiAmIGNvbmZvcm1pdHk8L2E+PC9oND4KPHA+QSBzZXQgb2YgcHJvY2Vzc2VzIHRoYXQgc2hvdyB5b3VyIHByb2R1Y3QsIHNlcnZpY2Ugb3Igc3lzdGVtIG1lZXRzIHRoZSByZXF1aXJlbWVudHMgb2YgYSBzdGFuZGFyZC48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9jZXJ0aWZpY2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb248L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9jYXNjby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DQVNDTzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3RoZS1pc28tc3VydmV5Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlRoZSBJU08gU3VydmV5PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcmVzb3VyY2VzLWZvci1jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9zZGdzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlNER3M8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIj48YSBocmVmPSIvYWJvdXQtdXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWxsIGFib3V0IElTTzwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3doYXQtd2UtZG8uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+V2hhdCB3ZSBkbzwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9idXNpbmVzcy1zZW1pbmFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdCYWNrIHZpZXcgb2YgcGVvcGxlIGluIGEgbWVldGluZywgbG9va2luZyBhdCBhIHByZXNlbnRhdGlvbiBvbiBhIHNjcmVlbi4nPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL3doYXQtd2UtZG8uaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+V2hhdCB3ZSBkbzwvYT48L2g0Pgo8cD5GaW5kIG91dCBob3cgd2UgZGV2ZWxvcCBhbmQgcHVibGlzaCBpbnRlcm5hdGlvbmFsIHN0YW5kYXJkcyBieSBicmluZ2luZyB0b2dldGhlciBtb3JlIHRoYW4gMTYwIG1lbWJlcnMgYW5kIG1vcmUgdGhhbiA0NSwwMDAgZXhwZXJ0czwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiICBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5EZXZlbG9waW5nIHN0YW5kYXJkczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL3Jlc2VhcmNoLWFuZC1lZHVjYXRpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzZWFyY2g8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9jYXBhY2l0eS1idWlsZGluZy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DYXBhY2l0eSBidWlsZGluZzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2VkdWNhdGlvbi1hYm91dC1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RWR1Y2F0aW9uIGFib3V0IHN0YW5kYXJkczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2Rpdj48IS0tIGNsb3NlIG9mIHBhbmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvc3RydWN0dXJlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0cnVjdHVyZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL21lbWJlcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TWVtYmVyczwvYT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIiPjxhIGhyZWY9Ii9uZXdzX2luZGV4Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5ld3MgYW5kIGV2ZW50czwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9BbGwlMjBhYm91dCUyMElTTy1OZXdzX2NhbGVuZGFyLWNsb3NlLXVwJTIwTm8lMjB5ZWFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdNb250aHMgYW5kIGRhdGVzIHNob3duIG9uIGEgY2FsZW5kYXIgd2hpbHN0IHR1cm5pbmcgdGhlIHBhZ2VzIHdpdGggc2hhbGxvdyBkZXB0aCBvZiBmaWVsZCc+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvbmV3c19pbmRleC5odG1sJyBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5OZXdzIGFuZCBldmVudHM8L2E+PC9oND4KPHA+S2VlcCB1cCB0byBkYXRlIHdpdGggdGhlIGxhdGVzdCBpbiBzdGFuZGFyZGl6YXRpb24gb3IgYnJvd3NlIG91ciByaWNoIGFyY2hpdmVzPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvaXNvZm9jdXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+SVNPZm9jdXMgbWFnYXppbmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9ldmVudHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RXZlbnRzIGFuZCBtZWV0aW5nczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL21lZGlhLWtpdC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NZWRpYSBraXQ8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9uZXdzX2FyY2hpdmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TmV3czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2Rpdj48IS0tIGNsb3NlIG9mIHBhbmVsIC0tPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgaHJlZj0iL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlRha2luZyBwYXJ0PC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvd2hvLWRldmVsb3BzLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5XaG8gZGV2ZWxvcHMgc3RhbmRhcmRzPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMyBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii90ZWNobmljYWwtY29tbWl0dGVlcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5UZWNobmljYWwgQ29tbWl0dGVlczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL290aGVyLWJvZGllcy1kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5PdGhlciBib2RpZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9vcmdhbml6YXRpb25zLWluLWNvb3BlcmF0aW9uLXdpdGgtaXNvLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk9yZ2FuaXphdGlvbnMgaW4gY29vcGVyYXRpb248L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9kZWxpdmVyYWJsZXMtYWxsLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkRlbGl2ZXJhYmxlczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2dldC1pbnZvbHZlZC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5HZXQgaW52b2x2ZWQ8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9yZXNvdXJjZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBpblBhdGggb3BlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL3N0b3JlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlN0b3JlPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBpblBhdGggYWN0aXZlIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RhbmRhcmRzIGNhdGFsb2d1ZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL3B1YmxpY2F0aW9uLWxpc3QuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UHVibGljYXRpb25zIGFuZCBwcm9kdWN0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im9mZmNhbnZhcy10b2dnbGUiIGRhdGEtdG9nZ2xlPSJvZmZjYW52YXMiPiAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tbWVudS1oYW1idXJnZXIiPjwvc3Bhbj48L2J1dHRvbj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9uYXY+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgICAKCgoKCgo8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0iaW5kZXhSZWZlcmVuY2UiIGRhdGEtaW5kZXg9IjQwNjkwIC0gSVNPL0lFQyA5OTQ1LTM6MjAwMy9Db3IgMToyMDA0IC0gIj48L3NwYW4+CjxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPgogIDxkaXYgY2xhc3M9InJvdyByb3ctdG9wIHJvdy1saWdodCI+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+U3RhbmRhcmRzIGNhdGFsb2d1ZTwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2VuL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTM6MjAwMy9Db3IgMToyMDA0PC9saT4KICA8L29sPgoKPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9ImNhdGVnb3J5Ij53PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9InByb2R1Y3RJRCIgaWQ9ImNzTnVtYmVyIj40MDY5MDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJicmFuZCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICA8ZGl2IGl0ZW1wcm9wPSJsb2dvIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9JbWFnZU9iamVjdCI+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0idXJsIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiLz4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ3aWR0aCIgY29udGVudD0iMjgzIj4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJoZWlnaHQiIGNvbnRlbnQ9IjI2MSI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9IklTTyAtIEludGVybmF0aW9uYWwgT3JnYW5pemF0aW9uIGZvciBTdGFuZGFyZGl6YXRpb24iPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9ImhlYWRpbmctY29uZGVuc2VkIj4KICAgICAgICA8aDE+CiAgICAgICAgICA8c3Ryb25nIGlkPSJpdGVtUmVmZXJlbmNlIiBpdGVtcHJvcD0ibmFtZSI+SVNPL0lFQyA5OTQ1LTM6MjAwMy9Db3IgMToyMDA0PC9zdHJvbmc+CiAgICAgICAgICAKICAgICAgICA8L2gxPgoKICAgICAgICA8aDIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj48L2gyPgogICAgICAgIAogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgoKICAKICAgIDxkaXYgY2xhc3M9InJvdyByb3ctbWlkZGxlIGFsZXJ0LWRhbmdlciBlbXBoYXNpcy1kYW5nZXIiPgogICAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nOiAwIDE1cHg7Ij4KICAgICAgICA8aDYgcm9sZT0iYWxlcnQiIGNsYXNzPSJuby1tYXJnaW4iPgogICAgICAgICAgVGhpcyBzdGFuZGFyZCBoYXMgYmVlbiByZXZpc2VkIGJ5CiAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFuZGFyZC81MDUxNi5odG1sIj5JU08vSUVDL0lFRUUgOTk0NToyMDA5PC9hPgogICAgICAgIDwvaDY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgCgogIDxkaXYgY2xhc3M9InJvdyI+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNyI+CgogICAgICA8ZGl2IGNsYXNzPSJ3ZWxsIj4KICA8aDM+CiAgICBHZW5lcmFsIGluZm9ybWF0aW9uCiAgICA8c3VwPjxhIGhyZWY9Ii9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzA2LzQwNjkwLmRldGFpbC5yc3MiIGNsYXNzPSJzcy1pY29uIHNzLXNvY2lhbC1jaXJjbGUgdGV4dC13YXJuaW5nIHRleHQtc21hbGwiIGRhdGEtdG9nZ2xlPSJpc28tdG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iU3Vic2NyaWJlJm5ic3A7dG8mbmJzcDt1cGRhdGVzIj4mI3hFMzEwOzwvYT48L3N1cD4KICA8L2gzPgogIAoKICA8dWwgY2xhc3M9InJlZmluZSI+CiAgICA8bGk+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCgogICAgICAgICAgICA8c3Ryb25nPlN0YXR1cyZuYnNwOzombmJzcDsmbmJzcDs8L3N0cm9uZz48c3Bhbj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iV2l0aGRyYXduIj48L3NwYW4+V2l0aGRyYXduPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgICAgIDxzdHJvbmc+UHVibGljYXRpb24gZGF0ZSZuYnNwOzogPC9zdHJvbmc+PHNwYW4gaXRlbXByb3A9InJlbGVhc2VEYXRlIj4yMDA0LTA5PC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICAgICAgPHN0cm9uZz5FZGl0aW9uJm5ic3A7Ojwvc3Ryb25nPiAxCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbGFiZWwiPlRlY2huaWNhbCBDb21taXR0ZWU8L2Rpdj4gOgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jb21taXR0ZWUvNDUyMDIuaHRtbCI+SVNPL0lFQyBKVEMgMS9TQyAyMjwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktdGl0bGUiPlByb2dyYW1taW5nIGxhbmd1YWdlcywgdGhlaXIgZW52aXJvbm1lbnRzIGFuZCBzeXN0ZW0gc29mdHdhcmUgaW50ZXJmYWNlczwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgCiAgICA8bGk+CiAgICAgIDxkbCBjbGFzcz0iZGwtaW5saW5lIG5vLWJvdHRvbS1tYXJnaW4iPgogICAgICAgIDxkdCBjbGFzcz0iZW50cnktbGFiZWwgZW50cnktYmxvY2siPjxzdHJvbmc+SUNTIDogPC9zdHJvbmc+PC9kdD4KICAgICAgICAKICAgICAgICAgIDxkZD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ljcy8zNS4wNjAuaHRtbCI+CiAgICAgICAgICAgICAgICAgIDM1LjA2MAogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5ndWFnZXMgdXNlZCBpbiBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5PC9kaXY+CiAgICAgICAgICA8L2RkPgogICAgICAgIAogICAgICA8L2RsPgogICAgPC9saT4KICA8L3VsPgo8L2Rpdj4KCiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCBjb2wtbWQtb2Zmc2V0LTEiPgogICAgICAKCiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgCjxkaXYgY2xhc3M9InJvdyByb3ctbWlkZGxlIHJvdy10b3BsaW5lIj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgPGgzPkxpZmUgY3ljbGU8L2gzPgogICAgPHA+CiAgICAgIEEgc3RhbmRhcmQgaXMgcmV2aWV3ZWQgZXZlcnkgNSB5ZWFycwogICAgPC9wPgogICAgPGRpdiBjbGFzcz0iY2xlYXJmaXggdGhlbWUtcmVkIj4KICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBzdGFnZXMiPgogICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjAwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByZWxpbWluYXJ5PC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MTA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJvcG9zYWw8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjMTAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjEwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDEtMTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIE5ldyBwcm9qZWN0IGFwcHJvdmVkCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MjA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJlcGFyYXRvcnk8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4zMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Db21taXR0ZWU8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjMzAuMDAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDEtMTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENvbW1pdHRlZSBkcmFmdCAoQ0QpIHJlZ2lzdGVyZWQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCMzMC4yMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+MzAuMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwNC0wMS0xMjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgQ0Qgc3R1ZHkvYmFsbG90IGluaXRpYXRlZAogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzMwLjYwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj4zMC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA0LTA0LTIzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBDbG9zZSBvZiB2b3RpbmcvIGNvbW1lbnQgcGVyaW9kCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjMzAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDctMjE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENEIGFwcHJvdmVkIGZvciByZWdpc3RyYXRpb24gYXMgRElTCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+RW5xdWlyeTwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjUwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkFwcHJvdmFsPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NjA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHVibGljYXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YWdlLWNvZGVzLmh0bWwjNjAuMDAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjYwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDgtMTE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEludGVybmF0aW9uYWwgU3RhbmRhcmQgdW5kZXIgcHVibGljYXRpb24KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvc3RhZ2UtY29kZXMuaHRtbCM2MC42MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NjAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwNC0wOS0yMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgSW50ZXJuYXRpb25hbCBTdGFuZGFyZCBwdWJsaXNoZWQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5SZXZpZXc8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gYWxlcnQtZGFuZ2VyIGFjdGl2ZSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+OTUuOTk8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+V2l0aGRyYXdhbDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGFnZS1jb2Rlcy5odG1sIzk1Ljk5Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj45NS45OTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA5LTA5LTE1PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBXaXRoZHJhd2FsIG9mIEludGVybmF0aW9uYWwgU3RhbmRhcmQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgPC91bD4KICAgIDwvZGl2PgogICAgPGJyLz4KICAgIDxici8+CiAgICA8aDQ+UmV2aXNpb25zJm5ic3A7LyZuYnNwO0NvcnJpZ2VuZGE8L2g0PgogICAgPHVsIGNsYXNzPSJzdGVwcyI+CiAgICAgIAogICAgICA8bGkgY2xhc3M9IiBhbGVydCBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICA8c3Ryb25nPk5vdyB3aXRoZHJhd248L3N0cm9uZz48YnIvPgogICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJXaXRoZHJhd24iPjwvc3Bhbj5JU08vSUVDIDk5NDUtMzoyMDAzL0NvciAxOjIwMDQKICAgICAgPC9saT4KICAgICAgCiAgICAgICAgICAgIDxsaSBjbGFzcz0ic3RlcCBhbGVydCBhbGVydC13YXJuaW5nIj4KICAgICAgICAgICAgPHN0cm9uZz5SZXZpc2VkIGJ5PC9zdHJvbmc+PGJyLz4KICAgICAgICAgIAogICAgICAgICAgPGEgaHJlZj0iL3N0YW5kYXJkLzUwNTE2Lmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW9rLWNpcmNsZSIgdGl0bGU9IlB1Ymxpc2hlZCI+PC9zcGFuPklTTy9JRUMvSUVFRSA5OTQ1OjIwMDk8L2E+PGJyIC8+CiAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgCiAgICA8L3VsPgogIDwvZGl2Pgo8L2Rpdj48ZGl2IGNsYXNzPSJyb3cgcm93LWJvdHRvbSByb3ctbGlnaHQiPgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxoND5Hb3QgYSBxdWVzdGlvbj88L2g0PgoKPHA+Q2hlY2sgb3V0IG91ciA8YSBocmVmPSIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIiB0aXRsZT0iRnJlcXVlbnRseSBBc2tlZCBRdWVzdGlvbnMgKEZBUXMpIj5GQVFzPC9hPjwvcD4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ2Y2FyZCBjb250YWN0IGNsZWFyZml4IiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxkaXYgY2xhc3M9ImNvbnRlbnQtYm94IG5vLWltYWdlIj4KPGRpdiBjbGFzcz0iZm4gbiI+PHNwYW4gY2xhc3M9ImdpdmVuLW5hbWUiIGl0ZW1wcm9wPSJnaXZlbk5hbWUiPkN1c3RvbWVyIGNhcmU8L3NwYW4+PC9kaXY+Cgo8ZGl2IGNsYXNzPSJ0ZWwiIGl0ZW1wcm9wPSJ0ZWxlcGhvbmUiPis0MSAyMiA3NDkgMDggODg8L2Rpdj4KCjxkaXYgY2xhc3M9ImVtYWlsIiBpdGVtcHJvcD0iZW1haWwiPjxhIGhyZWY9Im1haWx0bzpjdXN0b21lcnNlcnZpY2VAaXNvLm9yZyI+Y3VzdG9tZXJzZXJ2aWNlQGlzby5vcmc8L2E+PC9kaXY+Cgo8aHIgLz4KPGRpdiBjbGFzcz0ibm90ZSI+CjxwIGNsYXNzPSJzbWFsbCI+T3BlbmluZyBob3Vyczo8YnIgLz4KTW9uZGF5IHRvIEZyaWRheSAtIDA5OjAwLTEyOjAwLCAxNDowMC0xNzowMCAoVVRDKzEpPC9wPgo8L2Rpdj4KPC9kaXY+CjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxkaXYgY2xhc3M9IndlbGwgdGV4dC1jZW50ZXIiPgogIDxoND5LZWVwIHVwIHRvIGRhdGUgd2l0aCBJU088L2g0PgoKPHA+U2lnbiB1cCB0byBvdXIgbmV3c2xldHRlciBmb3IgdGhlIGxhdGVzdCBuZXdzLCB2aWV3cyBhbmQgcHJvZHVjdCBpbmZvcm1hdGlvbjwvcD48cD48YSBjbGFzcz0iZmFuY3lib3ggZmFuY3lib3guaWZyYW1lIGJ0biBidG4tZGVmYXVsdCIgaHJlZj0iaHR0cHM6Ly9jb25maXJtc3Vic2NyaXB0aW9uLmNvbS9oL2QvMzQxMkRBNzk5M0FDM0I3QyI+U3Vic2NyaWJlPC9hPjwvcD48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CjwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIGJyZWFkY3J1bWItY29udGFpbmVyIHRoZW1lLXJlZCI+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggaGlkZGVuLXh4cyI+CiAgICAgICAgICA8IS0tIEJSRUFEQ1JVTUIgLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+U3RhbmRhcmRzIGNhdGFsb2d1ZTwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9lbi9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2VuL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTM6MjAwMy9Db3IgMToyMDA0PC9saT4KICA8L29sPgoKPC9kaXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS00IGhpZGRlbi1wcmludCI+CiAgICAgICAgICA8cCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgIDxhIHJvbGU9ImJ1dHRvbiIgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUgY29sbGFwc2VkIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGhyZWY9IiNjb2xsYXBzZVNpdGVtYXAiIHRhcmdldD0iX3NlbGYiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIgogICAgICAgICAgICAgICBhcmlhLWNvbnRyb2xzPSJjb2xsYXBzZVNpdGVtYXAiPlNpdGVtYXA8L2E+CiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBib3JkZXItdG9wIiBpZD0iY29sbGFwc2VTaXRlbWFwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgPCEtLSBTSVRFTUFQIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ic2l0ZW1hcC1mb290ZXIgY2xlYXJmaXggc21hbGwiPjx1bCBjbGFzcz0ibmF2LWxldmVsMSBsaXN0LWlubGluZS00IGNsZWFyZml4Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3N0YW5kYXJkcy5odG1sIj5TdGFuZGFyZHM8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCI+QmVuZWZpdHM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9wb3B1bGFyLXN0YW5kYXJkcy5odG1sIj5Qb3B1bGFyIHN0YW5kYXJkczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2NvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIj5DZXJ0aWZpY2F0aW9uICYgY29uZm9ybWl0eTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL3NkZ3MuaHRtbCI+U0RHczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gaG92ZXIiPjxhIGhyZWY9Ii9hYm91dC11cy5odG1sIj5BbGwgYWJvdXQgSVNPPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvd2hhdC13ZS1kby5odG1sIj5XaGF0IHdlIGRvPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvc3RydWN0dXJlLmh0bWwiPlN0cnVjdHVyZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL21lbWJlcnMuaHRtbCI+TWVtYmVyczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL25ld3NfaW5kZXguaHRtbCI+TmV3cyBhbmQgZXZlbnRzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiPlRha2luZyBwYXJ0PC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvd2hvLWRldmVsb3BzLXN0YW5kYXJkcy5odG1sIj5XaG8gZGV2ZWxvcHMgc3RhbmRhcmRzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZGVsaXZlcmFibGVzLWFsbC5odG1sIj5EZWxpdmVyYWJsZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9nZXQtaW52b2x2ZWQuaHRtbCI+R2V0IGludm9sdmVkPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvcmVzb3VyY2VzLmh0bWwiPlJlc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gaG92ZXIgaW5QYXRoIGxhc3RJbkxldmVsIj48YSBocmVmPSIvc3RvcmUuaHRtbCI+U3RvcmU8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBpblBhdGggYWN0aXZlIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+U3RhbmRhcmRzIGNhdGFsb2d1ZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL3B1YmxpY2F0aW9uLWxpc3QuaHRtbCI+UHVibGljYXRpb25zIGFuZCBwcm9kdWN0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8Zm9vdGVyIHJvbGU9ImNvbnRlbnRpbmZvIiBjbGFzcz0iZm9vdGVyLWlzbyBjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItbGlua3MgY2VudGVyLWJsb2NrIj4KICAgICAgICAgIDwhLS0gRk9PVEVSIExJTktTIC0tPgogICAgICAgICAgPG5hdiA+PHVsIGNsYXNzPSJsaXN0LWlubGluZSBjbGVhcmZpeCB2ZXJ0aWNhbGluZSBuYXYtbGV2ZWwxIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvaXNvLW5hbWUtYW5kLWxvZ28uaHRtbCI+SVNPIG5hbWUgYW5kIGxvZ288L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9wcml2YWN5LWFuZC1jb3B5cmlnaHQuaHRtbCI+UHJpdmFjeSBhbmQgY29weXJpZ2h0PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvc2l0ZW1hcC5odG1sIj5TaXRlbWFwPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvd29ya2luZy13aXRoLWlzby5odG1sIiA+Sm9iczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyZXF1ZW50bHktYXNrZWQtcXVlc3Rpb25zLWZhcXMuaHRtbCI+RkFRczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2NvbnRhY3QtaXNvLmh0bWwiPkNvbnRhY3QgSVNPPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbmF2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItc29jaWFsIHNzLWljb24gY2xlYXJmaXgiPgogICAgICAgICAgPHVsIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICAgICAgPGxpbmsgaXRlbXByb3A9InVybCIgaHJlZj0iaHR0cHM6Ly93d3cuaXNvLm9yZyI+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2lzb3N0YW5kYXJkcyIgdGl0bGU9IkZhY2Vib29rIj7vmJA8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2lzb3N0YW5kYXJkcyIgdGl0bGU9IlR3aXR0ZXIiPu+YkTwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvUGxhbmV0SVNPIiB0aXRsZT0iWW91VHViZSI+75iwPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvaXNvLWludGVybmF0aW9uYWwtb3JnYW5pemF0aW9uLWZvci1zdGFuZGFyZGl6YXRpb24iIHRpdGxlPSJMaW5rZWRpbiI+75iSPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibGFzdGNvbCI+PGEgaXRlbXByb3A9InNhbWVBcyIgIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mbGlja3IuY29tL3Bob3Rvcy9pc29zdGFuZGFyZHMiIHRpdGxlPSJGbGlja3IiPu+ZgDwvYT48L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8cCBjbGFzcz0idGV4dC1zbWFsbCI+V2UgYXJlIGNvbW1pdHRlZCB0byBlbnN1cmluZyB0aGF0IG91ciB3ZWJzaXRlIGlzIGFjY2Vzc2libGUgdG8gZXZlcnlvbmUuIElmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMgb3Igc3VnZ2VzdGlvbnMgcmVnYXJkaW5nIHRoZSBhY2Nlc3NpYmlsaXR5IG9mIHRoaXMgc2l0ZSwgcGxlYXNlIDxhIGhyZWY9Im1haWx0bzp3ZWJtYXN0ZXJAaXNvLm9yZz9zdWJqZWN0PUFjY2Vzc2liaWxpdHkiIHN0eWxlPSJ3aGl0ZS1zcGFjZTogbm93cmFwIj5jb250YWN0IHVzPC9hPi48L3A+CiAgICAgICAgPHNtYWxsPjxhIGhyZWY9IiNjb3B5cmlnaHQiIHRhcmdldD0iX3NlbGYiIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtY29udHJvbHM9ImNvbGxhcHNlQ29weXJpZ2h0Ij7CqSBBbGwgUmlnaHRzIFJlc2VydmVkPC9hPiA8c3BhbiBpZD0iY29weXJpZ2h0IiBjbGFzcz0iY29sbGFwc2UiPkFsbCBJU08gcHVibGljYXRpb25zIGFuZCBtYXRlcmlhbHMgYXJlIHByb3RlY3RlZCBieSBjb3B5cmlnaHQgYW5kIGFyZSBzdWJqZWN0IHRvIHRoZSB1c2Vy4oCZcyBhY2NlcHRhbmNlIG9mIElTT+KAmXMgY29uZGl0aW9ucyBvZiBjb3B5cmlnaHQuIEFueSB1c2UsIGluY2x1ZGluZyByZXByb2R1Y3Rpb24gcmVxdWlyZXMgb3VyIHdyaXR0ZW4gcGVybWlzc2lvbi4gQWxsIGNvcHlyaWdodCByZXF1ZXN0cyBzaG91bGQgYmUgYWRkcmVzc2VkIHRvIDxhIGhyZWY9Im1haWx0bzpjb3B5cmlnaHRAaXNvLm9yZyI+Y29weXJpZ2h0QGlzby5vcmc8L2E+Ljwvc3Bhbj48L3NtYWxsPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgoKICAgIAoKCiAgPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:50 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/38792.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=7DAC7FFDE055C65D192B3458AAB1C8CD; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:50 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:51 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/17840.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=A9B1FB35ACA8F1603414DE7502231CFB; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:51 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZnIiIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJmciIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJmciI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZnInCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTy9JRUMgOTk0NS0xOjE5OTAgLSBUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDE6IEludGVyZmFjZSBwcm9ncmFtbWUgZGUgc3lzdMOobWVzIGQmIzAzOTthcHBsaWNhdGlvbiAoQVBJKSBbTGFuZ2FnZSBDXTwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgoKICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgp2YXIgY29udGV4dEpzUGFyYW1ldGVycz17Y29udGV4dFBhdGg6IiIsbGFuZzoiZnIiLHVpbGFuZzoiZnIiLHNpdGVVdWlkOiI0MzkxNDZmOC02NzdlLTRkZGUtYjZjNi1iNjkyYjc1MzRmNTIiLHdjYWc6ZmFsc2UsY2tlQ2ZnOiIifTsgdmFyIENLRURJVE9SX0JBU0VQQVRIPSIvbW9kdWxlcy9ja2VkaXRvci9qYXZhc2NyaXB0LyI7IHZhciBzY2F5dF9jdXN0b21fcGFyYW1zPW5ldyBBcnJheSgpOyBzY2F5dF9jdXN0b21fcGFyYW1zWydzTGFuZyddPSdmcl9GUic7Cjwvc2NyaXB0Pgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MwIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3Mvd29vZC5taW4uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzEiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9jdXN0b20uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvYXNzZXRzL2Nzcy9sYW5ndWFnZVN3aXRjaGluZ0xpbmtzLmNzcz8xNTMyMDAzNTA1NzY2IiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9jc3MvY2F0YWxvZ3VlLmNzcz8xNTYwNzU5NTkwMTExIiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2phdmFzY3JpcHQvd29vZC5taW4uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDEiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc28tamFoaWEtc2VydmljZS1tb2R1bGUvamF2YXNjcmlwdC9jYXRhbG9ndWUuanM/MTU2MDc1OTU5MDExMSI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC9jdXN0b20uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CgogICAgICA8IS0tW2lmIGx0ZSBJRSA5XT4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9pZTkud29vZC5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3MvbHRlLWllOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAgIDwhLS0gSFRNTDUgU2hpbSBhbmQgUmVzcG9uZC5qcyBJRTggc3VwcG9ydCBvZiBIVE1MNSBlbGVtZW50cyBhbmQgbWVkaWEgcXVlcmllcyAtLT4KICAgICAgPCEtLSBXQVJOSU5HOiBSZXNwb25kLmpzIGRvZXNuJ3Qgd29yayBpZiB5b3UgdmlldyB0aGUgcGFnZSB2aWEgZmlsZTovLyAtLT4KICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9odG1sNXNoaXYvMy43LjAvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgPCFbZW5kaWZdLS0+CiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjE5OTYxMTI4IiAvPgogIAoKICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGlzb3N0YW5kYXJkcyIgLz4KCiAgPCEtLSBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iSVNPIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDEvNzgvMTc4NDAuaHRtbCIgLz4KICAKICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIAogICAgPCEtLSBUaHVtYm5haWwgaW1hZ2UgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InRodW1ibmFpbCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6YWx0IiBjb250ZW50PSJJU08gbG9nbyIgLz4KICAKICAgIDwhLS0gVGl0bGUgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0xOjE5OTAiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0xOjE5OTAiIC8+CiAgCiAgICA8IS0tIERlc2NyaXB0aW9uIChmb3IgZ29vZ2xlLCB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlRlY2hub2xvZ2llcyBkZSBsJiMwMzk7aW5mb3JtYXRpb24gLS0gSW50ZXJmYWNlIHBvdXIgbGEgcG9ydGFiaWxpdMOpIGRlcyBzeXN0w6htZXMgKFBPU0lYKSAtLSBQYXJ0aWUgMTogSW50ZXJmYWNlIHByb2dyYW1tZSBkZSBzeXN0w6htZXMgZCYjMDM5O2FwcGxpY2F0aW9uIChBUEkpIFtMYW5nYWdlIENdIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDE6IEludGVyZmFjZSBwcm9ncmFtbWUgZGUgc3lzdMOobWVzIGQmIzAzOTthcHBsaWNhdGlvbiAoQVBJKSBbTGFuZ2FnZSBDXSIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDE6IEludGVyZmFjZSBwcm9ncmFtbWUgZGUgc3lzdMOobWVzIGQmIzAzOTthcHBsaWNhdGlvbiAoQVBJKSBbTGFuZ2FnZSBDXSIgLz4KICAKCiAgPCEtLSBGYWNlYm9vayBhZG1pbnMgOiBMaW9uZWwsTWFyaWEgLS0+CiAgPG1ldGEgcHJvcGVydHk9ImZiOmFkbWlucyIgY29udGVudD0iMTAwMDAxMTE2MDc5Njc2LDEwMDAwMTQ0MDAwMzMwNSIgLz4KCiAgCgo8L2hlYWQ+CiAgPGJvZHkgY2xhc3M9InRoZW1lLXJlZCI+CiAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgogICAgPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1URkdLUVFCIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0PgogICAgPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CgogICAgPCEtLSBIZWFkZXIgSVNPLk9SRyAtLT4KICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciBoZWFkZXItaXNvIGNvbnRhaW5lciIgcm9sZT0iYmFubmVyIj4KICAgICAgPGRpdiBjbGFzcz0icnViYmVyIj48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idG9wYmFyIHRvcGJhci1saWdodCI+CiAgICAgICAgPGRpdiBjbGFzcz0idG9wYmFyLWNvbnRlbnQiPgogICAgICAgICAgCgo8dWwgaWQ9Imxhbmctc3dpdGNoZXIiPgogIDxsaSBjbGFzcz0iZHJvcGRvd24iPgogICAgPGEgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBocmVmPSIjIj5mcmFuw6dhaXMgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+PC9hPgogICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgPGxpPjxhIGhyZWY9Ii9zdGFuZGFyZC8xNzg0MC5odG1sIj5FbmdsaXNoPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9ydS9zdGFuZGFyZC8xNzg0MC5odG1sIj7RgNGD0YHRgdC60LjQuTwvYT48L2xpPgogICAgPC91bD4KICA8L2xpPgo8L3VsPjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICAgIDx1bCBjbGFzcz0idG9wbGlua3MiPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgY2xhc3M9InNob3BwaW5nLWNhcnQtbGluayIgaHJlZj0iL3dlYnN0b3JlL3Nob3BwaW5nYmFza2V0P21lbWJlcklkPUlTTyZndWlsYW5nPWZyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNob3BwaW5nLWNhcnQtYmFkZ2UiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zaG9wcGluZy1jYXJ0IiBpZD0ic2hvcHBpbmdJdGVtcyI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci1jb250YWluZXIgaGVhZGVyLWltZyBoZWFkZXItaW1nLWlzbyBoZWFkZXItc2hvcnQiPgogICAgICAgIDxuYXYgY2xhc3M9Im5hdmJhciIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgICA8IS0tIEJyYW5kIGFuZCB0b2dnbGUgZ2V0IGdyb3VwZWQgZm9yIGJldHRlciBtb2JpbGUgZGlzcGxheSAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICA8YSBjbGFzcz0ibG9nbyBpc29sb2dvIiBocmVmPSIvZnIvaG9tZS5odG1sIiB0aXRsZT0iSVNPIj48L2E+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imlzb2xvZ28tcHJpbnQiPjxpbWcgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIGFsdD0iTG9nbyBJU08gcG91ciBpbXByZXNzaW9uIi8+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci10aXRsZSBjbGVhcmZpeCI+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlLW1lZGl1bSB0aXRsZS10aGluIj5PcmdhbmlzYXRpb24gaW50ZXJuYXRpb25hbGUgZGUgbm9ybWFsaXNhdGlvbjwvcD4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUtc21hbGwgdGl0bGUtcmVkIHRleHQtcmlnaHQgaGlkZGVuLXhzIj5RdWFuZCBsZSBtb25kZSBz4oCZYWNjb3JkZTwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwhLS0gTkFWSUdBVElPTiAtLT4KICAgICAgICAgIDxuYXYgY2xhc3M9Im5hdi1jb250YWluZXIgY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlIG5hdi0zbGV2ZWxzImlkPSJvZmZjYW52YXMtbWVudSI+CgoKPGZvcm0gaWQ9Im5hdk1lbnUtc2VhcmNoTmF2IiBjbGFzcz0ibmF2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0IiByb2xlPSJzZWFyY2giPgogIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIHNlYXJjaC1pbnB1dCIgcGxhY2Vob2xkZXI9IlJlY2hlcmNoZXIiPgogICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLWJ0biI+CiAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBzZWFyY2gtc3VibWl0IiB0eXBlPSJzdWJtaXQiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNlYXJjaCI+PC9zcGFuPgogICAgICA8L2J1dHRvbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPC9mb3JtPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMSB2ZXJ0aWNhbGluZSBub2NhcmV0Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Ob3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QXZhbnRhZ2VzPC9hPjxkaXYgY2xhc3M9J2Ryb3Bkb3duLW1lbnUgbmF2LXBhbmVsJyByb2xlPSdtZW51Jz4KICA8ZGl2IGNsYXNzPSdwYW5lbC1pbWFnZSc+CiAgICA8aW1nIHNyYz0nL2ZpbGVzL2xpdmUvc2l0ZXMvaXNvb3JnL2ZpbGVzL19ub2luZGV4L3N0cmVldC1wZWRlc3RyaWFuLWNyb3Nzd2Fsay5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nUGnDqXRvbnMgdHJhdmVyc2FudCB1bmUgcm91dGUgc3VyIHVuIHBhc3NhZ2UgcGnDqXRvbic+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvZnIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkF2YW50YWdlczwvYT48L2g0Pgo8cD5Wb3VzIHNvdWhhaXRleiBlbiBzYXZvaXIgcGx1cyAgc3VyIGxlIHLDtGxlIGRlcyBub3JtZXMgZGFucyBsZXMgcHJvZHVpdHMgZXQgc2VydmljZXMgcXVlIHZvdXMgdXRpbGlzZXo/IFZvdXMgdHJvdXZlcmV6IGljaSBsZXMgaW5mb3JtYXRpb25zIHJlY2hlcmNow6llcy48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9pc28tYW5kLXNtZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UE1FPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLXRoZS1pc28tbWF0ZXJpYWxzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkVuIHNhdm9pciBwbHVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvaXNvLWFuZC1jb25zdW1lcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q29uc29tbWF0ZXVyczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2lzby1hbmQtcG9saWN5LW1ha2Vycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5M4oCZSVNPIGV0IGxlcyBvcmdhbmlzbWVzIGRlIHLDqWdsZW1lbnRhdGlvbjwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1pbi1hY3Rpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Tm9ybWVzIGVuIGFjdGlvbjwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2Rpdj48IS0tIGNsb3NlIG9mIHBhbmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciI+PGEgaHJlZj0iL2ZyL2NvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uICYgY29uZm9ybWl0w6k8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvbWljcm9zY29wZS5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nU2NpZW50aXN0IHBsYWNpbmcgYSBzbGlkZSBiZW5lYXRoIGFuIG9wdGljYWwgbWljcm9zY29wZSc+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2g0Pgo8cD5VbiBwcm9jZXNzdXMgcXVpIHNlcnQgw6AgZMOpbW9udHJlciBxdWUgdm90cmUgcHJvZHVpdCwgc2VydmljZSwgb3Ugc3lzdMOobWUgcsOpcG9uZCBhdXggZXhpZ2VuY2VzIGTigJl1bmUgbm9ybWUuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvY2VydGlmaWNhdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY2FzY28uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q0FTQ088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci90aGUtaXNvLXN1cnZleS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5MJ8OJdHVkZSBJU088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9yZXNvdXJjZXMtZm9yLWNvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5SZXNzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zZGdzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk9ERDwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIGhyZWY9Ii9mci9hYm91dC11cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5MJ0lTTzwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3doYXQtd2UtZG8uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Tm9zIGFjdGl2aXTDqXM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvYnVzaW5lc3Mtc2VtaW5hci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nQmFjayB2aWV3IG9mIHBlb3BsZSBpbiBhIG1lZXRpbmcsIGxvb2tpbmcgYXQgYSBwcmVzZW50YXRpb24gb24gYSBzY3JlZW4uJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9mci93aGF0LXdlLWRvLmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5vcyBhY3Rpdml0w6lzPC9hPjwvaDQ+CjxwPkTDqWNvdXZyZXogY29tbWVudCBub3VzIMOpbGFib3JvbnMgZXQgcHVibGlvbnMgZGVzIE5vcm1lcyBpbnRlcm5hdGlvbmFsZXMgZW4gbW9iaWxpc2FudCBwbHVzIGRlIDE2MCBtZW1icmVzIGV0IHBsdXMgZGUgNDUgMDAwIGV4cGVydHMuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkVsYWJvcmF0aW9uIGRlcyBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9yZXNlYXJjaC1hbmQtZWR1Y2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlY2hlcmNoZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2NhcGFjaXR5LWJ1aWxkaW5nLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlbmZvcmNlbWVudCBkZXMgY2FwYWNpdMOpczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2VkdWNhdGlvbi1hYm91dC1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RW5zZWlnbmVtZW50IHN1ciBsZXMgbm9ybWVzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9zdHJ1Y3R1cmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RydWN0dXJlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvbWVtYmVycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NZW1icmVzPC9hPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciI+PGEgaHJlZj0iL2ZyL25ld3NfaW5kZXguaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWN0dWFsaXTDqXMgZXQgbWFuaWZlc3RhdGlvbnM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvQWxsJTIwYWJvdXQlMjBJU08tTmV3c19jYWxlbmRhci1jbG9zZS11cCUyME5vJTIweWVhci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nTW9udGhzIGFuZCBkYXRlcyBzaG93biBvbiBhIGNhbGVuZGFyIHdoaWxzdCB0dXJuaW5nIHRoZSBwYWdlcyB3aXRoIHNoYWxsb3cgZGVwdGggb2YgZmllbGQnPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL2ZyL25ld3NfaW5kZXguaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWN0dWFsaXTDqXMgZXQgbWFuaWZlc3RhdGlvbnM8L2E+PC9oND4KPHA+UmVzdGV6IGluZm9ybcOpIGRlcyBkZXJuacOocmVzIG5vdXZlYXV0w6lzIGVuIG1hdGnDqHJlIGRlIG5vcm1hbGlzYXRpb24gb3UgcGFyY291cmV6IG5vcyByaWNoZXMgYXJjaGl2ZXM8L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9pc29mb2N1cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NYWdhemluZSBJU09mb2N1czwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2V2ZW50cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NYW5pZmVzdGF0aW9ucyBldCByw6l1bmlvbnM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZWRpYS1raXQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RG9zc2llciBtw6lkaWFzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvbmV3c19hcmNoaXZlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkFjdHVhbGl0w6lzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIj48YSBocmVmPSIvZnIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UGFydGljaXBlcjwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3doby1kZXZlbG9wcy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UXVpIMOpbGFib3JlIGxlcyBub3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwzIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3RlY2huaWNhbC1jb21taXR0ZWVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNvbWl0w6lzIHRlY2huaXF1ZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9vdGhlci1ib2RpZXMtZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QXV0cmVzIG9yZ2FuaXNtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9vcmdhbml6YXRpb25zLWluLWNvb3BlcmF0aW9uLXdpdGgtaXNvLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk9yZ2FuaXNhdGlvbnMgZW4gY29vcMOpcmF0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Sw6lmw6lyZW50aWVsczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2dldC1pbnZvbHZlZC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Qb3VycXVvaSBz4oCZZW5nYWdlciA/PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGluUGF0aCBvcGVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RvcmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RvcmU8L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGluUGF0aCBhY3RpdmUgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiICBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DYXRhbG9ndWUgZGUgbm9ybWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcHVibGljYXRpb24tbGlzdC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5QdWJsaWNhdGlvbnMgZXQgcHJvZHVpdHM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJvZmZjYW52YXMtdG9nZ2xlIiBkYXRhLXRvZ2dsZT0ib2ZmY2FudmFzIj4gIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW1lbnUtaGFtYnVyZ2VyIj48L3NwYW4+PC9idXR0b24+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvbmF2PgogICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgogICAgCgoKCgoKPHNwYW4gY2xhc3M9ImhpZGRlbiIgaWQ9ImluZGV4UmVmZXJlbmNlIiBkYXRhLWluZGV4PSIxNzg0MCAtIElTTy9JRUMgOTk0NS0xOjE5OTAgLSBUZWNobm9sb2dpZXMgZGUgbCdpbmZvcm1hdGlvbiAtLSBJbnRlcmZhY2UgcG91ciBsYSBwb3J0YWJpbGl0w6kgZGVzIHN5c3TDqG1lcyAoUE9TSVgpIC0tIFBhcnRpZSAxOiBJbnRlcmZhY2UgcHJvZ3JhbW1lIGRlIHN5c3TDqG1lcyBkJ2FwcGxpY2F0aW9uIChBUEkpIFtMYW5nYWdlIENdIj48L3NwYW4+CjxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPgogIDxkaXYgY2xhc3M9InJvdyByb3ctdG9wIHJvdy1saWdodCI+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTE6MTk5MDwvbGk+CiAgPC9vbD4KCjwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJjYXRlZ29yeSI+dzwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJwcm9kdWN0SUQiIGlkPSJjc051bWJlciI+MTc4NDA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGlkZGVuIiBpdGVtcHJvcD0iYnJhbmQiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cHM6Ly9zY2hlbWEub3JnL09yZ2FuaXphdGlvbiI+CiAgICAgICAgPGRpdiBpdGVtcHJvcD0ibG9nbyIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvSW1hZ2VPYmplY3QiPgogICAgICAgICAgPG1ldGEgaXRlbXByb3A9InVybCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIi8+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0id2lkdGgiIGNvbnRlbnQ9IjI4MyI+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0iaGVpZ2h0IiBjb250ZW50PSIyNjEiPgogICAgICAgIDwvZGl2PgogICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJuYW1lIiBjb250ZW50PSJPcmdhbmlzYXRpb24gaW50ZXJuYXRpb25hbGUgZGUgbm9ybWFsaXNhdGlvbiI+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iaGVhZGluZy1jb25kZW5zZWQiPgogICAgICAgIDxoMT4KICAgICAgICAgIDxzdHJvbmcgaWQ9Iml0ZW1SZWZlcmVuY2UiIGl0ZW1wcm9wPSJuYW1lIj5JU08vSUVDIDk5NDUtMToxOTkwPC9zdHJvbmc+CiAgICAgICAgICAKICAgICAgICA8L2gxPgoKICAgICAgICA8aDIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj5UZWNobm9sb2dpZXMgZGUgbCdpbmZvcm1hdGlvbiAtLSBJbnRlcmZhY2UgcG91ciBsYSBwb3J0YWJpbGl0w6kgZGVzIHN5c3TDqG1lcyAoUE9TSVgpIC0tIFBhcnRpZSAxOiBJbnRlcmZhY2UgcHJvZ3JhbW1lIGRlIHN5c3TDqG1lcyBkJ2FwcGxpY2F0aW9uIChBUEkpIFtMYW5nYWdlIENdPC9oMj4KICAgICAgICAKICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgCgogIDxkaXYgY2xhc3M9InJvdyI+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNyI+CgogICAgICA8ZGl2IGNsYXNzPSJ3ZWxsIj4KICA8aDM+CiAgICBJbmZvcm1hdGlvbnMgZ8OpbsOpcmFsZXMKICAgIDxzdXA+PGEgaHJlZj0iL2ZyL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDEvNzgvMTc4NDAuZGV0YWlsLnJzcyIgY2xhc3M9InNzLWljb24gc3Mtc29jaWFsLWNpcmNsZSB0ZXh0LXdhcm5pbmcgdGV4dC1zbWFsbCIgZGF0YS10b2dnbGU9Imlzby10b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJTJ2Fib25uZXImbmJzcDthdXgmbmJzcDttaXNlcyZuYnNwO8OgJm5ic3A7am91ciI+JiN4RTMxMDs8L2E+PC9zdXA+CiAgPC9oMz4KICAKCiAgPHVsIGNsYXNzPSJyZWZpbmUiPgogICAgPGxpPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICAgIAoKICAgICAgICAgICAgPHN0cm9uZz7DiXRhdCBhY3R1ZWwmbmJzcDs6Jm5ic3A7Jm5ic3A7PC9zdHJvbmc+PHNwYW4+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tYmFuLWNpcmNsZSIgdGl0bGU9IkFubnVsw6llIj48L3NwYW4+QW5udWzDqWU8L3NwYW4+CiAgICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICAgICAgPHN0cm9uZz5EYXRlIGRlIHB1YmxpY2F0aW9uJm5ic3A7OiA8L3N0cm9uZz48c3BhbiBpdGVtcHJvcD0icmVsZWFzZURhdGUiPjE5OTAtMTI8L3NwYW4+CiAgICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2xpPgogICAgPGxpPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICAgIAogICAgICAgICAgICA8c3Ryb25nPkVkaXRpb24mbmJzcDs6PC9zdHJvbmc+IDEKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2xpPgogICAgCiAgICAgIDxsaT4KICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1sYWJlbCI+Q29taXTDqSB0ZWNobmlxdWU8L2Rpdj4gOgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9jb21taXR0ZWUvNDUyMDIuaHRtbCI+SVNPL0lFQyBKVEMgMS9TQyAyMjwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktdGl0bGUiPkxhbmdhZ2VzIGRlIHByb2dyYW1tYXRpb24sIGxldXIgZW52aXJvbm5lbWVudCBldCBpbnRlcmZhY2VzIGRlcyBsb2dpY2llbHMgZGUgc3lzdMOobWVzPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAKICAgIDxsaT4KICAgICAgPGRsIGNsYXNzPSJkbC1pbmxpbmUgbm8tYm90dG9tLW1hcmdpbiI+CiAgICAgICAgPGR0IGNsYXNzPSJlbnRyeS1sYWJlbCBlbnRyeS1ibG9jayI+PHN0cm9uZz5JQ1MgOiA8L3N0cm9uZz48L2R0PgogICAgICAgIAogICAgICAgICAgPGRkPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1uYW1lIGVudHJ5LWJsb2NrIj4KICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvaWNzLzM1LjA2MC5odG1sIj4KICAgICAgICAgICAgICAgICAgMzUuMDYwCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktdGl0bGUiPkxhbmdhZ2VzIHV0aWxpc8OpcyBkYW5zIGxlcyB0ZWNobm9sb2dpZXMgZGUgbCdpbmZvcm1hdGlvbjwvZGl2PgogICAgICAgICAgPC9kZD4KICAgICAgICAKICAgICAgPC9kbD4KICAgIDwvbGk+CiAgPC91bD4KPC9kaXY+CgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iY29sLW1kLTQgY29sLW1kLW9mZnNldC0xIj4KICAgICAgCgogICAgPC9kaXY+CiAgPC9kaXY+CgogIAo8ZGl2IGNsYXNzPSJyb3cgcm93LW1pZGRsZSByb3ctdG9wbGluZSI+CiAgPGRpdiBjbGFzcz0iY29sLW1kLTEyIj4KICAgIDxoMz5DeWNsZSBkZSB2aWU8L2gzPgogICAgPHA+CiAgICAgIExlcyBub3JtZXMgSVNPIHNvbnQgcsOpZXhhbWluw6llcyB0b3VzIGxlcyBjaW5xIGFucwogICAgPC9wPgogICAgPGRpdiBjbGFzcz0iY2xlYXJmaXggdGhlbWUtcmVkIj4KICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBzdGFnZXMiPgogICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjAwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByw6lsaW1pbmFpcmU8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4xMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Qcm9wb3NpdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjIwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByw6lwYXJhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCMyMC4wMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+MjAuMDA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk4Ny0wOS0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTm91dmVhdSBwcm9qZXQgZW5yZWdpc3Ryw6kgYXUgcHJvZ3JhbW1lIGRlIHRyYXZhaWwgZHUgVEMvU0MKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4zMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Db21pdMOpPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzMwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj4zMC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTg3LTExLTAxPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBQcm9qZXQgZGUgY29taXTDqSAoQ0QpIGVucmVnaXN0csOpCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMzAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5ODgtMTItMTk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENEIGFwcHJvdXbDqSBwb3VyIGVucmVnaXN0cmVtZW50IGNvbW1lIERJUwogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjQwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkVucXXDqnRlPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzQwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj40MC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTg4LTEyLTE5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBESVMgZW5yZWdpc3Ryw6kKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM0MC4yMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NDAuMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk4OS0wMi0xNjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTWlzZSBhdSB2b3RlIGR1IERJUzogIDEyIHNlbWFpbmVzCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNDAuNjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjQwLjYwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5ODktMDktMDE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENsw7R0dXJlIGR1IHZvdGUKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM0MC4wMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NDAuMDA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk5MC0wMy0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgRElTIGVucmVnaXN0csOpCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNDAuMjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjQwLjIwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5OTAtMDMtMDE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIE1pc2UgYXUgdm90ZSBkdSBESVM6ICAxMiBzZW1haW5lcwogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzQwLjYwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj40MC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTkwLTAzLTA3PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBDbMO0dHVyZSBkdSB2b3RlCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNDAuMDAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjQwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjE5OTAtMDMtMTM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIERJUyBlbnJlZ2lzdHLDqQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzQwLjIwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj40MC4yMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTkwLTAzLTI5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBNaXNlIGF1IHZvdGUgZHUgRElTOiAgMTIgc2VtYWluZXMKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM0MC42MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NDAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk5MC0wNy0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgQ2zDtHR1cmUgZHUgdm90ZQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjUwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkFwcHJvYmF0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzUwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj41MC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTkwLTExLTAxPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBUZXh0ZSBmaW5hbCByZcOndSBvdSBGRElTIGVucmVnaXN0csOpIHBvdXIgYXBwcm9iYXRpb24gZm9ybWVsbGUKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM1MC4yMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NTAuMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk5MC0xMi0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgRXByZXV2ZSBlbnZvecOpZSBhdSBzZWNyw6l0YXJpYXQgb3UgbWlzZSBhdSB2b3RlIGR1IEZESVM6IDggc2VtYWluZXMKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM1MC42MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NTAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk5MC0xMi0wMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgQ2zDtHR1cmUgZHUgdm90ZSBFcHJldXZlIHJldG91cm7DqWUgcGFyIGxlIHNlY3LDqXRhcmlhdAogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjYwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlB1YmxpY2F0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzYwLjYwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj42MC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTkwLTEyLTA2PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBOb3JtZSBpbnRlcm5hdGlvbmFsZSBwdWJsacOpZQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjkwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkV4YW1lbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM5MC45MiI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+OTAuOTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MTk5NC0wNi0wNzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWUgaW50ZXJuYXRpb25hbGUgw6AgcsOpdmlzZXIKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gYWxlcnQtZGFuZ2VyIGFjdGl2ZSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+OTUuOTk8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+QW5udWxhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzk1Ljk5Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj45NS45OTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4xOTk2LTExLTI4PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBBbm51bGF0aW9uIGRlIGxhIE5vcm1lIGludGVybmF0aW9uYWxlCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICAgIDxici8+CiAgICA8YnIvPgogICAgPGg0PlLDqXZpc2lvbiZuYnNwOy8mbmJzcDtSZWN0aWZpY2F0aWZzIHRlY2huaXF1ZXM8L2g0PgogICAgPHVsIGNsYXNzPSJzdGVwcyI+CiAgICAgIAogICAgICA8bGkgY2xhc3M9IiBhbGVydCBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICA8c3Ryb25nPkFjdHVlbGxlbWVudCBhbm51bMOpZTwvc3Ryb25nPjxici8+CiAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tYmFuLWNpcmNsZSIgdGl0bGU9IkFubnVsw6llIj48L3NwYW4+SVNPL0lFQyA5OTQ1LTE6MTk5MAogICAgICA8L2xpPgogICAgICAKICAgICAgICAgICAgPGxpIGNsYXNzPSJzdGVwIGFsZXJ0IGFsZXJ0LWRhbmdlciI+CiAgICAgICAgICAgIDxzdHJvbmc+UsOpdmlzw6llIHBhcjwvc3Ryb25nPjxici8+CiAgICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFuZGFyZC8yNDQyNi5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iQW5udWzDqWUiPjwvc3Bhbj5JU08vSUVDIDk5NDUtMToxOTk2PC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgPC91bD4KICA8L2Rpdj4KPC9kaXY+PGRpdiBjbGFzcz0icm93IHJvdy1ib3R0b20gcm93LWxpZ2h0Ij4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8aDQ+Vm91cyBhdmV6IHVuZSBxdWVzdGlvbj88L2g0PgoKPHA+Q29uc3VsdGVyIG5vdHJlJm5ic3A7PGEgaHJlZj0iL2ZyL2ZyZXF1ZW50bHktYXNrZWQtcXVlc3Rpb25zLWZhcXMuaHRtbCIgdGl0bGU9IkZvaXJlIEF1eCBRdWVzdGlvbnMgKEZBUXMpIj5GQVE8L2E+PC9wPgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxkaXYgY2xhc3M9InZjYXJkIGNvbnRhY3QgY2xlYXJmaXgiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGRpdiBjbGFzcz0iY29udGVudC1ib3ggbm8taW1hZ2UiPgo8ZGl2IGNsYXNzPSJmbiBuIj48c3BhbiBjbGFzcz0iZ2l2ZW4tbmFtZSIgaXRlbXByb3A9ImdpdmVuTmFtZSI+U2VydmljZSAmYWdyYXZlOyBsYSBjbGllbnQmZWdyYXZlO2xlPC9zcGFuPjwvZGl2PgoKPGRpdiBjbGFzcz0idGVsIiBpdGVtcHJvcD0idGVsZXBob25lIj4rNDEgMjIgNzQ5IDA4IDg4PC9kaXY+Cgo8ZGl2IGNsYXNzPSJlbWFpbCIgaXRlbXByb3A9ImVtYWlsIj48YSBocmVmPSJtYWlsdG86Y3VzdG9tZXJzZXJ2aWNlQGlzby5vcmciPmN1c3RvbWVyc2VydmljZUBpc28ub3JnPC9hPjwvZGl2PgoKPGhyIC8+CjxkaXYgY2xhc3M9Im5vdGUiPgo8cCBjbGFzcz0ic21hbGwiPkhvcmFpcmVzIGQmcnNxdW87b3V2ZXJ0dXJlOjxiciAvPgpEZSBsdW5kaSAmYWdyYXZlOyB2ZW5kcmVkaSAtIDA5OjAwLTEyOjAwLCAxNDowMC0xNzowMCAoVVRDKzEpPC9wPgo8L2Rpdj4KPC9kaXY+CjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxkaXYgY2xhc3M9IndlbGwgdGV4dC1jZW50ZXIiPgogIDxoND5TdWl2ZXogbCYjMzk7YWN0dWFsaXQmZWFjdXRlOyBkZSBsJiMzOTtJU088L2g0PgoKPHA+SW5zY3JpdmV6LXZvdXMgJmFncmF2ZTsgbm90cmUgTmV3c2xldHRlciAoZW4gYW5nbGFpcykgcG91ciBzdWl2cmUgbm9zIGFjdHVhbGl0JmVhY3V0ZTtzLCBwb2ludHMgZGUgdnVlIGV0IGluZm9ybWF0aW9ucyBzdXIgbm9zIHByb2R1aXRzLjwvcD48cD48YSBjbGFzcz0iZmFuY3lib3ggZmFuY3lib3guaWZyYW1lIGJ0biBidG4tZGVmYXVsdCIgaHJlZj0iaHR0cHM6Ly9jb25maXJtc3Vic2NyaXB0aW9uLmNvbS9oL2QvMzQxMkRBNzk5M0FDM0I3QyI+U3Vic2NyaWJlPC9hPjwvcD48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CjwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIGJyZWFkY3J1bWItY29udGFpbmVyIHRoZW1lLXJlZCI+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggaGlkZGVuLXh4cyI+CiAgICAgICAgICA8IS0tIEJSRUFEQ1JVTUIgLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTE6MTk5MDwvbGk+CiAgPC9vbD4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNCBoaWRkZW4tcHJpbnQiPgogICAgICAgICAgPHAgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGNsYXNzPSJhY2NvcmRpb24tdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjY29sbGFwc2VTaXRlbWFwIiB0YXJnZXQ9Il9zZWxmIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIKICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz0iY29sbGFwc2VTaXRlbWFwIj5QbGFuIGR1IHNpdGU8L2E+CiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBib3JkZXItdG9wIiBpZD0iY29sbGFwc2VTaXRlbWFwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgPCEtLSBTSVRFTUFQIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ic2l0ZW1hcC1mb290ZXIgY2xlYXJmaXggc21hbGwiPjx1bCBjbGFzcz0ibmF2LWxldmVsMSBsaXN0LWlubGluZS00IGNsZWFyZml4Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIj5Ob3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCI+QXZhbnRhZ2VzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3NkZ3MuaHRtbCI+T0REPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2Fib3V0LXVzLmh0bWwiPkwnSVNPPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hhdC13ZS1kby5odG1sIj5Ob3MgYWN0aXZpdMOpczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3N0cnVjdHVyZS5odG1sIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiPk1lbWJyZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9uZXdzX2luZGV4Lmh0bWwiPkFjdHVhbGl0w6lzIGV0IG1hbmlmZXN0YXRpb25zPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiPlBhcnRpY2lwZXI8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci93aG8tZGV2ZWxvcHMtc3RhbmRhcmRzLmh0bWwiPlF1aSDDqWxhYm9yZSBsZXMgbm9ybWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIj5Sw6lmw6lyZW50aWVsczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2dldC1pbnZvbHZlZC5odG1sIj5Qb3VycXVvaSBz4oCZZW5nYWdlciA/PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGluUGF0aCBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiPlN0b3JlPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiPlB1YmxpY2F0aW9ucyBldCBwcm9kdWl0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8Zm9vdGVyIHJvbGU9ImNvbnRlbnRpbmZvIiBjbGFzcz0iZm9vdGVyLWlzbyBjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItbGlua3MgY2VudGVyLWJsb2NrIj4KICAgICAgICAgIDwhLS0gRk9PVEVSIExJTktTIC0tPgogICAgICAgICAgPG5hdiA+PHVsIGNsYXNzPSJsaXN0LWlubGluZSBjbGVhcmZpeCB2ZXJ0aWNhbGluZSBuYXYtbGV2ZWwxIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvaXNvLW5hbWUtYW5kLWxvZ28uaHRtbCI+Tm9tIGV0IGxvZ28gZGUgbCdJU088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9wcml2YWN5LWFuZC1jb3B5cmlnaHQuaHRtbCI+Q29uZmlkZW50aWFsaXTDqSBldCBkcm9pdCBkJ2F1dGV1cjwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3NpdGVtYXAuaHRtbCI+UGxhbiBkdSBzaXRlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvd29ya2luZy13aXRoLWlzby5odG1sIiA+RW1wbG9pPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVE8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9jb250YWN0LWlzby5odG1sIj5Db250YWN0ZXIgbCdJU088L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1zb2NpYWwgc3MtaWNvbiBjbGVhcmZpeCI+CiAgICAgICAgICA8dWwgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgICAgICA8bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnIj4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmFjZWJvb2siPu+YkDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iVHdpdHRlciI+75iRPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9QbGFuZXRJU08iIHRpdGxlPSJZb3VUdWJlIj7vmLA8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9pc28taW50ZXJuYXRpb25hbC1vcmdhbml6YXRpb24tZm9yLXN0YW5kYXJkaXphdGlvbiIgdGl0bGU9IkxpbmtlZGluIj7vmJI8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJsYXN0Y29sIj48YSBpdGVtcHJvcD0ic2FtZUFzIiAgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZsaWNrci5jb20vcGhvdG9zL2lzb3N0YW5kYXJkcyIgdGl0bGU9IkZsaWNrciI+75mAPC9hPjwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtYWxsIj5Ob3VzIG5vdXMgZW5nYWdlb25zIMOgIGNlIHF1ZSBub3RyZSBzaXRlIFdlYiBzb2l0IGFjY2Vzc2libGUgw6AgdG91cy4gUG91ciB0b3V0ZSBxdWVzdGlvbiBvdSBzdWdnZXN0aW9uIGNvbmNlcm5hbnQgbCdhY2Nlc3NpYmlsaXTDqSBkdSBzaXRlLCA8YSBocmVmPSJtYWlsdG86d2VibWFzdGVyQGlzby5vcmc/c3ViamVjdD1BY2Nlc3NpYmlsaXR5IiBzdHlsZT0id2hpdGUtc3BhY2U6IG5vd3JhcCI+Y29udGFjdGV6LW5vdXM8L2E+LjwvcD4KICAgICAgICA8c21hbGw+PGEgaHJlZj0iI2NvcHlyaWdodCIgdGFyZ2V0PSJfc2VsZiIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VDb3B5cmlnaHQiPsKpIFRvdXMgZHJvaXRzIHLDqXNlcnbDqXM8L2E+IDxzcGFuIGlkPSJjb3B5cmlnaHQiIGNsYXNzPSJjb2xsYXBzZSI+TGUgbWF0w6lyaWVsIHB1Ymxpw6kgc3VyIElTTy5vcmcgZXN0IHN1amV0IGF1eCBtw6ptZXMgY29uZGl0aW9ucyBlbiBtYXRpw6hyZSBkZSBkcm9pdHMgZOKAmWF1dGV1ciBxdWUgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPIGV0IHNvbiBlbXBsb2kgZXN0IGNvbmRpdGlvbm7DqSBwYXIgbOKAmWFjY2VwdGF0aW9uLCBwYXIgbOKAmXV0aWxpc2F0ZXVyLCBkZXMgY29uZGl0aW9ucyBkZSBs4oCZSVNPIGVuIG1hdGnDqHJlIGRlIGRyb2l0cyBk4oCZYXV0ZXVyIHLDqWdpc3NhbnQgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPLiBUb3V0ZSB1dGlsaXNhdGlvbiBkdSBtYXTDqXJpZWwgY29uY2VybsOpLCB5IGNvbXByaXMgc2EgcmVwcm9kdWN0aW9uIGludMOpZ3JhbGUgb3UgcGFydGllbGxlIHZlcnMgdW4gYXV0cmUgc2l0ZSBJbnRlcm5ldCwgcmVxdWllcnQgbOKAmWF1dG9yaXNhdGlvbiDDqWNyaXRlIGRlIGzigJlJU08uIFRvdXRlIGRlbWFuZGUgw6AgY2V0IGVmZmV0IGRvaXQgw6p0cmUgYWRyZXNzw6llIMOgIDxhIGhyZWY9Im1haWx0bzpjb3B5cmlnaHRAaXNvLm9yZyI+Y29weXJpZ2h0QGlzby5vcmc8L2E+Ljwvc3Bhbj48L3NtYWxsPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgoKICAgIAoKCiAgPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:52 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/40690.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=19EB5BE47F9153D072E791F61A6F5340; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:51 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:52 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/38792.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=46097A37D193AA8A7C3BEF0A67EB05E9; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:52 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:53 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/01/78/17841.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=4BA9395CBB0B7F8EA7F8FCB9A57BC644; Path=/; HttpOnly
      Location:
      - "/standard/17841.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:53 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:53 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/04/06/40687.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=34D2DE76AFCCCE556A4E4248398B4653; Path=/; HttpOnly
      Location:
      - "/standard/40687.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:53 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:53 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/04/06/40688.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=EC325A0714A8F22E861920F15D2A120C; Path=/; HttpOnly
      Location:
      - "/standard/40688.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:52 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:53 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/40688.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=BF1C6242E622A2599DB5A557205AEC7E; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:54 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:55 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/17841.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=4FFD61159D4CBC0D40E2A1E6998784C4; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:54 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:55 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/40687.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=B77B6AE3ACD376AB2CE6EDBC7FD4F750; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:55 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:55 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/40687.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=2A18D9668FF5871730D6668D0EF79BE9; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:56 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZnIiIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJmciIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJmciI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZnInCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTy9JRUMgOTk0NS0xOjIwMDMvQ29yIDE6MjAwNDwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgoKICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgp2YXIgY29udGV4dEpzUGFyYW1ldGVycz17Y29udGV4dFBhdGg6IiIsbGFuZzoiZnIiLHVpbGFuZzoiZnIiLHNpdGVVdWlkOiI0MzkxNDZmOC02NzdlLTRkZGUtYjZjNi1iNjkyYjc1MzRmNTIiLHdjYWc6ZmFsc2UsY2tlQ2ZnOiIifTsgdmFyIENLRURJVE9SX0JBU0VQQVRIPSIvbW9kdWxlcy9ja2VkaXRvci9qYXZhc2NyaXB0LyI7IHZhciBzY2F5dF9jdXN0b21fcGFyYW1zPW5ldyBBcnJheSgpOyBzY2F5dF9jdXN0b21fcGFyYW1zWydzTGFuZyddPSdmcl9GUic7Cjwvc2NyaXB0Pgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MwIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3Mvd29vZC5taW4uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzEiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9jdXN0b20uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvYXNzZXRzL2Nzcy9sYW5ndWFnZVN3aXRjaGluZ0xpbmtzLmNzcz8xNTMyMDAzNTA1NzY2IiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9jc3MvY2F0YWxvZ3VlLmNzcz8xNTYwNzU5NTkwMTExIiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2phdmFzY3JpcHQvd29vZC5taW4uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDEiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc28tamFoaWEtc2VydmljZS1tb2R1bGUvamF2YXNjcmlwdC9jYXRhbG9ndWUuanM/MTU2MDc1OTU5MDExMSI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC9jdXN0b20uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CgogICAgICA8IS0tW2lmIGx0ZSBJRSA5XT4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9pZTkud29vZC5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3MvbHRlLWllOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAgIDwhLS0gSFRNTDUgU2hpbSBhbmQgUmVzcG9uZC5qcyBJRTggc3VwcG9ydCBvZiBIVE1MNSBlbGVtZW50cyBhbmQgbWVkaWEgcXVlcmllcyAtLT4KICAgICAgPCEtLSBXQVJOSU5HOiBSZXNwb25kLmpzIGRvZXNuJ3Qgd29yayBpZiB5b3UgdmlldyB0aGUgcGFnZSB2aWEgZmlsZTovLyAtLT4KICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9odG1sNXNoaXYvMy43LjAvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgPCFbZW5kaWZdLS0+CiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjIwMDkwOTE1IiAvPgogIAoKICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGlzb3N0YW5kYXJkcyIgLz4KCiAgPCEtLSBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iSVNPIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDQvMDYvNDA2ODcuaHRtbCIgLz4KICAKICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIAogICAgPCEtLSBUaHVtYm5haWwgaW1hZ2UgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InRodW1ibmFpbCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6YWx0IiBjb250ZW50PSJJU08gbG9nbyIgLz4KICAKICAgIDwhLS0gVGl0bGUgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0xOjIwMDMvQ29yIDE6MjAwNCIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iSVNPL0lFQyA5OTQ1LTE6MjAwMy9Db3IgMToyMDA0IiAvPgogIAoKICA8IS0tIEZhY2Vib29rIGFkbWlucyA6IExpb25lbCxNYXJpYSAtLT4KICA8bWV0YSBwcm9wZXJ0eT0iZmI6YWRtaW5zIiBjb250ZW50PSIxMDAwMDExMTYwNzk2NzYsMTAwMDAxNDQwMDAzMzA1IiAvPgoKICAKCjwvaGVhZD4KICA8Ym9keSBjbGFzcz0idGhlbWUtcmVkIj4KICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICA8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVRGR0tRUUIiIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KCiAgICA8IS0tIEhlYWRlciBJU08uT1JHIC0tPgogICAgPGhlYWRlciBjbGFzcz0iaGVhZGVyIGhlYWRlci1pc28gY29udGFpbmVyIiByb2xlPSJiYW5uZXIiPgogICAgICA8ZGl2IGNsYXNzPSJydWJiZXIiPjwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXIgdG9wYmFyLWxpZ2h0Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXItY29udGVudCI+CiAgICAgICAgICAKCjx1bCBpZD0ibGFuZy1zd2l0Y2hlciI+CiAgPGxpIGNsYXNzPSJkcm9wZG93biI+CiAgICA8YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGhyZWY9IiMiPmZyYW7Dp2FpcyA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj48L2E+CiAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICA8bGk+PGEgaHJlZj0iL3N0YW5kYXJkLzQwNjg3Lmh0bWwiPkVuZ2xpc2g8L2E+PC9saT48bGk+PGEgaHJlZj0iL3J1L3N0YW5kYXJkLzQwNjg3Lmh0bWwiPtGA0YPRgdGB0LrQuNC5PC9hPjwvbGk+CiAgICA8L3VsPgogIDwvbGk+CjwvdWw+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgICAgPHVsIGNsYXNzPSJ0b3BsaW5rcyI+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBjbGFzcz0ic2hvcHBpbmctY2FydC1saW5rIiBocmVmPSIvd2Vic3RvcmUvc2hvcHBpbmdiYXNrZXQ/bWVtYmVySWQ9SVNPJmd1aWxhbmc9ZnIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hvcHBpbmctY2FydC1iYWRnZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNob3BwaW5nLWNhcnQiIGlkPSJzaG9wcGluZ0l0ZW1zIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWNvbnRhaW5lciBoZWFkZXItaW1nIGhlYWRlci1pbWctaXNvIGhlYWRlci1zaG9ydCI+CiAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICAgIDwhLS0gQnJhbmQgYW5kIHRvZ2dsZSBnZXQgZ3JvdXBlZCBmb3IgYmV0dGVyIG1vYmlsZSBkaXNwbGF5IC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJsb2dvIGlzb2xvZ28iIGhyZWY9Ii9mci9ob21lLmh0bWwiIHRpdGxlPSJJU08iPjwvYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXNvbG9nby1wcmludCI+PGltZyBzcmM9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2lzby1sb2dvLXByaW50LmdpZiIgYWx0PSJMb2dvIElTTyBwb3VyIGltcHJlc3Npb24iLz48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRpdGxlIGNsZWFyZml4Ij4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUtbWVkaXVtIHRpdGxlLXRoaW4iPk9yZ2FuaXNhdGlvbiBpbnRlcm5hdGlvbmFsZSBkZSBub3JtYWxpc2F0aW9uPC9wPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZS1zbWFsbCB0aXRsZS1yZWQgdGV4dC1yaWdodCBoaWRkZW4teHMiPlF1YW5kIGxlIG1vbmRlIHPigJlhY2NvcmRlPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPCEtLSBOQVZJR0FUSU9OIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ibmF2LWNvbnRhaW5lciBjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UgbmF2LTNsZXZlbHMiaWQ9Im9mZmNhbnZhcy1tZW51Ij4KCgo8Zm9ybSBpZD0ibmF2TWVudS1zZWFyY2hOYXYiIGNsYXNzPSJuYXZiYXItZm9ybSBuYXZiYXItcmlnaHQiIHJvbGU9InNlYXJjaCI+CiAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgc2VhcmNoLWlucHV0IiBwbGFjZWhvbGRlcj0iUmVjaGVyY2hlciI+CiAgICA8c3BhbiBjbGFzcz0iaW5wdXQtZ3JvdXAtYnRuIj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IHNlYXJjaC1zdWJtaXQiIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L3NwYW4+CiAgICAgIDwvYnV0dG9uPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8L2Zvcm0+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwxIHZlcnRpY2FsaW5lIG5vY2FyZXQiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RhbmRhcmRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5vcm1lczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2JlbmVmaXRzLW9mLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BdmFudGFnZXM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvc3RyZWV0LXBlZGVzdHJpYW4tY3Jvc3N3YWxrLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdQacOpdG9ucyB0cmF2ZXJzYW50IHVuZSByb3V0ZSBzdXIgdW4gcGFzc2FnZSBwacOpdG9uJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QXZhbnRhZ2VzPC9hPjwvaDQ+CjxwPlZvdXMgc291aGFpdGV6IGVuIHNhdm9pciBwbHVzICBzdXIgbGUgcsO0bGUgZGVzIG5vcm1lcyBkYW5zIGxlcyBwcm9kdWl0cyBldCBzZXJ2aWNlcyBxdWUgdm91cyB1dGlsaXNlej8gVm91cyB0cm91dmVyZXogaWNpIGxlcyBpbmZvcm1hdGlvbnMgcmVjaGVyY2jDqWVzLjwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2lzby1hbmQtc21lcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5QTUU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMtdGhlLWlzby1tYXRlcmlhbHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RW4gc2F2b2lyIHBsdXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9pc28tYW5kLWNvbnN1bWVycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Db25zb21tYXRldXJzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvaXNvLWFuZC1wb2xpY3ktbWFrZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkzigJlJU08gZXQgbGVzIG9yZ2FuaXNtZXMgZGUgcsOpZ2xlbWVudGF0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RhbmRhcmRzLWluLWFjdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Ob3JtZXMgZW4gYWN0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9wb3B1bGFyLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5MZXMgbm9ybWVzIGxlcyBwbHVzIGNvbm51ZXM8L2E+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIj48YSBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9taWNyb3Njb3BlLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdTY2llbnRpc3QgcGxhY2luZyBhIHNsaWRlIGJlbmVhdGggYW4gb3B0aWNhbCBtaWNyb3Njb3BlJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9mci9jb25mb3JtaXR5LWFzc2Vzc21lbnQuaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q2VydGlmaWNhdGlvbiAmIGNvbmZvcm1pdMOpPC9hPjwvaDQ+CjxwPlVuIHByb2Nlc3N1cyBxdWkgc2VydCDDoCBkw6ltb250cmVyIHF1ZSB2b3RyZSBwcm9kdWl0LCBzZXJ2aWNlLCBvdSBzeXN0w6htZSByw6lwb25kIGF1eCBleGlnZW5jZXMgZOKAmXVuZSBub3JtZS48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9jZXJ0aWZpY2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb248L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9jYXNjby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DQVNDTzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3RoZS1pc28tc3VydmV5Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkwnw4l0dWRlIElTTzwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3Jlc291cmNlcy1mb3ItY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3NkZ3MuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+T0REPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biI+PGEgaHJlZj0iL2ZyL2Fib3V0LXVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkwnSVNPPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hhdC13ZS1kby5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Ob3MgYWN0aXZpdMOpczwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9idXNpbmVzcy1zZW1pbmFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdCYWNrIHZpZXcgb2YgcGVvcGxlIGluIGEgbWVldGluZywgbG9va2luZyBhdCBhIHByZXNlbnRhdGlvbiBvbiBhIHNjcmVlbi4nPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL2ZyL3doYXQtd2UtZG8uaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Tm9zIGFjdGl2aXTDqXM8L2E+PC9oND4KPHA+RMOpY291dnJleiBjb21tZW50IG5vdXMgw6lsYWJvcm9ucyBldCBwdWJsaW9ucyBkZXMgTm9ybWVzIGludGVybmF0aW9uYWxlcyBlbiBtb2JpbGlzYW50IHBsdXMgZGUgMTYwIG1lbWJyZXMgZXQgcGx1cyBkZSA0NSAwMDAgZXhwZXJ0cy48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiAgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RWxhYm9yYXRpb24gZGVzIG5vcm1lczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3Jlc2VhcmNoLWFuZC1lZHVjYXRpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVjaGVyY2hlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY2FwYWNpdHktYnVpbGRpbmcuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVuZm9yY2VtZW50IGRlcyBjYXBhY2l0w6lzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvZWR1Y2F0aW9uLWFib3V0LXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5FbnNlaWduZW1lbnQgc3VyIGxlcyBub3JtZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3N0cnVjdHVyZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1lbWJyZXM8L2E+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIj48YSBocmVmPSIvZnIvbmV3c19pbmRleC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BY3R1YWxpdMOpcyBldCBtYW5pZmVzdGF0aW9uczwvYT48ZGl2IGNsYXNzPSdkcm9wZG93bi1tZW51IG5hdi1wYW5lbCcgcm9sZT0nbWVudSc+CiAgPGRpdiBjbGFzcz0ncGFuZWwtaW1hZ2UnPgogICAgPGltZyBzcmM9Jy9maWxlcy9saXZlL3NpdGVzL2lzb29yZy9maWxlcy9fbm9pbmRleC9BbGwlMjBhYm91dCUyMElTTy1OZXdzX2NhbGVuZGFyLWNsb3NlLXVwJTIwTm8lMjB5ZWFyLmpwZy90aHVtYm5haWxzLzgwMCcgYWx0PSdNb250aHMgYW5kIGRhdGVzIHNob3duIG9uIGEgY2FsZW5kYXIgd2hpbHN0IHR1cm5pbmcgdGhlIHBhZ2VzIHdpdGggc2hhbGxvdyBkZXB0aCBvZiBmaWVsZCc+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvZnIvbmV3c19pbmRleC5odG1sJyBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BY3R1YWxpdMOpcyBldCBtYW5pZmVzdGF0aW9uczwvYT48L2g0Pgo8cD5SZXN0ZXogaW5mb3Jtw6kgZGVzIGRlcm5pw6hyZXMgbm91dmVhdXTDqXMgZW4gbWF0acOocmUgZGUgbm9ybWFsaXNhdGlvbiBvdSBwYXJjb3VyZXogbm9zIHJpY2hlcyBhcmNoaXZlczwvcD4KICA8L2Rpdj4KPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2lzb2ZvY3VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1hZ2F6aW5lIElTT2ZvY3VzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZXZlbnRzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk1hbmlmZXN0YXRpb25zIGV0IHLDqXVuaW9uczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL21lZGlhLWtpdC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Eb3NzaWVyIG3DqWRpYXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9uZXdzX2FyY2hpdmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWN0dWFsaXTDqXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9kaXY+PCEtLSBjbG9zZSBvZiBwYW5lbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIGhyZWY9Ii9mci9kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5QYXJ0aWNpcGVyPC9hPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMiBkcm9wZG93bi1tZW51IHZlcnRpY2FsaW5lIHZlcnRpY2FsaW5lLWRhcmsiPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaG92ZXIgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hvLWRldmVsb3BzLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5RdWkgw6lsYWJvcmUgbGVzIG5vcm1lczwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDMgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvdGVjaG5pY2FsLWNvbW1pdHRlZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q29taXTDqXMgdGVjaG5pcXVlczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL290aGVyLWJvZGllcy1kZXZlbG9waW5nLXN0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5BdXRyZXMgb3JnYW5pc21lczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL29yZ2FuaXphdGlvbnMtaW4tY29vcGVyYXRpb24td2l0aC1pc28uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+T3JnYW5pc2F0aW9ucyBlbiBjb29ww6lyYXRpb248L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9kZWxpdmVyYWJsZXMtYWxsLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlLDqWbDqXJlbnRpZWxzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZ2V0LWludm9sdmVkLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlBvdXJxdW9pIHPigJllbmdhZ2VyID88L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9yZXNvdXJjZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UmVzc291cmNlczwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24gaW5QYXRoIG9wZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5TdG9yZTwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlB1YmxpY2F0aW9ucyBldCBwcm9kdWl0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im9mZmNhbnZhcy10b2dnbGUiIGRhdGEtdG9nZ2xlPSJvZmZjYW52YXMiPiAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tbWVudS1oYW1idXJnZXIiPjwvc3Bhbj48L2J1dHRvbj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9uYXY+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgICAKCgoKCgo8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0iaW5kZXhSZWZlcmVuY2UiIGRhdGEtaW5kZXg9IjQwNjg3IC0gSVNPL0lFQyA5OTQ1LTE6MjAwMy9Db3IgMToyMDA0IC0gIj48L3NwYW4+CjxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPgogIDxkaXYgY2xhc3M9InJvdyByb3ctdG9wIHJvdy1saWdodCI+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTE6MjAwMy9Db3IgMToyMDA0PC9saT4KICA8L29sPgoKPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9ImNhdGVnb3J5Ij53PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9InByb2R1Y3RJRCIgaWQ9ImNzTnVtYmVyIj40MDY4NzwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJicmFuZCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICA8ZGl2IGl0ZW1wcm9wPSJsb2dvIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9JbWFnZU9iamVjdCI+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0idXJsIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiLz4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ3aWR0aCIgY29udGVudD0iMjgzIj4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJoZWlnaHQiIGNvbnRlbnQ9IjI2MSI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9Ik9yZ2FuaXNhdGlvbiBpbnRlcm5hdGlvbmFsZSBkZSBub3JtYWxpc2F0aW9uIj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJoZWFkaW5nLWNvbmRlbnNlZCI+CiAgICAgICAgPGgxPgogICAgICAgICAgPHN0cm9uZyBpZD0iaXRlbVJlZmVyZW5jZSIgaXRlbXByb3A9Im5hbWUiPklTTy9JRUMgOTk0NS0xOjIwMDMvQ29yIDE6MjAwNDwvc3Ryb25nPgogICAgICAgICAgCiAgICAgICAgPC9oMT4KCiAgICAgICAgPGgyIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+PC9oMj4KICAgICAgICAKICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgCiAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LW1pZGRsZSBhbGVydC1kYW5nZXIgZW1waGFzaXMtZGFuZ2VyIj4KICAgICAgPGRpdiBzdHlsZT0icGFkZGluZzogMCAxNXB4OyI+CiAgICAgICAgPGg2IHJvbGU9ImFsZXJ0IiBjbGFzcz0ibm8tbWFyZ2luIj4KICAgICAgICAgIENldHRlIG5vcm1lIGEgw6l0w6kgcsOpdmlzw6llIHBhcgogICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhbmRhcmQvNTA1MTYuaHRtbCI+SVNPL0lFQy9JRUVFIDk5NDU6MjAwOTwvYT4KICAgICAgICA8L2g2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIAoKICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgPGRpdiBjbGFzcz0iY29sLW1kLTciPgoKICAgICAgPGRpdiBjbGFzcz0id2VsbCI+CiAgPGgzPgogICAgSW5mb3JtYXRpb25zIGfDqW7DqXJhbGVzCiAgICA8c3VwPjxhIGhyZWY9Ii9mci9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzA0LzA2LzQwNjg3LmRldGFpbC5yc3MiIGNsYXNzPSJzcy1pY29uIHNzLXNvY2lhbC1jaXJjbGUgdGV4dC13YXJuaW5nIHRleHQtc21hbGwiIGRhdGEtdG9nZ2xlPSJpc28tdG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iUydhYm9ubmVyJm5ic3A7YXV4Jm5ic3A7bWlzZXMmbmJzcDvDoCZuYnNwO2pvdXIiPiYjeEUzMTA7PC9hPjwvc3VwPgogIDwvaDM+CiAgCgogIDx1bCBjbGFzcz0icmVmaW5lIj4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxzdHJvbmc+w4l0YXQgYWN0dWVsJm5ic3A7OiZuYnNwOyZuYnNwOzwvc3Ryb25nPjxzcGFuPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJBbm51bMOpZSI+PC9zcGFuPkFubnVsw6llPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgICAgIDxzdHJvbmc+RGF0ZSBkZSBwdWJsaWNhdGlvbiZuYnNwOzogPC9zdHJvbmc+PHNwYW4gaXRlbXByb3A9InJlbGVhc2VEYXRlIj4yMDA0LTA5PC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICAgICAgPHN0cm9uZz5FZGl0aW9uJm5ic3A7Ojwvc3Ryb25nPiAxCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbGFiZWwiPkNvbWl0w6kgdGVjaG5pcXVlPC9kaXY+IDoKICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LW5hbWUgZW50cnktYmxvY2siPgogICAgICAgICAgICA8YSBocmVmPSIvZnIvY29tbWl0dGVlLzQ1MjAyLmh0bWwiPklTTy9JRUMgSlRDIDEvU0MgMjI8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5nYWdlcyBkZSBwcm9ncmFtbWF0aW9uLCBsZXVyIGVudmlyb25uZW1lbnQgZXQgaW50ZXJmYWNlcyBkZXMgbG9naWNpZWxzIGRlIHN5c3TDqG1lczwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgCiAgICA8bGk+CiAgICAgIDxkbCBjbGFzcz0iZGwtaW5saW5lIG5vLWJvdHRvbS1tYXJnaW4iPgogICAgICAgIDxkdCBjbGFzcz0iZW50cnktbGFiZWwgZW50cnktYmxvY2siPjxzdHJvbmc+SUNTIDogPC9zdHJvbmc+PC9kdD4KICAgICAgICAKICAgICAgICAgIDxkZD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+CiAgICAgICAgICAgICAgICAgIDM1LjA2MAogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5nYWdlcyB1dGlsaXPDqXMgZGFucyBsZXMgdGVjaG5vbG9naWVzIGRlIGwnaW5mb3JtYXRpb248L2Rpdj4KICAgICAgICAgIDwvZGQ+CiAgICAgICAgCiAgICAgIDwvZGw+CiAgICA8L2xpPgogIDwvdWw+CjwvZGl2PgoKICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgIAoKICAgIDwvZGl2PgogIDwvZGl2PgoKICAKPGRpdiBjbGFzcz0icm93IHJvdy1taWRkbGUgcm93LXRvcGxpbmUiPgogIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICA8aDM+Q3ljbGUgZGUgdmllPC9oMz4KICAgIDxwPgogICAgICBMZXMgbm9ybWVzIElTTyBzb250IHLDqWV4YW1pbsOpZXMgdG91cyBsZXMgY2lucSBhbnMKICAgIDwvcD4KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IHRoZW1lLXJlZCI+CiAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgc3RhZ2VzIj4KICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4wMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QcsOpbGltaW5haXJlPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MTA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJvcG9zaXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMTAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjEwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDEtMTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIE5vdXZlYXUgcHJvamV0IGFwcHJvdXbDqQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjIwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlByw6lwYXJhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjMwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkNvbWl0w6k8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMzAuMDAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjAwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDEtMTI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIFByb2pldCBkZSBjb21pdMOpIChDRCkgZW5yZWdpc3Ryw6kKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCMzMC4yMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+MzAuMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwNC0wMS0xMjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTWlzZSDDoCBsJ8OpdHVkZS9hdSB2b3RlIGR1IENECiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjMzAuNjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjMwLjYwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDQtMDQtMjM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENsw7R0dXJlIGR1IHZvdGUvIGRlIGxhIHDDqXJpb2RlIGRlcyBvYnNlcnZhdGlvbnMKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCMzMC45OSI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+MzAuOTk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwNC0wNy0yMTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgQ0QgYXBwcm91dsOpIHBvdXIgZW5yZWdpc3RyZW1lbnQgY29tbWUgRElTCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+RW5xdcOqdGU8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz41MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5BcHByb2JhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjYwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPlB1YmxpY2F0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzYwLjAwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj42MC4wMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA0LTA4LTExPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBOb3JtZSBpbnRlcm5hdGlvbmFsZSBlbiBjb3VycyBkZSBwdWJsaWNhdGlvbgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFnZS1jb2Rlcy5odG1sIzYwLjYwIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj42MC42MDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1kYXRlIj4yMDA0LTA5LTIxPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBOb3JtZSBpbnRlcm5hdGlvbmFsZSBwdWJsacOpZQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biAiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjkwPC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkV4YW1lbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAoKICAgICAgICAgICAgPGxpIGNsYXNzPSJkcm9wZG93biBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45NS45OTwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Bbm51bGF0aW9uPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFjdGl2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjOTUuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjk1Ljk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDktMDktMTU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEFubnVsYXRpb24gZGUgbGEgTm9ybWUgaW50ZXJuYXRpb25hbGUKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKICAgICAgPC91bD4KICAgIDwvZGl2PgogICAgPGJyLz4KICAgIDxici8+CiAgICA8aDQ+UsOpdmlzaW9uJm5ic3A7LyZuYnNwO1JlY3RpZmljYXRpZnMgdGVjaG5pcXVlczwvaDQ+CiAgICA8dWwgY2xhc3M9InN0ZXBzIj4KICAgICAgCiAgICAgIDxsaSBjbGFzcz0iIGFsZXJ0IGFsZXJ0LWRhbmdlciBhY3RpdmUiPgogICAgICAgIDxzdHJvbmc+QWN0dWVsbGVtZW50IGFubnVsw6llPC9zdHJvbmc+PGJyLz4KICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iQW5udWzDqWUiPjwvc3Bhbj5JU08vSUVDIDk5NDUtMToyMDAzL0NvciAxOjIwMDQKICAgICAgPC9saT4KICAgICAgCiAgICAgICAgICAgIDxsaSBjbGFzcz0ic3RlcCBhbGVydCBhbGVydC13YXJuaW5nIj4KICAgICAgICAgICAgPHN0cm9uZz5Sw6l2aXPDqWUgcGFyPC9zdHJvbmc+PGJyLz4KICAgICAgICAgIAogICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkLzUwNTE2Lmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW9rLWNpcmNsZSIgdGl0bGU9IlB1Ymxpw6llIj48L3NwYW4+SVNPL0lFQy9JRUVFIDk5NDU6MjAwOTwvYT48YnIgLz4KICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgIDwvdWw+CiAgPC9kaXY+CjwvZGl2PjxkaXYgY2xhc3M9InJvdyByb3ctYm90dG9tIHJvdy1saWdodCI+CiAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgPGg0PlZvdXMgYXZleiB1bmUgcXVlc3Rpb24/PC9oND4KCjxwPkNvbnN1bHRlciBub3RyZSZuYnNwOzxhIGhyZWY9Ii9mci9mcmVxdWVudGx5LWFza2VkLXF1ZXN0aW9ucy1mYXFzLmh0bWwiIHRpdGxlPSJGb2lyZSBBdXggUXVlc3Rpb25zIChGQVFzKSI+RkFRPC9hPjwvcD4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ2Y2FyZCBjb250YWN0IGNsZWFyZml4IiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxkaXYgY2xhc3M9ImNvbnRlbnQtYm94IG5vLWltYWdlIj4KPGRpdiBjbGFzcz0iZm4gbiI+PHNwYW4gY2xhc3M9ImdpdmVuLW5hbWUiIGl0ZW1wcm9wPSJnaXZlbk5hbWUiPlNlcnZpY2UgJmFncmF2ZTsgbGEgY2xpZW50JmVncmF2ZTtsZTwvc3Bhbj48L2Rpdj4KCjxkaXYgY2xhc3M9InRlbCIgaXRlbXByb3A9InRlbGVwaG9uZSI+KzQxIDIyIDc0OSAwOCA4ODwvZGl2PgoKPGRpdiBjbGFzcz0iZW1haWwiIGl0ZW1wcm9wPSJlbWFpbCI+PGEgaHJlZj0ibWFpbHRvOmN1c3RvbWVyc2VydmljZUBpc28ub3JnIj5jdXN0b21lcnNlcnZpY2VAaXNvLm9yZzwvYT48L2Rpdj4KCjxociAvPgo8ZGl2IGNsYXNzPSJub3RlIj4KPHAgY2xhc3M9InNtYWxsIj5Ib3JhaXJlcyBkJnJzcXVvO291dmVydHVyZTo8YnIgLz4KRGUgbHVuZGkgJmFncmF2ZTsgdmVuZHJlZGkgLSAwOTowMC0xMjowMCwgMTQ6MDAtMTc6MDAgKFVUQysxKTwvcD4KPC9kaXY+CjwvZGl2Pgo8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8ZGl2IGNsYXNzPSJ3ZWxsIHRleHQtY2VudGVyIj4KICA8aDQ+U3VpdmV6IGwmIzM5O2FjdHVhbGl0JmVhY3V0ZTsgZGUgbCYjMzk7SVNPPC9oND4KCjxwPkluc2NyaXZlei12b3VzICZhZ3JhdmU7IG5vdHJlIE5ld3NsZXR0ZXIgKGVuIGFuZ2xhaXMpIHBvdXIgc3VpdnJlIG5vcyBhY3R1YWxpdCZlYWN1dGU7cywgcG9pbnRzIGRlIHZ1ZSBldCBpbmZvcm1hdGlvbnMgc3VyIG5vcyBwcm9kdWl0cy48L3A+PHA+PGEgY2xhc3M9ImZhbmN5Ym94IGZhbmN5Ym94LmlmcmFtZSBidG4gYnRuLWRlZmF1bHQiIGhyZWY9Imh0dHBzOi8vY29uZmlybXN1YnNjcmlwdGlvbi5jb20vaC9kLzM0MTJEQTc5OTNBQzNCN0MiPlN1YnNjcmliZTwvYT48L3A+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pgo8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cgo8L2Rpdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtYWluIGNvbnRhaW5lciBicmVhZGNydW1iLWNvbnRhaW5lciB0aGVtZS1yZWQiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04IGhpZGRlbi14eHMiPgogICAgICAgICAgPCEtLSBCUkVBRENSVU1CIC0tPgogICAgICAgICAgPGRpdiBjbGFzcz0iYnJlYWRjcnVtYi1jb250YWluZXIgc21hbGwiPgogIAogIDxvbCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9mci9ob21lLmh0bWwiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWhvbWUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L3NwYW4+PC9hPjwvbGk+CiAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RvcmUuaHRtbCI+CiAgICAgICAgICAgICAgICBTdG9yZQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+CgogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCI+CiAgICAgICAgICAgICAgICBJQ1MKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIDxsaT48YSBocmVmPSIvZnIvaWNzLzM1Lmh0bWwiPjM1PC9hPjwvbGk+CiAgICAKICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuMDYwLmh0bWwiPjM1LjA2MDwvYT48L2xpPgogICAgPGxpPklTTy9JRUMgOTk0NS0xOjIwMDMvQ29yIDE6MjAwNDwvbGk+CiAgPC9vbD4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNCBoaWRkZW4tcHJpbnQiPgogICAgICAgICAgPHAgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGNsYXNzPSJhY2NvcmRpb24tdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjY29sbGFwc2VTaXRlbWFwIiB0YXJnZXQ9Il9zZWxmIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIKICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz0iY29sbGFwc2VTaXRlbWFwIj5QbGFuIGR1IHNpdGU8L2E+CiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBib3JkZXItdG9wIiBpZD0iY29sbGFwc2VTaXRlbWFwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgPCEtLSBTSVRFTUFQIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ic2l0ZW1hcC1mb290ZXIgY2xlYXJmaXggc21hbGwiPjx1bCBjbGFzcz0ibmF2LWxldmVsMSBsaXN0LWlubGluZS00IGNsZWFyZml4Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIj5Ob3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCI+QXZhbnRhZ2VzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3NkZ3MuaHRtbCI+T0REPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2Fib3V0LXVzLmh0bWwiPkwnSVNPPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hhdC13ZS1kby5odG1sIj5Ob3MgYWN0aXZpdMOpczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3N0cnVjdHVyZS5odG1sIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiPk1lbWJyZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9uZXdzX2luZGV4Lmh0bWwiPkFjdHVhbGl0w6lzIGV0IG1hbmlmZXN0YXRpb25zPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiPlBhcnRpY2lwZXI8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci93aG8tZGV2ZWxvcHMtc3RhbmRhcmRzLmh0bWwiPlF1aSDDqWxhYm9yZSBsZXMgbm9ybWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIj5Sw6lmw6lyZW50aWVsczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2dldC1pbnZvbHZlZC5odG1sIj5Qb3VycXVvaSBz4oCZZW5nYWdlciA/PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGluUGF0aCBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiPlN0b3JlPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiPlB1YmxpY2F0aW9ucyBldCBwcm9kdWl0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8Zm9vdGVyIHJvbGU9ImNvbnRlbnRpbmZvIiBjbGFzcz0iZm9vdGVyLWlzbyBjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItbGlua3MgY2VudGVyLWJsb2NrIj4KICAgICAgICAgIDwhLS0gRk9PVEVSIExJTktTIC0tPgogICAgICAgICAgPG5hdiA+PHVsIGNsYXNzPSJsaXN0LWlubGluZSBjbGVhcmZpeCB2ZXJ0aWNhbGluZSBuYXYtbGV2ZWwxIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvaXNvLW5hbWUtYW5kLWxvZ28uaHRtbCI+Tm9tIGV0IGxvZ28gZGUgbCdJU088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9wcml2YWN5LWFuZC1jb3B5cmlnaHQuaHRtbCI+Q29uZmlkZW50aWFsaXTDqSBldCBkcm9pdCBkJ2F1dGV1cjwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3NpdGVtYXAuaHRtbCI+UGxhbiBkdSBzaXRlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvd29ya2luZy13aXRoLWlzby5odG1sIiA+RW1wbG9pPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVE8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9jb250YWN0LWlzby5odG1sIj5Db250YWN0ZXIgbCdJU088L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1zb2NpYWwgc3MtaWNvbiBjbGVhcmZpeCI+CiAgICAgICAgICA8dWwgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgICAgICA8bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnIj4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmFjZWJvb2siPu+YkDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iVHdpdHRlciI+75iRPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9QbGFuZXRJU08iIHRpdGxlPSJZb3VUdWJlIj7vmLA8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9pc28taW50ZXJuYXRpb25hbC1vcmdhbml6YXRpb24tZm9yLXN0YW5kYXJkaXphdGlvbiIgdGl0bGU9IkxpbmtlZGluIj7vmJI8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJsYXN0Y29sIj48YSBpdGVtcHJvcD0ic2FtZUFzIiAgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZsaWNrci5jb20vcGhvdG9zL2lzb3N0YW5kYXJkcyIgdGl0bGU9IkZsaWNrciI+75mAPC9hPjwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtYWxsIj5Ob3VzIG5vdXMgZW5nYWdlb25zIMOgIGNlIHF1ZSBub3RyZSBzaXRlIFdlYiBzb2l0IGFjY2Vzc2libGUgw6AgdG91cy4gUG91ciB0b3V0ZSBxdWVzdGlvbiBvdSBzdWdnZXN0aW9uIGNvbmNlcm5hbnQgbCdhY2Nlc3NpYmlsaXTDqSBkdSBzaXRlLCA8YSBocmVmPSJtYWlsdG86d2VibWFzdGVyQGlzby5vcmc/c3ViamVjdD1BY2Nlc3NpYmlsaXR5IiBzdHlsZT0id2hpdGUtc3BhY2U6IG5vd3JhcCI+Y29udGFjdGV6LW5vdXM8L2E+LjwvcD4KICAgICAgICA8c21hbGw+PGEgaHJlZj0iI2NvcHlyaWdodCIgdGFyZ2V0PSJfc2VsZiIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VDb3B5cmlnaHQiPsKpIFRvdXMgZHJvaXRzIHLDqXNlcnbDqXM8L2E+IDxzcGFuIGlkPSJjb3B5cmlnaHQiIGNsYXNzPSJjb2xsYXBzZSI+TGUgbWF0w6lyaWVsIHB1Ymxpw6kgc3VyIElTTy5vcmcgZXN0IHN1amV0IGF1eCBtw6ptZXMgY29uZGl0aW9ucyBlbiBtYXRpw6hyZSBkZSBkcm9pdHMgZOKAmWF1dGV1ciBxdWUgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPIGV0IHNvbiBlbXBsb2kgZXN0IGNvbmRpdGlvbm7DqSBwYXIgbOKAmWFjY2VwdGF0aW9uLCBwYXIgbOKAmXV0aWxpc2F0ZXVyLCBkZXMgY29uZGl0aW9ucyBkZSBs4oCZSVNPIGVuIG1hdGnDqHJlIGRlIGRyb2l0cyBk4oCZYXV0ZXVyIHLDqWdpc3NhbnQgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPLiBUb3V0ZSB1dGlsaXNhdGlvbiBkdSBtYXTDqXJpZWwgY29uY2VybsOpLCB5IGNvbXByaXMgc2EgcmVwcm9kdWN0aW9uIGludMOpZ3JhbGUgb3UgcGFydGllbGxlIHZlcnMgdW4gYXV0cmUgc2l0ZSBJbnRlcm5ldCwgcmVxdWllcnQgbOKAmWF1dG9yaXNhdGlvbiDDqWNyaXRlIGRlIGzigJlJU08uIFRvdXRlIGRlbWFuZGUgw6AgY2V0IGVmZmV0IGRvaXQgw6p0cmUgYWRyZXNzw6llIMOgIDxhIGhyZWY9Im1haWx0bzpjb3B5cmlnaHRAaXNvLm9yZyI+Y29weXJpZ2h0QGlzby5vcmc8L2E+Ljwvc3Bhbj48L3NtYWxsPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgoKICAgIAoKCiAgPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:57 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/40688.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=E2F627E9277711903E459DCBA6A774C3; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:56 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:57 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/17841.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=7B47DF1BF95CC59C214170FD984ED2B3; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:56 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:57 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/73/37313.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=D17E45984EBBD1EC741B873E5780C72E; Path=/; HttpOnly
      Location:
      - "/standard/37313.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:57 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:57 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/02/44/24426.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=9B196892EE1DE7955544D06F51564E95; Path=/; HttpOnly
      Location:
      - "/standard/24426.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:57 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:57 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/73/37312.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=ABFA174E6BD39564B99607053D20C653; Path=/; HttpOnly
      Location:
      - "/standard/37312.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:06:57 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:06:57 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/24426.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=2A57C758FB6CADE9FCB3C185D4D1050A; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:59 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:00 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/37313.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=BA560419E5B6AC7CF52EE6EBCECBDA9C; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:59 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:00 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/37312.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=3641FDA67E99FDCF59399413C30E1D18; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:06:59 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:00 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/24426.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=96DC44CCC83CC3F4DE21D0ECEB651021; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:01 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:01 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/37313.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=732783685CCBAC5CDF85473363132619; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:04 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:05 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/37312.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=10888FF82FB5216620B3DE8EC069F5EB; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:04 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:05 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/87/38789.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=16B0B02CA0A95F43DD9DB8949A770114; Path=/; HttpOnly
      Location:
      - "/standard/38789.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:07:04 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:05 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/73/37314.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=969E857DA49BEDFD01D889459727629D; Path=/; HttpOnly
      Location:
      - "/standard/37314.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:07:05 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:05 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/03/73/37315.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=3BD91C718EB999FA8AF486EBA0B79CD0; Path=/; HttpOnly
      Location:
      - "/standard/37315.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:07:05 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:05 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/38789.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=04440FC7304F76F3C3257C9632500ABC; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:05 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:06 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/37314.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=E5E7DA4BA6E6F2A741C50E43DB7F2AB6; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:06 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:07 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/37315.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=3D19EEC3D5B69D7EACF2CA29CB5D7AA5; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:06 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:07 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/38789.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=C498016EBC6B496BC7ACE810E256382F; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:07 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:08 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/37314.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=419647882.36895.0000; path=/
      - JSESSIONID=73E3A3CB3645E0751DDAF7745FC2124F; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:07 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CgoKPCEtLVtpZiBJRSA4XT4KPGh0bWwgbGFuZz0iZnIiIGNsYXNzPSJpZTgiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDldPgo8aHRtbCBsYW5nPSJmciIgY2xhc3M9ImllOSI+PCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPgo8aHRtbCBsYW5nPSJmciI+PCEtLTwhW2VuZGlmXS0tPgogIDxoZWFkPgogICAgCiAgICA8c2NyaXB0PgogICAgICBkYXRhTGF5ZXIgPSBbewogICAgICAgICdwYWdlVHlwZSc6ICdpdHM6c3RhbmRhcmQnLAogICAgICAgICdwYWdlTGFuZ3VhZ2UnOiAnZnInCiAgICAgIH1dOwogICAgPC9zY3JpcHQ+CgogICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1URkdLUVFCJyk7PC9zY3JpcHQ+CiAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgCgogICAgPHRpdGxlPklTTy9JRUMgOTk0NS0zOjIwMDIgLSBUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDM6IEVudmVsb3BwZSBldCBzZXJ2aWNlczwvdGl0bGU+CiAgICAKCgogICAgPCEtLSBzdGFydCBmYXZpY29ucyAtLT4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1wcmVjb21wb3NlZCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vZmF2aWNvbi9yZWQvYXBwbGUtdG91Y2gtaWNvbi0xNTJ4MTUyLXByZWNvbXBvc2VkLnBuZyI+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9pbWcvaXNvL2Zhdmljb24vcmVkL2Zhdmljb24uaWNvIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjZWVlIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUltYWdlIiBjb250ZW50PSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9mYXZpY29uL3JlZC9tc3RpbGUtMTQ0eDE0NC5wbmciPgogICAgPCEtLSBlbmQgZmF2aWNvbnMgLS0+CgogICAgCgoKICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgp2YXIgY29udGV4dEpzUGFyYW1ldGVycz17Y29udGV4dFBhdGg6IiIsbGFuZzoiZnIiLHVpbGFuZzoiZnIiLHNpdGVVdWlkOiI0MzkxNDZmOC02NzdlLTRkZGUtYjZjNi1iNjkyYjc1MzRmNTIiLHdjYWc6ZmFsc2UsY2tlQ2ZnOiIifTsgdmFyIENLRURJVE9SX0JBU0VQQVRIPSIvbW9kdWxlcy9ja2VkaXRvci9qYXZhc2NyaXB0LyI7IHZhciBzY2F5dF9jdXN0b21fcGFyYW1zPW5ldyBBcnJheSgpOyBzY2F5dF9jdXN0b21fcGFyYW1zWydzTGFuZyddPSdmcl9GUic7Cjwvc2NyaXB0Pgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MwIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3Mvd29vZC5taW4uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzEiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9jdXN0b20uY3NzPzE1NTU0ODc4MDIzODAiIG1lZGlhPSJzY3JlZW4scHJpbnQsaGFuZGhlbGQiIHR5cGU9InRleHQvY3NzIi8+CjxsaW5rIGlkPSJzdGF0aWNBc3NldENTUzIiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL21vZHVsZXMvYXNzZXRzL2Nzcy9sYW5ndWFnZVN3aXRjaGluZ0xpbmtzLmNzcz8xNTMyMDAzNTA1NzY2IiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8bGluayBpZD0ic3RhdGljQXNzZXRDU1MzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9tb2R1bGVzL2lzby1qYWhpYS1zZXJ2aWNlLW1vZHVsZS9jc3MvY2F0YWxvZ3VlLmNzcz8xNTYwNzU5NTkwMTExIiBtZWRpYT0ic2NyZWVuIiB0eXBlPSJ0ZXh0L2NzcyIvPgo8c2NyaXB0IGlkPSJzdGF0aWNBc3NldEphdmFzY3JpcHQwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2phdmFzY3JpcHQvd29vZC5taW4uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDEiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc28tamFoaWEtc2VydmljZS1tb2R1bGUvamF2YXNjcmlwdC9jYXRhbG9ndWUuanM/MTU2MDc1OTU5MDExMSI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9InN0YXRpY0Fzc2V0SmF2YXNjcmlwdDIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvamF2YXNjcmlwdC9jdXN0b20uanM/MTU1NTQ4NzgwMjM4MCI+PC9zY3JpcHQ+CgogICAgICA8IS0tW2lmIGx0ZSBJRSA5XT4KICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2Nzcy9pZTkud29vZC5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9tb2R1bGVzL2lzb29yZy10ZW1wbGF0ZS9jc3MvbHRlLWllOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgogICAgICA8IVtlbmRpZl0tLT4KCiAgICAgIDwhLS0gSFRNTDUgU2hpbSBhbmQgUmVzcG9uZC5qcyBJRTggc3VwcG9ydCBvZiBIVE1MNSBlbGVtZW50cyBhbmQgbWVkaWEgcXVlcmllcyAtLT4KICAgICAgPCEtLSBXQVJOSU5HOiBSZXNwb25kLmpzIGRvZXNuJ3Qgd29yayBpZiB5b3UgdmlldyB0aGUgcGFnZSB2aWEgZmlsZTovLyAtLT4KICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9odG1sNXNoaXYvMy43LjAvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgPCFbZW5kaWZdLS0+CiAgICAKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChkb2N1bWVudCkub24oInN1Ym1pdCIsICIjbmF2TWVudS1zZWFyY2hOYXYiLCBmdW5jdGlvbihlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdmFyIHZhbCA9ICQodGhpcykuZmluZCgiaW5wdXQuc2VhcmNoLWlucHV0IikudmFsKCk7CiAgICAgIC8vIEdldCByaWQgb2YgIi4iCiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC9eXC4kLywgIiIpOwogICAgICAvLyBHZXQgcmlkIG9mICIuLiIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoL15cLlwuJC8sICIiKTsKICAgICAgLy8gR2V0IHJpZCBvZiBldmVyeSAiJSIKICAgICAgdmFsID0gdmFsLnJlcGxhY2UoLyUvZywgIiIpOwogICAgICB2YWwgPSB2YWwudHJpbSgpOwogICAgICBpZiAodmFsICE9PSAnJykgewogICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoIi9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL3NlYXJjaC5odG1sP3E9IiArIHZhbCk7CiAgICAgIH0KICAgIH0pOwogIDwvc2NyaXB0PgoKCiAgICA8bWV0YSBuYW1lPSJjYXRlZ29yeSIgY29udGVudD0idyIgLz4KICAKICAgIDxtZXRhIG5hbWU9InB1YmRhdGUiIGNvbnRlbnQ9IjIwMDMwODE4IiAvPgogIAoKICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGlzb3N0YW5kYXJkcyIgLz4KCiAgPCEtLSBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iSVNPIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cuaXNvLm9yZy9jbXMvcmVuZGVyL2xpdmUvZnIvc2l0ZXMvaXNvb3JnL2NvbnRlbnRzL2RhdGEvc3RhbmRhcmQvMDMvNzMvMzczMTQuaHRtbCIgLz4KICAKICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogIAogICAgPCEtLSBUaHVtYm5haWwgaW1hZ2UgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InRodW1ibmFpbCIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5pc28ub3JnL21vZHVsZXMvaXNvb3JnLXRlbXBsYXRlL2ltZy9pc28vaXNvLWxvZ28tcHJpbnQuZ2lmIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6YWx0IiBjb250ZW50PSJJU08gbG9nbyIgLz4KICAKICAgIDwhLS0gVGl0bGUgKGZvciB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0zOjIwMDIiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IklTTy9JRUMgOTk0NS0zOjIwMDIiIC8+CiAgCiAgICA8IS0tIERlc2NyaXB0aW9uIChmb3IgZ29vZ2xlLCB0d2l0dGVyIGFuZCBPcGVuIEdyYXBoKSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlRlY2hub2xvZ2llcyBkZSBsJiMwMzk7aW5mb3JtYXRpb24gLS0gSW50ZXJmYWNlIHBvdXIgbGEgcG9ydGFiaWxpdMOpIGRlcyBzeXN0w6htZXMgKFBPU0lYKSAtLSBQYXJ0aWUgMzogRW52ZWxvcHBlIGV0IHNlcnZpY2VzIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDM6IEVudmVsb3BwZSBldCBzZXJ2aWNlcyIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJUZWNobm9sb2dpZXMgZGUgbCYjMDM5O2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDM6IEVudmVsb3BwZSBldCBzZXJ2aWNlcyIgLz4KICAKCiAgPCEtLSBGYWNlYm9vayBhZG1pbnMgOiBMaW9uZWwsTWFyaWEgLS0+CiAgPG1ldGEgcHJvcGVydHk9ImZiOmFkbWlucyIgY29udGVudD0iMTAwMDAxMTE2MDc5Njc2LDEwMDAwMTQ0MDAwMzMwNSIgLz4KCiAgCgo8L2hlYWQ+CiAgPGJvZHkgY2xhc3M9InRoZW1lLXJlZCI+CiAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgogICAgPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1URkdLUVFCIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0PgogICAgPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CgogICAgPCEtLSBIZWFkZXIgSVNPLk9SRyAtLT4KICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciBoZWFkZXItaXNvIGNvbnRhaW5lciIgcm9sZT0iYmFubmVyIj4KICAgICAgPGRpdiBjbGFzcz0icnViYmVyIj48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idG9wYmFyIHRvcGJhci1saWdodCI+CiAgICAgICAgPGRpdiBjbGFzcz0idG9wYmFyLWNvbnRlbnQiPgogICAgICAgICAgCgo8dWwgaWQ9Imxhbmctc3dpdGNoZXIiPgogIDxsaSBjbGFzcz0iZHJvcGRvd24iPgogICAgPGEgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBocmVmPSIjIj5mcmFuw6dhaXMgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+PC9hPgogICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgPGxpPjxhIGhyZWY9Ii9zdGFuZGFyZC8zNzMxNC5odG1sIj5FbmdsaXNoPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9ydS9zdGFuZGFyZC8zNzMxNC5odG1sIj7RgNGD0YHRgdC60LjQuTwvYT48L2xpPgogICAgPC91bD4KICA8L2xpPgo8L3VsPjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICAgIDx1bCBjbGFzcz0idG9wbGlua3MiPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgY2xhc3M9InNob3BwaW5nLWNhcnQtbGluayIgaHJlZj0iL3dlYnN0b3JlL3Nob3BwaW5nYmFza2V0P21lbWJlcklkPUlTTyZndWlsYW5nPWZyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNob3BwaW5nLWNhcnQtYmFkZ2UiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zaG9wcGluZy1jYXJ0IiBpZD0ic2hvcHBpbmdJdGVtcyI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci1jb250YWluZXIgaGVhZGVyLWltZyBoZWFkZXItaW1nLWlzbyBoZWFkZXItc2hvcnQiPgogICAgICAgIDxuYXYgY2xhc3M9Im5hdmJhciIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgICA8IS0tIEJyYW5kIGFuZCB0b2dnbGUgZ2V0IGdyb3VwZWQgZm9yIGJldHRlciBtb2JpbGUgZGlzcGxheSAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICA8YSBjbGFzcz0ibG9nbyBpc29sb2dvIiBocmVmPSIvZnIvaG9tZS5odG1sIiB0aXRsZT0iSVNPIj48L2E+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imlzb2xvZ28tcHJpbnQiPjxpbWcgc3JjPSIvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiIGFsdD0iTG9nbyBJU08gcG91ciBpbXByZXNzaW9uIi8+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci10aXRsZSBjbGVhcmZpeCI+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRpdGxlLW1lZGl1bSB0aXRsZS10aGluIj5PcmdhbmlzYXRpb24gaW50ZXJuYXRpb25hbGUgZGUgbm9ybWFsaXNhdGlvbjwvcD4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0bGUtc21hbGwgdGl0bGUtcmVkIHRleHQtcmlnaHQgaGlkZGVuLXhzIj5RdWFuZCBsZSBtb25kZSBz4oCZYWNjb3JkZTwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwhLS0gTkFWSUdBVElPTiAtLT4KICAgICAgICAgIDxuYXYgY2xhc3M9Im5hdi1jb250YWluZXIgY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlIG5hdi0zbGV2ZWxzImlkPSJvZmZjYW52YXMtbWVudSI+CgoKPGZvcm0gaWQ9Im5hdk1lbnUtc2VhcmNoTmF2IiBjbGFzcz0ibmF2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0IiByb2xlPSJzZWFyY2giPgogIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIHNlYXJjaC1pbnB1dCIgcGxhY2Vob2xkZXI9IlJlY2hlcmNoZXIiPgogICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLWJ0biI+CiAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBzZWFyY2gtc3VibWl0IiB0eXBlPSJzdWJtaXQiPgogICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNlYXJjaCI+PC9zcGFuPgogICAgICA8L2J1dHRvbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPC9mb3JtPjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2LWxldmVsMSB2ZXJ0aWNhbGluZSBub2NhcmV0Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Ob3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QXZhbnRhZ2VzPC9hPjxkaXYgY2xhc3M9J2Ryb3Bkb3duLW1lbnUgbmF2LXBhbmVsJyByb2xlPSdtZW51Jz4KICA8ZGl2IGNsYXNzPSdwYW5lbC1pbWFnZSc+CiAgICA8aW1nIHNyYz0nL2ZpbGVzL2xpdmUvc2l0ZXMvaXNvb3JnL2ZpbGVzL19ub2luZGV4L3N0cmVldC1wZWRlc3RyaWFuLWNyb3Nzd2Fsay5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nUGnDqXRvbnMgdHJhdmVyc2FudCB1bmUgcm91dGUgc3VyIHVuIHBhc3NhZ2UgcGnDqXRvbic+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvZnIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkF2YW50YWdlczwvYT48L2g0Pgo8cD5Wb3VzIHNvdWhhaXRleiBlbiBzYXZvaXIgcGx1cyAgc3VyIGxlIHLDtGxlIGRlcyBub3JtZXMgZGFucyBsZXMgcHJvZHVpdHMgZXQgc2VydmljZXMgcXVlIHZvdXMgdXRpbGlzZXo/IFZvdXMgdHJvdXZlcmV6IGljaSBsZXMgaW5mb3JtYXRpb25zIHJlY2hlcmNow6llcy48L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9pc28tYW5kLXNtZXMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UE1FPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvYmVuZWZpdHMtb2Ytc3RhbmRhcmRzLXRoZS1pc28tbWF0ZXJpYWxzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkVuIHNhdm9pciBwbHVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvaXNvLWFuZC1jb25zdW1lcnMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q29uc29tbWF0ZXVyczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2lzby1hbmQtcG9saWN5LW1ha2Vycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5M4oCZSVNPIGV0IGxlcyBvcmdhbmlzbWVzIGRlIHLDqWdsZW1lbnRhdGlvbjwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1pbi1hY3Rpb24uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Tm9ybWVzIGVuIGFjdGlvbjwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2Rpdj48IS0tIGNsb3NlIG9mIHBhbmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciI+PGEgaHJlZj0iL2ZyL2NvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uICYgY29uZm9ybWl0w6k8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvbWljcm9zY29wZS5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nU2NpZW50aXN0IHBsYWNpbmcgYSBzbGlkZSBiZW5lYXRoIGFuIG9wdGljYWwgbWljcm9zY29wZSc+CiAgICA8ZGl2IGNsYXNzPSdmYWRlLWdyYXknPjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9J3BhbmVsLXRlYXNlcic+CjxoND48YSBocmVmPScvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2g0Pgo8cD5VbiBwcm9jZXNzdXMgcXVpIHNlcnQgw6AgZMOpbW9udHJlciBxdWUgdm90cmUgcHJvZHVpdCwgc2VydmljZSwgb3Ugc3lzdMOobWUgcsOpcG9uZCBhdXggZXhpZ2VuY2VzIGTigJl1bmUgbm9ybWUuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvY2VydGlmaWNhdGlvbi5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DZXJ0aWZpY2F0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY2FzY28uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Q0FTQ088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci90aGUtaXNvLXN1cnZleS5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5MJ8OJdHVkZSBJU088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9yZXNvdXJjZXMtZm9yLWNvbmZvcm1pdHktYXNzZXNzbWVudC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5SZXNzb3VyY2VzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zZGdzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk9ERDwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjxsaSBjbGFzcz0iaGFzQ2hpbGRyZW4gZHJvcGRvd24iPjxhIGhyZWY9Ii9mci9hYm91dC11cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5MJ0lTTzwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3doYXQtd2UtZG8uaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+Tm9zIGFjdGl2aXTDqXM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvYnVzaW5lc3Mtc2VtaW5hci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nQmFjayB2aWV3IG9mIHBlb3BsZSBpbiBhIG1lZXRpbmcsIGxvb2tpbmcgYXQgYSBwcmVzZW50YXRpb24gb24gYSBzY3JlZW4uJz4KICAgIDxkaXYgY2xhc3M9J2ZhZGUtZ3JheSc+PC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ncGFuZWwtdGVhc2VyJz4KPGg0PjxhIGhyZWY9Jy9mci93aGF0LXdlLWRvLmh0bWwnIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk5vcyBhY3Rpdml0w6lzPC9hPjwvaDQ+CjxwPkTDqWNvdXZyZXogY29tbWVudCBub3VzIMOpbGFib3JvbnMgZXQgcHVibGlvbnMgZGVzIE5vcm1lcyBpbnRlcm5hdGlvbmFsZXMgZW4gbW9iaWxpc2FudCBwbHVzIGRlIDE2MCBtZW1icmVzIGV0IHBsdXMgZGUgNDUgMDAwIGV4cGVydHMuPC9wPgogIDwvZGl2Pgo8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkVsYWJvcmF0aW9uIGRlcyBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9yZXNlYXJjaC1hbmQtZWR1Y2F0aW9uLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlY2hlcmNoZTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2NhcGFjaXR5LWJ1aWxkaW5nLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlbmZvcmNlbWVudCBkZXMgY2FwYWNpdMOpczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL2VkdWNhdGlvbi1hYm91dC1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RW5zZWlnbmVtZW50IHN1ciBsZXMgbm9ybWVzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9zdHJ1Y3R1cmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RydWN0dXJlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvbWVtYmVycy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NZW1icmVzPC9hPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBkcm9wZG93biBob3ZlciI+PGEgaHJlZj0iL2ZyL25ld3NfaW5kZXguaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWN0dWFsaXTDqXMgZXQgbWFuaWZlc3RhdGlvbnM8L2E+PGRpdiBjbGFzcz0nZHJvcGRvd24tbWVudSBuYXYtcGFuZWwnIHJvbGU9J21lbnUnPgogIDxkaXYgY2xhc3M9J3BhbmVsLWltYWdlJz4KICAgIDxpbWcgc3JjPScvZmlsZXMvbGl2ZS9zaXRlcy9pc29vcmcvZmlsZXMvX25vaW5kZXgvQWxsJTIwYWJvdXQlMjBJU08tTmV3c19jYWxlbmRhci1jbG9zZS11cCUyME5vJTIweWVhci5qcGcvdGh1bWJuYWlscy84MDAnIGFsdD0nTW9udGhzIGFuZCBkYXRlcyBzaG93biBvbiBhIGNhbGVuZGFyIHdoaWxzdCB0dXJuaW5nIHRoZSBwYWdlcyB3aXRoIHNoYWxsb3cgZGVwdGggb2YgZmllbGQnPgogICAgPGRpdiBjbGFzcz0nZmFkZS1ncmF5Jz48L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSdwYW5lbC10ZWFzZXInPgo8aDQ+PGEgaHJlZj0nL2ZyL25ld3NfaW5kZXguaHRtbCcgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QWN0dWFsaXTDqXMgZXQgbWFuaWZlc3RhdGlvbnM8L2E+PC9oND4KPHA+UmVzdGV6IGluZm9ybcOpIGRlcyBkZXJuacOocmVzIG5vdXZlYXV0w6lzIGVuIG1hdGnDqHJlIGRlIG5vcm1hbGlzYXRpb24gb3UgcGFyY291cmV6IG5vcyByaWNoZXMgYXJjaGl2ZXM8L3A+CiAgPC9kaXY+Cjx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9pc29mb2N1cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NYWdhemluZSBJU09mb2N1czwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2V2ZW50cy5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5NYW5pZmVzdGF0aW9ucyBldCByw6l1bmlvbnM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZWRpYS1raXQuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+RG9zc2llciBtw6lkaWFzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvbmV3c19hcmNoaXZlLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkFjdHVhbGl0w6lzPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvZGl2PjwhLS0gY2xvc2Ugb2YgcGFuZWwgLS0+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIj48YSBocmVmPSIvZnIvZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UGFydGljaXBlcjwvYT48dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdi1sZXZlbDIgZHJvcGRvd24tbWVudSB2ZXJ0aWNhbGluZSB2ZXJ0aWNhbGluZS1kYXJrIj48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3doby1kZXZlbG9wcy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+UXVpIMOpbGFib3JlIGxlcyBub3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwzIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3RlY2huaWNhbC1jb21taXR0ZWVzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPkNvbWl0w6lzIHRlY2huaXF1ZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9vdGhlci1ib2RpZXMtZGV2ZWxvcGluZy1zdGFuZGFyZHMuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+QXV0cmVzIG9yZ2FuaXNtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9vcmdhbml6YXRpb25zLWluLWNvb3BlcmF0aW9uLXdpdGgtaXNvLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPk9yZ2FuaXNhdGlvbnMgZW4gY29vcMOpcmF0aW9uPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Sw6lmw6lyZW50aWVsczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2dldC1pbnZvbHZlZC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5Qb3VycXVvaSBz4oCZZW5nYWdlciA/PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIHJvbGU9ImJ1dHRvbiIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGRyb3Bkb3duIGluUGF0aCBvcGVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RvcmUuaHRtbCIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgcm9sZT0iYnV0dG9uIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+U3RvcmU8L2E+PHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXYtbGV2ZWwyIGRyb3Bkb3duLW1lbnUgdmVydGljYWxpbmUgdmVydGljYWxpbmUtZGFyayI+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGluUGF0aCBhY3RpdmUgZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiICBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5DYXRhbG9ndWUgZGUgbm9ybWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcHVibGljYXRpb24tbGlzdC5odG1sIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiByb2xlPSJidXR0b24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj5QdWJsaWNhdGlvbnMgZXQgcHJvZHVpdHM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJvZmZjYW52YXMtdG9nZ2xlIiBkYXRhLXRvZ2dsZT0ib2ZmY2FudmFzIj4gIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW1lbnUtaGFtYnVyZ2VyIj48L3NwYW4+PC9idXR0b24+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvbmF2PgogICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgogICAgCgoKCgoKPHNwYW4gY2xhc3M9ImhpZGRlbiIgaWQ9ImluZGV4UmVmZXJlbmNlIiBkYXRhLWluZGV4PSIzNzMxNCAtIElTTy9JRUMgOTk0NS0zOjIwMDIgLSBUZWNobm9sb2dpZXMgZGUgbCdpbmZvcm1hdGlvbiAtLSBJbnRlcmZhY2UgcG91ciBsYSBwb3J0YWJpbGl0w6kgZGVzIHN5c3TDqG1lcyAoUE9TSVgpIC0tIFBhcnRpZSAzOiBFbnZlbG9wcGUgZXQgc2VydmljZXMiPjwvc3Bhbj4KPGRpdiBjbGFzcz0ibWFpbiBjb250YWluZXIiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHJvZHVjdCI+CiAgPGRpdiBjbGFzcz0icm93IHJvdy10b3Agcm93LWxpZ2h0Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgIDxkaXYgY2xhc3M9ImJyZWFkY3J1bWItY29udGFpbmVyIHNtYWxsIj4KICAKICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIiPgogICAgCiAgICAgIDxsaT48YSBocmVmPSIvZnIvaG9tZS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1ob21lIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPjwvYT48L2xpPgogICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiPgogICAgICAgICAgICAgICAgU3RvcmUKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAo8YSBocmVmPSIvZnIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiID5DYXRhbG9ndWUgZGUgbm9ybWVzPC9hPgoKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhbmRhcmRzLWNhdGFsb2d1ZS9icm93c2UtYnktaWNzLmh0bWwiPgogICAgICAgICAgICAgICAgSUNTCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS5odG1sIj4zNTwvYT48L2xpPgogICAgCiAgICAgIDxsaT48YSBocmVmPSIvZnIvaWNzLzM1LjA2MC5odG1sIj4zNS4wNjA8L2E+PC9saT4KICAgIDxsaT5JU08vSUVDIDk5NDUtMzoyMDAyPC9saT4KICA8L29sPgoKPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9ImNhdGVnb3J5Ij53PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiIgaXRlbXByb3A9InByb2R1Y3RJRCIgaWQ9ImNzTnVtYmVyIj4zNzMxNDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iIGl0ZW1wcm9wPSJicmFuZCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KICAgICAgICA8ZGl2IGl0ZW1wcm9wPSJsb2dvIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9JbWFnZU9iamVjdCI+CiAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0idXJsIiBjb250ZW50PSJodHRwOi8vd3d3Lmlzby5vcmcvbW9kdWxlcy9pc29vcmctdGVtcGxhdGUvaW1nL2lzby9pc28tbG9nby1wcmludC5naWYiLz4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ3aWR0aCIgY29udGVudD0iMjgzIj4KICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJoZWlnaHQiIGNvbnRlbnQ9IjI2MSI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9Ik9yZ2FuaXNhdGlvbiBpbnRlcm5hdGlvbmFsZSBkZSBub3JtYWxpc2F0aW9uIj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJoZWFkaW5nLWNvbmRlbnNlZCI+CiAgICAgICAgPGgxPgogICAgICAgICAgPHN0cm9uZyBpZD0iaXRlbVJlZmVyZW5jZSIgaXRlbXByb3A9Im5hbWUiPklTTy9JRUMgOTk0NS0zOjIwMDI8L3N0cm9uZz4KICAgICAgICAgIAogICAgICAgIDwvaDE+CgogICAgICAgIDxoMiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPlRlY2hub2xvZ2llcyBkZSBsJ2luZm9ybWF0aW9uIC0tIEludGVyZmFjZSBwb3VyIGxhIHBvcnRhYmlsaXTDqSBkZXMgc3lzdMOobWVzIChQT1NJWCkgLS0gUGFydGllIDM6IEVudmVsb3BwZSBldCBzZXJ2aWNlczwvaDI+CiAgICAgICAgCiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CgogIAoKICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgPGRpdiBjbGFzcz0iY29sLW1kLTciPgoKICAgICAgPGRpdiBjbGFzcz0id2VsbCI+CiAgPGgzPgogICAgSW5mb3JtYXRpb25zIGfDqW7DqXJhbGVzCiAgICA8c3VwPjxhIGhyZWY9Ii9mci9jb250ZW50cy9kYXRhL3N0YW5kYXJkLzAzLzczLzM3MzE0LmRldGFpbC5yc3MiIGNsYXNzPSJzcy1pY29uIHNzLXNvY2lhbC1jaXJjbGUgdGV4dC13YXJuaW5nIHRleHQtc21hbGwiIGRhdGEtdG9nZ2xlPSJpc28tdG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iUydhYm9ubmVyJm5ic3A7YXV4Jm5ic3A7bWlzZXMmbmJzcDvDoCZuYnNwO2pvdXIiPiYjeEUzMTA7PC9hPjwvc3VwPgogIDwvaDM+CiAgCgogIDx1bCBjbGFzcz0icmVmaW5lIj4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxzdHJvbmc+w4l0YXQgYWN0dWVsJm5ic3A7OiZuYnNwOyZuYnNwOzwvc3Ryb25nPjxzcGFuPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWJhbi1jaXJjbGUiIHRpdGxlPSJBbm51bMOpZSI+PC9zcGFuPkFubnVsw6llPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgICAgIDxzdHJvbmc+RGF0ZSBkZSBwdWJsaWNhdGlvbiZuYnNwOzogPC9zdHJvbmc+PHNwYW4gaXRlbXByb3A9InJlbGVhc2VEYXRlIj4yMDAyLTEyPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIDxsaT4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAKICAgICAgICAgICAgPHN0cm9uZz5FZGl0aW9uJm5ic3A7Ojwvc3Ryb25nPiAxCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9saT4KICAgIAogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbGFiZWwiPkNvbWl0w6kgdGVjaG5pcXVlPC9kaXY+IDoKICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LW5hbWUgZW50cnktYmxvY2siPgogICAgICAgICAgICA8YSBocmVmPSIvZnIvY29tbWl0dGVlLzQ1MjAyLmh0bWwiPklTTy9JRUMgSlRDIDEvU0MgMjI8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5nYWdlcyBkZSBwcm9ncmFtbWF0aW9uLCBsZXVyIGVudmlyb25uZW1lbnQgZXQgaW50ZXJmYWNlcyBkZXMgbG9naWNpZWxzIGRlIHN5c3TDqG1lczwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgCiAgICA8bGk+CiAgICAgIDxkbCBjbGFzcz0iZGwtaW5saW5lIG5vLWJvdHRvbS1tYXJnaW4iPgogICAgICAgIDxkdCBjbGFzcz0iZW50cnktbGFiZWwgZW50cnktYmxvY2siPjxzdHJvbmc+SUNTIDogPC9zdHJvbmc+PC9kdD4KICAgICAgICAKICAgICAgICAgIDxkZD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktbmFtZSBlbnRyeS1ibG9jayI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+CiAgICAgICAgICAgICAgICAgIDM1LjA2MAogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LXRpdGxlIj5MYW5nYWdlcyB1dGlsaXPDqXMgZGFucyBsZXMgdGVjaG5vbG9naWVzIGRlIGwnaW5mb3JtYXRpb248L2Rpdj4KICAgICAgICAgIDwvZGQ+CiAgICAgICAgCiAgICAgIDwvZGw+CiAgICA8L2xpPgogIDwvdWw+CjwvZGl2PgoKICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgIAoKICAgIDwvZGl2PgogIDwvZGl2PgoKICAKPGRpdiBjbGFzcz0icm93IHJvdy1taWRkbGUgcm93LXRvcGxpbmUiPgogIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICA8aDM+Q3ljbGUgZGUgdmllPC9oMz4KICAgIDxwPgogICAgICBMZXMgbm9ybWVzIElTTyBzb250IHLDqWV4YW1pbsOpZXMgdG91cyBsZXMgY2lucSBhbnMKICAgIDwvcD4KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IHRoZW1lLXJlZCI+CiAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgc3RhZ2VzIj4KICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4wMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QcsOpbGltaW5haXJlPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+MTA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+UHJvcG9zaXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4yMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QcsOpcGFyYXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz4zMDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5Db21pdMOpPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duICI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIHJvbGU9ImJ1dHRvbiIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjxzdHJvbmc+NDA8L3N0cm9uZz48L3NwYW4+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+RW5xdcOqdGU8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNDAuOTkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjQwLjk5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDItMDMtMjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIFJhcHBvcnQgY29tcGxldCBkaWZmdXPDqTogRElTIGFwcHJvdXbDqSBwb3VyIGVucmVnaXN0cmVtZW50IGNvbW1lIEZESVMKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz41MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5BcHByb2JhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM1MC4wMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NTAuMDA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwMi0wNi0xMjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgVGV4dGUgZmluYWwgcmXDp3Ugb3UgRkRJUyBlbnJlZ2lzdHLDqSBwb3VyIGFwcHJvYmF0aW9uIGZvcm1lbGxlCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNTAuMjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjUwLjIwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDItMDctMTc8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIEVwcmV1dmUgZW52b3nDqWUgYXUgc2VjcsOpdGFyaWF0IG91IG1pc2UgYXUgdm90ZSBkdSBGRElTOiA4IHNlbWFpbmVzCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjNTAuNjAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjUwLjYwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDItMDktMTk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIENsw7R0dXJlIGR1IHZvdGUgRXByZXV2ZSByZXRvdXJuw6llIHBhciBsZSBzZWNyw6l0YXJpYXQKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz42MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5QdWJsaWNhdGlvbjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCI+PC9zcGFuPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM2MC4wMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NjAuMDA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwMi0wOS0zMDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWUgaW50ZXJuYXRpb25hbGUgZW4gY291cnMgZGUgcHVibGljYXRpb24KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpID4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM2MC42MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+NjAuNjA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwMi0xMi0xMzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWUgaW50ZXJuYXRpb25hbGUgcHVibGnDqWUKICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24gIj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgcm9sZT0iYnV0dG9uIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+PHN0cm9uZz45MDwvc3Ryb25nPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj5FeGFtZW48L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YWdlLWNvZGVzLmh0bWwjOTAuOTIiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWNvZGUiPjkwLjkyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YWdlLWRhdGUiPjIwMDMtMDQtMDk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFnZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIE5vcm1lIGludGVybmF0aW9uYWxlIMOgIHLDqXZpc2VyCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2xpPgogICAgICAgICAgCgogICAgICAgICAgICA8bGkgY2xhc3M9ImRyb3Bkb3duIGFsZXJ0LWRhbmdlciBhY3RpdmUiPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiByb2xlPSJidXR0b24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFnZS1jb2RlIj48c3Ryb25nPjk1Ljk5PC9zdHJvbmc+PC9zcGFuPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZ2UtdGl0bGUiPkFubnVsYXRpb248L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWN0aXZlIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhZ2UtY29kZXMuaHRtbCM5NS45OSI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtY29kZSI+OTUuOTk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhZ2UtZGF0ZSI+MjAwMy0wOC0xODwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWdlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgQW5udWxhdGlvbiBkZSBsYSBOb3JtZSBpbnRlcm5hdGlvbmFsZQogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgIAogICAgICA8L3VsPgogICAgPC9kaXY+CiAgICA8YnIvPgogICAgPGJyLz4KICAgIDxoND5Sw6l2aXNpb24mbmJzcDsvJm5ic3A7UmVjdGlmaWNhdGlmcyB0ZWNobmlxdWVzPC9oND4KICAgIDx1bCBjbGFzcz0ic3RlcHMiPgogICAgICAKICAgICAgICAgICAgPGxpIGNsYXNzPSJhbGVydCBhbGVydC1kYW5nZXIiPgogICAgICAgICAgCiAgICAgICAgPHN0cm9uZz5QcsOpY8OpZGVtbWVudDwvc3Ryb25nPjxici8+CiAgICAgICAgCiAgICAgICAgICA8YSBocmVmPSIvZnIvc3RhbmRhcmQvMjQ0MjYuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tYmFuLWNpcmNsZSIgdGl0bGU9IkFubnVsw6llIj48L3NwYW4+SVNPL0lFQyA5OTQ1LTE6MTk5NjwvYT48YnIgLz4KICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFuZGFyZC8xNzg0MS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iQW5udWzDqWUiPjwvc3Bhbj5JU08vSUVDIDk5NDUtMjoxOTkzPC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgIDxsaSBjbGFzcz0ic3RlcCBhbGVydCBhbGVydC1kYW5nZXIgYWN0aXZlIj4KICAgICAgICA8c3Ryb25nPkFjdHVlbGxlbWVudCBhbm51bMOpZTwvc3Ryb25nPjxici8+CiAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tYmFuLWNpcmNsZSIgdGl0bGU9IkFubnVsw6llIj48L3NwYW4+SVNPL0lFQyA5OTQ1LTM6MjAwMgogICAgICA8L2xpPgogICAgICAKICAgICAgICAgICAgPGxpIGNsYXNzPSJzdGVwIGFsZXJ0IGFsZXJ0LWRhbmdlciI+CiAgICAgICAgICAgIDxzdHJvbmc+UsOpdmlzw6llIHBhcjwvc3Ryb25nPjxici8+CiAgICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdGFuZGFyZC8zODc5MS5odG1sIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1iYW4tY2lyY2xlIiB0aXRsZT0iQW5udWzDqWUiPjwvc3Bhbj5JU08vSUVDIDk5NDUtMzoyMDAzPC9hPjxiciAvPgogICAgICAgIAogICAgICAgIDwvbGk+CiAgICAgIAogICAgPC91bD4KICA8L2Rpdj4KPC9kaXY+PGRpdiBjbGFzcz0icm93IHJvdy1ib3R0b20gcm93LWxpZ2h0Ij4KICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICA8aDQ+Vm91cyBhdmV6IHVuZSBxdWVzdGlvbj88L2g0PgoKPHA+Q29uc3VsdGVyIG5vdHJlJm5ic3A7PGEgaHJlZj0iL2ZyL2ZyZXF1ZW50bHktYXNrZWQtcXVlc3Rpb25zLWZhcXMuaHRtbCIgdGl0bGU9IkZvaXJlIEF1eCBRdWVzdGlvbnMgKEZBUXMpIj5GQVE8L2E+PC9wPgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxkaXYgY2xhc3M9InZjYXJkIGNvbnRhY3QgY2xlYXJmaXgiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGRpdiBjbGFzcz0iY29udGVudC1ib3ggbm8taW1hZ2UiPgo8ZGl2IGNsYXNzPSJmbiBuIj48c3BhbiBjbGFzcz0iZ2l2ZW4tbmFtZSIgaXRlbXByb3A9ImdpdmVuTmFtZSI+U2VydmljZSAmYWdyYXZlOyBsYSBjbGllbnQmZWdyYXZlO2xlPC9zcGFuPjwvZGl2PgoKPGRpdiBjbGFzcz0idGVsIiBpdGVtcHJvcD0idGVsZXBob25lIj4rNDEgMjIgNzQ5IDA4IDg4PC9kaXY+Cgo8ZGl2IGNsYXNzPSJlbWFpbCIgaXRlbXByb3A9ImVtYWlsIj48YSBocmVmPSJtYWlsdG86Y3VzdG9tZXJzZXJ2aWNlQGlzby5vcmciPmN1c3RvbWVyc2VydmljZUBpc28ub3JnPC9hPjwvZGl2PgoKPGhyIC8+CjxkaXYgY2xhc3M9Im5vdGUiPgo8cCBjbGFzcz0ic21hbGwiPkhvcmFpcmVzIGQmcnNxdW87b3V2ZXJ0dXJlOjxiciAvPgpEZSBsdW5kaSAmYWdyYXZlOyB2ZW5kcmVkaSAtIDA5OjAwLTEyOjAwLCAxNDowMC0xNzowMCAoVVRDKzEpPC9wPgo8L2Rpdj4KPC9kaXY+CjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgIDxkaXYgY2xhc3M9IndlbGwgdGV4dC1jZW50ZXIiPgogIDxoND5TdWl2ZXogbCYjMzk7YWN0dWFsaXQmZWFjdXRlOyBkZSBsJiMzOTtJU088L2g0PgoKPHA+SW5zY3JpdmV6LXZvdXMgJmFncmF2ZTsgbm90cmUgTmV3c2xldHRlciAoZW4gYW5nbGFpcykgcG91ciBzdWl2cmUgbm9zIGFjdHVhbGl0JmVhY3V0ZTtzLCBwb2ludHMgZGUgdnVlIGV0IGluZm9ybWF0aW9ucyBzdXIgbm9zIHByb2R1aXRzLjwvcD48cD48YSBjbGFzcz0iZmFuY3lib3ggZmFuY3lib3guaWZyYW1lIGJ0biBidG4tZGVmYXVsdCIgaHJlZj0iaHR0cHM6Ly9jb25maXJtc3Vic2NyaXB0aW9uLmNvbS9oL2QvMzQxMkRBNzk5M0FDM0I3QyI+U3Vic2NyaWJlPC9hPjwvcD48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CjwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1haW4gY29udGFpbmVyIGJyZWFkY3J1bWItY29udGFpbmVyIHRoZW1lLXJlZCI+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggaGlkZGVuLXh4cyI+CiAgICAgICAgICA8IS0tIEJSRUFEQ1JVTUIgLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJicmVhZGNydW1iLWNvbnRhaW5lciBzbWFsbCI+CiAgCiAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2hvbWUuaHRtbCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24taG9tZSIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48L2E+PC9saT4KICAgIAogICAgICAgIDxsaT4KICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9zdG9yZS5odG1sIj4KICAgICAgICAgICAgICAgIFN0b3JlCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAKICAgICAgICA8L2xpPgogICAgICAKICAgICAgICA8bGk+CiAgICAgICAgICAKPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIiA+Q2F0YWxvZ3VlIGRlIG5vcm1lczwvYT4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgICAgPGxpPgogICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy1jYXRhbG9ndWUvYnJvd3NlLWJ5LWljcy5odG1sIj4KICAgICAgICAgICAgICAgIElDUwogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9mci9pY3MvMzUuaHRtbCI+MzU8L2E+PC9saT4KICAgIAogICAgICA8bGk+PGEgaHJlZj0iL2ZyL2ljcy8zNS4wNjAuaHRtbCI+MzUuMDYwPC9hPjwvbGk+CiAgICA8bGk+SVNPL0lFQyA5OTQ1LTM6MjAwMjwvbGk+CiAgPC9vbD4KCjwvZGl2PjxkaXYgY2xhc3M9ImNsZWFyIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNCBoaWRkZW4tcHJpbnQiPgogICAgICAgICAgPHAgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGNsYXNzPSJhY2NvcmRpb24tdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjY29sbGFwc2VTaXRlbWFwIiB0YXJnZXQ9Il9zZWxmIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIKICAgICAgICAgICAgICAgYXJpYS1jb250cm9scz0iY29sbGFwc2VTaXRlbWFwIj5QbGFuIGR1IHNpdGU8L2E+CiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBib3JkZXItdG9wIiBpZD0iY29sbGFwc2VTaXRlbWFwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgPCEtLSBTSVRFTUFQIC0tPgogICAgICAgICAgPG5hdiBjbGFzcz0ic2l0ZW1hcC1mb290ZXIgY2xlYXJmaXggc21hbGwiPjx1bCBjbGFzcz0ibmF2LWxldmVsMSBsaXN0LWlubGluZS00IGNsZWFyZml4Ij48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGZpcnN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0YW5kYXJkcy5odG1sIj5Ob3JtZXM8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9iZW5lZml0cy1vZi1zdGFuZGFyZHMuaHRtbCI+QXZhbnRhZ2VzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvcG9wdWxhci1zdGFuZGFyZHMuaHRtbCI+TGVzIG5vcm1lcyBsZXMgcGx1cyBjb25udWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvY29uZm9ybWl0eS1hc3Nlc3NtZW50Lmh0bWwiPkNlcnRpZmljYXRpb24gJiBjb25mb3JtaXTDqTwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3NkZ3MuaHRtbCI+T0REPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2Fib3V0LXVzLmh0bWwiPkwnSVNPPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvd2hhdC13ZS1kby5odG1sIj5Ob3MgYWN0aXZpdMOpczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3N0cnVjdHVyZS5odG1sIj5TdHJ1Y3R1cmU8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9tZW1iZXJzLmh0bWwiPk1lbWJyZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9uZXdzX2luZGV4Lmh0bWwiPkFjdHVhbGl0w6lzIGV0IG1hbmlmZXN0YXRpb25zPC9hPjwvbGk+PC91bD48IS0tIGNsb3NlIG9mIHVsIGxldmVsIC0tPjwvbGk+PGxpIGNsYXNzPSJoYXNDaGlsZHJlbiBob3ZlciI+PGEgaHJlZj0iL2ZyL2RldmVsb3Bpbmctc3RhbmRhcmRzLmh0bWwiPlBhcnRpY2lwZXI8L2E+PHVsIGNsYXNzPSJuYXYtbGV2ZWwyIGxpc3QtdW5zdHlsZWQiPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci93aG8tZGV2ZWxvcHMtc3RhbmRhcmRzLmh0bWwiPlF1aSDDqWxhYm9yZSBsZXMgbm9ybWVzPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZGVsaXZlcmFibGVzLWFsbC5odG1sIj5Sw6lmw6lyZW50aWVsczwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL2dldC1pbnZvbHZlZC5odG1sIj5Qb3VycXVvaSBz4oCZZW5nYWdlciA/PC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIGxhc3RJbkxldmVsIj48YSBocmVmPSIvZnIvcmVzb3VyY2VzLmh0bWwiPlJlc3NvdXJjZXM8L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9saT48bGkgY2xhc3M9Imhhc0NoaWxkcmVuIGhvdmVyIGluUGF0aCBsYXN0SW5MZXZlbCI+PGEgaHJlZj0iL2ZyL3N0b3JlLmh0bWwiPlN0b3JlPC9hPjx1bCBjbGFzcz0ibmF2LWxldmVsMiBsaXN0LXVuc3R5bGVkIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gaW5QYXRoIGFjdGl2ZSBmaXJzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9zdGFuZGFyZHMtY2F0YWxvZ3VlL2Jyb3dzZS1ieS1pY3MuaHRtbCIgPkNhdGFsb2d1ZSBkZSBub3JtZXM8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9wdWJsaWNhdGlvbi1saXN0Lmh0bWwiPlB1YmxpY2F0aW9ucyBldCBwcm9kdWl0czwvYT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L2xpPjwvdWw+PCEtLSBjbG9zZSBvZiB1bCBsZXZlbCAtLT48L25hdj48ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8Zm9vdGVyIHJvbGU9ImNvbnRlbnRpbmZvIiBjbGFzcz0iZm9vdGVyLWlzbyBjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItbGlua3MgY2VudGVyLWJsb2NrIj4KICAgICAgICAgIDwhLS0gRk9PVEVSIExJTktTIC0tPgogICAgICAgICAgPG5hdiA+PHVsIGNsYXNzPSJsaXN0LWlubGluZSBjbGVhcmZpeCB2ZXJ0aWNhbGluZSBuYXYtbGV2ZWwxIj48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gZmlyc3RJbkxldmVsIj48YSBocmVmPSIvZnIvaXNvLW5hbWUtYW5kLWxvZ28uaHRtbCI+Tm9tIGV0IGxvZ28gZGUgbCdJU088L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4iPjxhIGhyZWY9Ii9mci9wcml2YWN5LWFuZC1jb3B5cmlnaHQuaHRtbCI+Q29uZmlkZW50aWFsaXTDqSBldCBkcm9pdCBkJ2F1dGV1cjwvYT48L2xpPjxsaSBjbGFzcz0ibm9DaGlsZHJlbiI+PGEgaHJlZj0iL2ZyL3NpdGVtYXAuaHRtbCI+UGxhbiBkdSBzaXRlPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvd29ya2luZy13aXRoLWlzby5odG1sIiA+RW1wbG9pPC9hPjwvbGk+PGxpIGNsYXNzPSJub0NoaWxkcmVuIj48YSBocmVmPSIvZnIvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMtZmFxcy5odG1sIj5GQVE8L2E+PC9saT48bGkgY2xhc3M9Im5vQ2hpbGRyZW4gbGFzdEluTGV2ZWwiPjxhIGhyZWY9Ii9mci9jb250YWN0LWlzby5odG1sIj5Db250YWN0ZXIgbCdJU088L2E+PC9saT48L3VsPjwhLS0gY2xvc2Ugb2YgdWwgbGV2ZWwgLS0+PC9uYXY+PGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlci1zb2NpYWwgc3MtaWNvbiBjbGVhcmZpeCI+CiAgICAgICAgICA8dWwgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgogICAgICAgICAgICA8bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL3d3dy5pc28ub3JnIj4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iRmFjZWJvb2siPu+YkDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaXRlbXByb3A9InNhbWVBcyIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaXNvc3RhbmRhcmRzIiB0aXRsZT0iVHdpdHRlciI+75iRPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBpdGVtcHJvcD0ic2FtZUFzIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9QbGFuZXRJU08iIHRpdGxlPSJZb3VUdWJlIj7vmLA8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9pc28taW50ZXJuYXRpb25hbC1vcmdhbml6YXRpb24tZm9yLXN0YW5kYXJkaXphdGlvbiIgdGl0bGU9IkxpbmtlZGluIj7vmJI8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJsYXN0Y29sIj48YSBpdGVtcHJvcD0ic2FtZUFzIiAgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZsaWNrci5jb20vcGhvdG9zL2lzb3N0YW5kYXJkcyIgdGl0bGU9IkZsaWNrciI+75mAPC9hPjwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXNtYWxsIj5Ob3VzIG5vdXMgZW5nYWdlb25zIMOgIGNlIHF1ZSBub3RyZSBzaXRlIFdlYiBzb2l0IGFjY2Vzc2libGUgw6AgdG91cy4gUG91ciB0b3V0ZSBxdWVzdGlvbiBvdSBzdWdnZXN0aW9uIGNvbmNlcm5hbnQgbCdhY2Nlc3NpYmlsaXTDqSBkdSBzaXRlLCA8YSBocmVmPSJtYWlsdG86d2VibWFzdGVyQGlzby5vcmc/c3ViamVjdD1BY2Nlc3NpYmlsaXR5IiBzdHlsZT0id2hpdGUtc3BhY2U6IG5vd3JhcCI+Y29udGFjdGV6LW5vdXM8L2E+LjwvcD4KICAgICAgICA8c21hbGw+PGEgaHJlZj0iI2NvcHlyaWdodCIgdGFyZ2V0PSJfc2VsZiIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VDb3B5cmlnaHQiPsKpIFRvdXMgZHJvaXRzIHLDqXNlcnbDqXM8L2E+IDxzcGFuIGlkPSJjb3B5cmlnaHQiIGNsYXNzPSJjb2xsYXBzZSI+TGUgbWF0w6lyaWVsIHB1Ymxpw6kgc3VyIElTTy5vcmcgZXN0IHN1amV0IGF1eCBtw6ptZXMgY29uZGl0aW9ucyBlbiBtYXRpw6hyZSBkZSBkcm9pdHMgZOKAmWF1dGV1ciBxdWUgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPIGV0IHNvbiBlbXBsb2kgZXN0IGNvbmRpdGlvbm7DqSBwYXIgbOKAmWFjY2VwdGF0aW9uLCBwYXIgbOKAmXV0aWxpc2F0ZXVyLCBkZXMgY29uZGl0aW9ucyBkZSBs4oCZSVNPIGVuIG1hdGnDqHJlIGRlIGRyb2l0cyBk4oCZYXV0ZXVyIHLDqWdpc3NhbnQgbGVzIHB1YmxpY2F0aW9ucyBkZSBs4oCZSVNPLiBUb3V0ZSB1dGlsaXNhdGlvbiBkdSBtYXTDqXJpZWwgY29uY2VybsOpLCB5IGNvbXByaXMgc2EgcmVwcm9kdWN0aW9uIGludMOpZ3JhbGUgb3UgcGFydGllbGxlIHZlcnMgdW4gYXV0cmUgc2l0ZSBJbnRlcm5ldCwgcmVxdWllcnQgbOKAmWF1dG9yaXNhdGlvbiDDqWNyaXRlIGRlIGzigJlJU08uIFRvdXRlIGRlbWFuZGUgw6AgY2V0IGVmZmV0IGRvaXQgw6p0cmUgYWRyZXNzw6llIMOgIDxhIGhyZWY9Im1haWx0bzpjb3B5cmlnaHRAaXNvLm9yZyI+Y29weXJpZ2h0QGlzby5vcmc8L2E+Ljwvc3Bhbj48L3NtYWxsPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgoKICAgIAoKCiAgPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:08 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/37315.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=DF6503265C49894F140C12E529E9EE3F; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:09 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:10 GMT
- request:
    method: get
    uri: https://www.iso.org/contents/data/standard/05/05/50516.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=386093450.36895.0000; path=/
      - JSESSIONID=BF769BF8E7725E87C7AC336B7B2807FD; Path=/; HttpOnly
      Location:
      - "/standard/50516.html"
      Content-Length:
      - '0'
      Date:
      - Tue, 16 Jul 2019 14:07:10 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:10 GMT
- request:
    method: get
    uri: https://www.iso.org/standard/50516.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=F4E78A657DFF39BE8012778B9B980E61; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:11 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:12 GMT
- request:
    method: get
    uri: https://www.iso.org/fr/standard/50516.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.iso.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Expires:
      - Wed, 09 May 1979 05:30:00 GMT
      Cache-Control:
      - no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0
      Pragma:
      - no-cache
      Set-Cookie:
      - BIGipServerpool_prod_iso_www-jahia=402870666.36895.0000; path=/
      - JSESSIONID=9D328337C65522E1D750C11B8CD39CB8; Path=/; HttpOnly
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Tue, 16 Jul 2019 14:07:13 GMT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 16 Jul 2019 14:07:14 GMT
recorded_with: VCR 5.0.0
